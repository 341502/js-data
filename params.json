{"name":"Js-data","tagline":"All your data are belong to you...","body":"<img src=\"https://raw.githubusercontent.com/js-data/js-data/master/js-data.png\" alt=\"js-data logo\" title=\"js-data\" align=\"right\" width=\"64\" height=\"64\" />\r\n\r\n## js-data  [![Stories in Backlog](https://badge.waffle.io/js-data/js-data.svg?label=backlog&title=Backlog)](http://waffle.io/js-data/js-data) [![Stories in Ready](https://badge.waffle.io/js-data/js-data.svg?label=ready&title=Ready)](http://waffle.io/js-data/js-data) [![Stories in progress](https://badge.waffle.io/js-data/js-data.svg?label=in%20progress&title=In%20Progress)](http://waffle.io/js-data/js-data)\r\n\r\nInspired by [Ember Data](https://github.com/emberjs/data), js-data is the model layer you've been craving. It consists of a convenient framework-agnostic, in-memory cache for managing your data, which users adapters to communicate with various persistence layers.\r\n\r\nYou can use the [http adapter](http://www.js-data.io/js-data-http), which is perfect for communicating with your RESTful backend. You could also use the [localStorage adapter](http://www.js-data.io/js-data-localstorage). More adapters are coming, and you're free to implement your own.\r\n\r\nUnlike Backbone and Ember Models, js-data does not require the use of getters and setters, and doesn't wrap your data with custom classes if you don't want it to. js-data's internal dirty-checking (via [observe-js](https://github.com/Polymer/observe-js) or `Object.observe` in supporting browsers) allows for powerful use cases and an easy avenue for implementing your own [3-way data-binding](https://www.firebase.com/blog/2013-10-04-firebase-angular-data-binding.html).\r\n\r\nSupporting relations, computed properties, model lifecycle control and a slew of other features, js-data is the tool for giving your data the respect it deserves.\r\n\r\n__Latest Release:__ [0.4.0](https://github.com/js-data/js-data/releases/tag/0.4.0)\r\n\r\njs-data is pre-alpha. The API is subject to change, though the current api is well tested.\r\n\r\nIf you want to use js-data, keep a close eye on the changelog. 1.0.0 will introduce strict semver (until then, minor number is bumped for breaking changes).\r\n\r\n## Quick Start\r\n`bower install --save js-data js-data-http` or `npm install --save js-data js-data-http`.\r\n\r\nLoad `js-data-http.js` after `js-data.js`.\r\n\r\n```js\r\nvar dataStore = new JSData.DS();\r\n\r\ndataStore.adapters.DSHttpAdapter = new DSHttpAdapter();\r\n\r\n// use http by default for async operations\r\ndataStore.defaults.defaultAdapter = 'DSHttpAdapter';\r\n\r\n// simplest model definition\r\nvar User = dataStore.defineResource('user');\r\n\r\nUser.find(1).then(function (user) {\r\n  user; // { id: 1, name: 'John' }\r\n});\r\n```\r\n\r\nAll your data are belong to you...\r\n\r\n## API\r\n- [DS](DS)\r\n- [DSHttpAdapter](DSHttpAdapter)\r\n- [DSLocalStorageAdapter](DSLocalStorageAdapter)\r\n- [DSFirebaseAdapter](DSFirebaseAdapter)\r\n- [Schemator](Schemator)\r\n\r\n## Changelog\r\n[CHANGELOG.md](https://github.com/js-data/js-data/blob/master/CHANGELOG.md)\r\n\r\n## Version Migration\r\n[TRANSITION.md](https://github.com/js-data/js-data/blob/master/TRANSITION.md)\r\n\r\n## Community\r\n- [Mailing List](https://groups.io/org/groupsio/jsdata) - Ask your questions!\r\n- [Issues](https://github.com/js-data/js-data/issues) - Found a bug? Feature request? Submit an issue!\r\n- [GitHub](https://github.com/js-data/js-data) - View the source code for js-data.\r\n- [Contributing Guide](https://github.com/js-data/js-data/blob/master/CONTRIBUTING.md)\r\n\r\n## Contributing\r\n\r\nFirst, feel free to contact me with questions. [Mailing List](https://groups.io/org/groupsio/jsdata). [Issues](https://github.com/js-data/js-data/issues).\r\n\r\n1. Contribute to the issue that is the reason you'll be developing in the first place\r\n1. Fork js-data\r\n1. `git clone https://github.com/<you>/js-data.git`\r\n1. `cd js-data; npm install; bower install;`\r\n1. `grunt go` (builds and starts a watch)\r\n1. (in another terminal) `grunt karma:dev` (runs the tests)\r\n1. Write your code, including relevant documentation and tests\r\n1. Submit a PR and we'll review\r\n\r\n## License\r\n\r\nCopyright (C) 2014 Jason Dobry\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\nof the Software, and to permit persons to whom the Software is furnished to do\r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}