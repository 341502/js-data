{"name":"Js-data","tagline":"Robust framework-agnostic in-memory data store.","body":"<img src=\"https://raw.githubusercontent.com/js-data/js-data/master/js-data.png\" alt=\"js-data logo\" title=\"js-data\" align=\"right\" width=\"64\" height=\"64\" />\r\n\r\n## JSData [![Slack Status][sl_b]][slack] [![npm version][npm_b]][npm_l] [![Circle CI][circle_b]][circle_l] [![npm downloads][dn_b]][dn_l] [![Coverage Status][cov_b]][cov_l] [![Codacy][cod_b]][cod_l]\r\n\r\nInspired by [Ember Data][ember], __JSData__ is the model layer you've been\r\ncraving. It consists of a convenient __framework-agnostic__, __in-memory store__\r\nfor managing your data, which uses __adapters__ to communicate with various\r\n__persistence layers__.\r\n\r\nThe most commonly used adapter is the [http adapter][http], which is perfect for\r\ncommunicating with your RESTful backend. [localStorage][3], [localForage][4],\r\n[firebase][5] and [other adapters][6] are already available. On the server you\r\ncould hook up to the [SQL adapter (Postgres/MySQL/MariaDB/SQLite3)][7] and add\r\nin the [Redis adapter][8] as a caching layer for your read endpoints. More\r\nadapters are coming, and you're free to implement your own. See [Adapters][9].\r\n\r\nUnlike some libraries, JSData does not require the use of getters and setters,\r\nand doesn't decorate your data with a bunch of cruft. JSData's internal change\r\ndetection (via [observe-js][10] or `Object.observe` in supporting browsers)\r\nallows for powerful use cases and an easy avenue for implementing your own\r\n[3-way data-binding][11].\r\n\r\nSupporting relations, computed properties, support for Node and the Browser,\r\nmodel lifecycle control and a slew of other features, JSData is the tool for\r\n[giving your data the respect it deserves][12].\r\n\r\nWritten in ES6 and built for modern web development, JSData will save you\r\nthousands of lines of code _and_ make you cooler.\r\n\r\nSupport is handled via the [Slack channel][slack] or the [Mailing List][ml].\r\n\r\n##### Looking for contributors!\r\n\r\nJSData is getting popular and becoming a lot of work for me. I could use help\r\nwith tests, documentation, demos/examples, and adapters. Contact me if you wan\r\nto help! jason dot dobry at gmail dot com\r\n\r\n[![MtnWestJS Conf 2015 Presentation][mtn_b]][mtn_l]\r\n\r\n### Dependencies\r\n\r\nJSData requires the presence of the ES6-spec (ES2015) `Promise` constructor in\r\nthe global environment. In the browser, `window.Promise` must be available. In\r\nNode, `global.Promise` must be available. Here is a handy library for\r\npolyfilling: https://github.com/jakearchibald/es6-promise.\r\n\r\nIf you can't polyfill the environment, then configure JSData to use a specific\r\n`Promise` constructor directly: `JSData.DSUtils.Promise = MyPromiseLib;`.\r\nThis direct configuration method is useful for telling JSData to use the\r\nBluebird library or Angular's `$q`, etc.\r\n\r\n### Quick Start\r\n`bower install --save js-data js-data-http` or `npm install --save js-data js-data-http`.\r\n\r\nLoad `js-data-http.js` after `js-data.js`. See [installation instructions][inst]\r\nfor making js-data part of your r.js/browserify/webpack build.\r\n\r\n```js\r\n// you can also require \"js-data\" if you're using AMD/CommonJS\r\n// e.g. var JSData = require('js-data'); var DSHttpAdapter = require('js-data-http');\r\nvar store = new JSData.DS();\r\n\r\n// register and use http by default for async operations\r\nstore.registerAdapter('http', new DSHttpAdapter(), { default: true });\r\n\r\n// simplest model definition, just pass the name instead of an options hash\r\n// this is the same as \"store.defineResource({ name: 'user' })\"\r\nvar User = store.defineResource('user');\r\n\r\n// Usually you'll define a resource by passing options\r\nvar Comment = store.defineResource({\r\n  name: 'comment',\r\n  relations: {\r\n    belongsTo: {\r\n      user: {\r\n        // \"join\" field, name of field on a comment\r\n        // that is the primary key of the parent user\r\n        localKey: 'userId',\r\n\r\n        // name of the field on the comment where the\r\n        // parent user will be attached to the comment\r\n        // by js-data\r\n        localField: 'user'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nvar user;\r\n\r\n// Example CRUD operations with default configuration\r\n// See http://www.js-data.io/docs/dsfind\r\nUser.find(1)\r\n  .then(function (_user) {\r\n    _user; // { id: 1, name: 'John' }\r\n\r\n    // See http://www.js-data.io/docs/dsis\r\n    User.is(_user); // true\r\n    Comment.is(_user); // false\r\n\r\n    // The user is in the store now\r\n    // See http://www.js-data.io/docs/dsget\r\n    User.get(_user.id); // { id: 1, name: 'John' }\r\n\r\n    user = _user;\r\n\r\n    // No need for another GET request, will resolve immediately\r\n    // See http://www.js-data.io/docs/dsfind\r\n    return User.find(1);\r\n  })\r\n  .then(function (_user) {\r\n    user === _user; // true\r\n\r\n    // PUT /user/1 {name:\"Johnny\"}\r\n    // See http://www.js-data.io/docs/dsupdate\r\n    return User.update(user.id, { name: 'Johnny' });\r\n  })\r\n  .then(function (_user) {\r\n    // identity mapping at play\r\n    user === _user; // true\r\n    user === User.get(_user.id); // true\r\n\r\n    user; // { id: 1, name: 'Johnny' }\r\n\r\n    user.name = 'Billy';\r\n\r\n    // PUT /user/1 {id:1,name:\"Billy\"}\r\n    // See http://www.js-data.io/docs/dssave\r\n    return User.save(1);\r\n  })\r\n  .then(function (_user) {\r\n    // identity mapping at play\r\n    user === _user; // true\r\n    user === User.get(_user.id); // true\r\n\r\n    user; // { id: 1, name: 'Johnny' }\r\n\r\n    // DELETE /user/1\r\n    // See http://www.js-data.io/docs/dsdestroy\r\n    return User.destroy(1);\r\n  })\r\n  .then(function () {\r\n    // The user has also been removed from the in-memory store\r\n    User.get(1); // undefined\r\n  });\r\n```\r\n\r\nAll your data are belong to you...\r\n\r\n### Guides\r\n- [Getting Started with js-data](http://www.js-data.io/docs/home)\r\n- [Resources/Models](http://www.js-data.io/docs/resources)\r\n- [Working with the Data Store](http://www.js-data.io/docs/working-with-the-data-store)\r\n- [Adapters](http://www.js-data.io/docs/working-with-adapters)\r\n- [Model Lifecycle](http://www.js-data.io/docs/model-lifecycle)\r\n- [Custom Instance Behavior](http://www.js-data.io/docs/custom-instance-behavior)\r\n- [Computed Properties](http://www.js-data.io/docs/computed-properties)\r\n- [Relations](http://www.js-data.io/docs/relations)\r\n- [Schemata & Validation](http://www.js-data.io/docs/schemata--validation)\r\n- [JSData on the server](http://www.js-data.io/docs/jsdata-on-the-server)\r\n- [Angular + JSData](http://www.js-data.io/docs/js-data-angular)\r\n- [FAQ](http://www.js-data.io/docs/faq)\r\n\r\nSee an issue with or have a suggestion for the documentation? You can suggest edits right on the documentation pages! (There's a link at the top right of each page.)\r\n\r\n### API Documentation\r\n- [DS](http://www.js-data.io/docs/ds)\r\n- [Configuration Options](http://www.js-data.io/docs/dsdefaults)\r\n- [DSFirebaseAdapter](http://www.js-data.io/docs/dsfirebaseadapter)\r\n- [DSHttpAdapter](http://www.js-data.io/docs/dshttpadapter)\r\n- [DSLevelUpAdapter](http://www.js-data.io/docs/dslevelupadapter)\r\n- [DSLocalForageAdapter](http://www.js-data.io/docs/dslocalforageadapter)\r\n- [DSLocalStorageAdapter](http://www.js-data.io/docs/dslocalstorageadapter)\r\n- [DSMongoDBAdapter](http://www.js-data.io/docs/dsmongodbadapter)\r\n- [DSNeDBAdapter](http://www.js-data.io/docs/dsnedbadapter)\r\n- [DSRedisAdapter](http://www.js-data.io/docs/dsredisadapter)\r\n- [DSRethinkDBAdapter](http://www.js-data.io/docs/dsrethinkdbadapter)\r\n- [DSSqlAdapter](http://www.js-data.io/docs/dssqladapter)\r\n- [js-data-schema](http://www.js-data.io/docs/js-data-schema)\r\n\r\n### Changelog\r\n[CHANGELOG.md](https://github.com/js-data/js-data/blob/master/CHANGELOG.md)\r\n\r\n### Community\r\n- [Slack Channel](http://slack.js-data.io) [![Slack Status][sl_b]][slack] - Better than IRC!\r\n- [Announcements](http://www.js-data.io/blog)\r\n- [Mailing List](ml) - Ask your questions!\r\n- [Issues](https://github.com/js-data/js-data/issues) - Found a bug? Feature request? Submit an issue!\r\n- [GitHub](https://github.com/js-data/js-data) - View the source code for JSData.\r\n- [Contributing Guide](https://github.com/js-data/js-data/blob/master/CONTRIBUTING.md)\r\n\r\n### Contributing\r\n\r\nFirst, support is handled via the [Slack Channel][slack] and the\r\n[Mailing List][ml]. Ask your questions there.\r\n\r\nWhen submitting issues on GitHub, please include as much detail as possible to\r\nmake debugging quick and easy.\r\n\r\n- good - Your versions of Angular, JSData, etc, relevant console logs/error,\r\ncode examples that revealed the issue\r\n- better - A [plnkr](http://plnkr.co/), [fiddle](http://jsfiddle.net/), or\r\n[bin](http://jsbin.com/?html,output) that demonstrates the issue\r\n- best - A Pull Request that fixes the issue, including test coverage for the\r\nissue and the fix\r\n\r\n[Github Issues](https://github.com/js-data/js-data/issues).\r\n\r\n#### Pull Requests\r\n\r\n1. Contribute to the issue/discussion that is the reason you'll be developing in\r\nthe first place\r\n1. Fork js-data\r\n1. `git clone git@github.com:<you>/js-data.git`\r\n1. `cd js-data; npm install; bower install;`\r\n1. Write your code, including relevant documentation and tests\r\n1. Run `npm test` (build and test)\r\n1. Your code will be linted and checked for formatting, the tests will be run\r\n1. The `dist/` folder & files will be generated, do NOT commit `dist/*`! They\r\nwill be committed when a release is cut.\r\n1. Submit your PR and we'll review!\r\n1. Thanks!\r\n\r\n### License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Jason Dobry\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n[sl_b]: http://slack.js-data.io/badge.svg\r\n[npm_b]: https://img.shields.io/npm/v/js-data.svg?style=flat\r\n[npm_l]: https://www.npmjs.org/package/js-data\r\n[circle_b]: https://img.shields.io/circleci/project/js-data/js-data/master.svg?style=flat\r\n[circle_l]: https://circleci.com/gh/js-data/js-data/tree/master\r\n[dn_b]: https://img.shields.io/npm/dm/js-data.svg?style=flat\r\n[dn_l]: https://www.npmjs.org/package/js-data\r\n[cov_b]: https://img.shields.io/coveralls/js-data/js-data/master.svg?style=flat\r\n[cov_l]: https://coveralls.io/github/js-data/js-data?branch=master\r\n[cod_b]: https://img.shields.io/codacy/88b55f71c45a47838d24ed1e5fd2476c.svg\r\n[cod_l]: https://www.codacy.com/app/jasondobry/js-data/dashboard\r\n\r\n[ember]: https://github.com/emberjs/data\r\n[http]: http://www.js-data.io/docs/dshttpadapter\r\n[3]: http://www.js-data.io/docs/dslocalstorageadapter\r\n[4]: http://www.js-data.io/docs/dslocalforageadapter\r\n[5]: http://www.js-data.io/docs/dsfirebaseadapter\r\n[6]: http://www.js-data.io/docs/working-with-adapters\r\n[7]: http://www.js-data.io/docs/dssqladapter\r\n[8]: http://www.js-data.io/docs/dsredisadapter\r\n[9]: http://www.js-data.io/docs/working-with-adapters\r\n[10]: https://github.com/Polymer/observe-js\r\n[11]: https://www.firebase.com/blog/2013-10-04-firebase-angular-data-binding.html\r\n[12]: http://confreaks.tv/videos/mwjs2015-give-your-data-the-respect-it-deserves\r\n[mtn_b]: http://img.youtube.com/vi/8wxnnJA9FKw/0.jpg\r\n[mtn_l]: https://www.youtube.com/watch?v=8wxnnJA9FKw\r\n\r\n[inst]: http://www.js-data.io/docs#use-with-webpack\r\n\r\n[slack]: http://slack.js-data.io\r\n[ml]: https://groups.io/org/groupsio/jsdata","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}