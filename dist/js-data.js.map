{"version":3,"file":"js-data.js","sources":["../.tmp/src/utils.js","../.tmp/src/decorators.js","../.tmp/src/Query.js","../.tmp/lib/mindex/utils.js","../.tmp/lib/mindex/index.js","../.tmp/src/Collection.js","../.tmp/src/Record.js","../.tmp/src/Schema.js","../.tmp/src/Mapper.js","../.tmp/src/Container.js","../.tmp/src/LinkedCollection.js","../.tmp/src/DataStore.js","../.tmp/src/index.js"],"sourcesContent":["/**\n * @name utils\n * @memberof module:js-data\n * @type {Object}\n * @property {Function} addHiddenPropsToTarget TODO\n * @property {Function} classCallCheck TODO\n * @property {Function} copy TODO\n * @property {Function} deepMixIn TODO\n * @property {Function} eventify TODO\n * @property {Function} extend TODO\n * @property {Function} fillIn TODO\n * @property {Function} fromJson TODO\n * @property {Function} get TODO\n * @property {Function} getSuper TODO\n * @property {Function} intersection TODO\n * @property {Function} isArray TODO\n * @property {Function} isBlacklisted TODO\n * @property {boolean} isBrowser TODO\n * @property {Function} isBoolean TODO\n * @property {Function} isFunction TODO\n * @property {Function} isInteger TODO\n * @property {Function} isNull TODO\n * @property {Function} isNumber TODO\n * @property {Function} isObject TODO\n * @property {Function} isRegExp TODO\n * @property {Function} isSorN TODO\n * @property {Function} isString TODO\n * @property {Function} isUndefined TODO\n * @property {Function} possibleConstructorReturn TODO\n * @property {Function} reject TODO\n * @property {Function} resolve TODO\n * @property {Function} set TODO\n * @property {Function} toJson TODO\n */\nconst INFINITY = 1 / 0;\nconst MAX_INTEGER = 1.7976931348623157e+308;\nconst BOOL_TAG = '[object Boolean]';\nconst DATE_TAG = '[object Date]';\nconst FUNC_TAG = '[object Function]';\nconst NUMBER_TAG = '[object Number]';\nconst OBJECT_TAG = '[object Object]';\nconst REGEXP_TAG = '[object RegExp]';\nconst STRING_TAG = '[object String]';\nconst objToString = Object.prototype.toString;\nconst PATH = /^(.+)\\.(.+)$/;\nconst toInteger = function (value) {\n    if (!value) {\n        return 0;\n    }\n    // Coerce to number\n    value = +value;\n    if (value === INFINITY || value === -INFINITY) {\n        const sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n    }\n    const remainder = value % 1;\n    return value === value ? (remainder ? value - remainder : value) : 0;\n};\nconst toStr = function (value) {\n    return objToString.call(value);\n};\nconst isPlainObject = function (value) {\n    return (!!value && typeof value === 'object' && value.constructor === Object);\n};\nconst mkdirP = function (object, path) {\n    if (!path) {\n        return object;\n    }\n    const parts = path.split('.');\n    parts.forEach(function (key) {\n        if (!object[key]) {\n            object[key] = {};\n        }\n        object = object[key];\n    });\n    return object;\n};\nconst utils = {\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    Promise: Promise,\n    /**\n     * Shallow copy properties from src to dest that meet the following criteria:\n     * - own enumerable\n     * - not a function\n     * - does not start with \"_\"\n     *\n     * @ignore\n     * @param {Object} dest Destination object.\n     * @param {Object} src Source object.\n     */\n    _: function (dest, src) {\n        for (var key in dest) {\n            let value = dest[key];\n            if (src[key] === undefined && !utils.isFunction(value) && key && key.indexOf('_') !== 0) {\n                src[key] = value;\n            }\n        }\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    _forRelation: function (opts, def, fn, ctx) {\n        const relationName = def.relation;\n        let containedName = null;\n        let index;\n        opts || (opts = {});\n        opts.with || (opts.with = []);\n        if ((index = utils._getIndex(opts.with, relationName)) >= 0) {\n            containedName = relationName;\n        }\n        else if ((index = utils._getIndex(opts.with, def.localField)) >= 0) {\n            containedName = def.localField;\n        }\n        if (opts.withAll) {\n            fn.call(ctx, def, {});\n            return;\n        }\n        else if (!containedName) {\n            return;\n        }\n        let optsCopy = {};\n        utils.fillIn(optsCopy, def.getRelation());\n        utils.fillIn(optsCopy, opts);\n        optsCopy.with = opts.with.slice();\n        optsCopy._activeWith = optsCopy.with.splice(index, 1)[0];\n        optsCopy.with.forEach(function (relation, i) {\n            if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n                optsCopy.with[i] = relation.substr(containedName.length + 1);\n            }\n            else {\n                optsCopy.with[i] = '';\n            }\n        });\n        fn.call(ctx, def, optsCopy);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    _getIndex: function (list, relation) {\n        let index = -1;\n        list.forEach(function (_relation, i) {\n            if (_relation === relation) {\n                index = i;\n                return false;\n            }\n            else if (utils.isObject(_relation)) {\n                if (_relation.relation === relation) {\n                    index = i;\n                    return false;\n                }\n            }\n        });\n        return index;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    addHiddenPropsToTarget: function (target, props) {\n        const map = {};\n        utils.forOwn(props, function (value, key) {\n            map[key] = {\n                writable: true,\n                value\n            };\n        });\n        Object.defineProperties(target, map);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    areDifferent: function (a, b, opts) {\n        opts || (opts = {});\n        const diff = utils.diffObjects(a, b, opts);\n        const diffCount = Object.keys(diff.added).length +\n            Object.keys(diff.removed).length +\n            Object.keys(diff.changed).length;\n        return diffCount > 0;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    classCallCheck: function (instance, ctor) {\n        if (!(instance instanceof ctor)) {\n            throw new TypeError('Cannot call a class as a function');\n        }\n    },\n    /**\n     * Deep copy a value.\n     *\n     * @ignore\n     * @param {*} from Value to deep copy.\n     * @return {*} Deep copy of `from`.\n     */\n    copy: function (from, to, stackFrom, stackTo, blacklist, plain) {\n        if (!to) {\n            to = from;\n            if (from) {\n                if (utils.isArray(from)) {\n                    to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain);\n                }\n                else if (utils.isDate(from)) {\n                    to = new Date(from.getTime());\n                }\n                else if (utils.isRegExp(from)) {\n                    to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0]);\n                    to.lastIndex = from.lastIndex;\n                }\n                else if (utils.isObject(from)) {\n                    if (plain) {\n                        to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain);\n                    }\n                    else {\n                        to = utils.copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist, plain);\n                    }\n                }\n            }\n        }\n        else {\n            if (from === to) {\n                throw new Error('Cannot copy! Source and destination are identical.');\n            }\n            stackFrom = stackFrom || [];\n            stackTo = stackTo || [];\n            if (utils.isObject(from)) {\n                let index = stackFrom.indexOf(from);\n                if (index !== -1) {\n                    return stackTo[index];\n                }\n                stackFrom.push(from);\n                stackTo.push(to);\n            }\n            let result;\n            if (utils.isArray(from)) {\n                let i;\n                to.length = 0;\n                for (i = 0; i < from.length; i++) {\n                    result = utils.copy(from[i], null, stackFrom, stackTo, blacklist, plain);\n                    if (utils.isObject(from[i])) {\n                        stackFrom.push(from[i]);\n                        stackTo.push(result);\n                    }\n                    to.push(result);\n                }\n            }\n            else {\n                if (utils.isArray(to)) {\n                    to.length = 0;\n                }\n                else {\n                    utils.forOwn(to, function (value, key) {\n                        delete to[key];\n                    });\n                }\n                for (var key in from) {\n                    if (from.hasOwnProperty(key)) {\n                        if (utils.isBlacklisted(key, blacklist)) {\n                            continue;\n                        }\n                        result = utils.copy(from[key], null, stackFrom, stackTo, blacklist, plain);\n                        if (utils.isObject(from[key])) {\n                            stackFrom.push(from[key]);\n                            stackTo.push(result);\n                        }\n                        to[key] = result;\n                    }\n                }\n            }\n        }\n        return to;\n    },\n    /**\n     * Recursively shallow fill in own enumberable properties from `source` to `dest`.\n     *\n     * @ignore\n     * @param {Object} dest The destination object.\n     * @param {Object} source The source object.\n     */\n    deepFillIn: function (dest, source) {\n        if (source) {\n            utils.forOwn(source, function (value, key) {\n                const existing = dest[key];\n                if (isPlainObject(value) && isPlainObject(existing)) {\n                    utils.deepFillIn(existing, value);\n                }\n                else if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n                    dest[key] = value;\n                }\n            });\n        }\n        return dest;\n    },\n    /**\n     * Recursively shallow copy own enumberable properties from `source` to `dest`.\n     *\n     * @ignore\n     * @param {Object} dest The destination object.\n     * @param {Object} source The source object.\n     */\n    deepMixIn: function (dest, source) {\n        if (source) {\n            utils.forOwn(source, function (value, key) {\n                const existing = dest[key];\n                if (isPlainObject(value) && isPlainObject(existing)) {\n                    utils.deepMixIn(existing, value);\n                }\n                else {\n                    dest[key] = value;\n                }\n            });\n        }\n        return dest;\n    },\n    /**\n     * @param {Object} a Base object.\n     * @param {Object} b Comparison object.\n     * @return {Object} Diff.\n     */\n    diffObjects: function (a, b, opts) {\n        opts || (opts = {});\n        let equalsFn = opts.equalsFn;\n        let bl = opts.ignore;\n        const diff = {\n            added: {},\n            changed: {},\n            removed: {}\n        };\n        if (!utils.isFunction(equalsFn)) {\n            equalsFn = utils.strictEqual;\n        }\n        utils.forOwn(b, function (oldValue, key) {\n            const newValue = a[key];\n            if (utils.isBlacklisted(key, bl) || equalsFn(newValue, oldValue)) {\n                return;\n            }\n            if (utils.isUndefined(newValue)) {\n                diff.removed[key] = undefined;\n            }\n            else if (!equalsFn(newValue, oldValue)) {\n                diff.changed[key] = newValue;\n            }\n        });\n        utils.forOwn(a, function (newValue, key) {\n            if (!utils.isUndefined(b[key]) || utils.isBlacklisted(key, bl)) {\n                return;\n            }\n            diff.added[key] = newValue;\n        });\n        return diff;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    equal: function (a, b) {\n        /* tslint:disable:triple-equals */\n        return a == b;\n        /* tslint:enable:triple-equals */\n    },\n    /**\n     * Add eventing capabilities into the target object.\n     *\n     * @ignore\n     * @param {Object} target Target object.\n     * @param {Function} [getter] Custom getter for retrieving the object's event\n     * listeners.\n     * @param {Function} [setter] Custom setter for setting the object's event\n     * listeners.\n     */\n    eventify: function (target, getter, setter, enumerable) {\n        target = target || this;\n        let _events = {};\n        if (!getter && !setter) {\n            getter = function () {\n                return _events;\n            };\n            setter = function (value) {\n                _events = value;\n            };\n        }\n        Object.defineProperties(target, {\n            emit: {\n                enumerable: !!enumerable,\n                value(...args) {\n                    const events = getter.call(this) || {};\n                    const type = args.shift();\n                    let listeners = events[type] || [];\n                    let i;\n                    for (i = 0; i < listeners.length; i++) {\n                        listeners[i].f.apply(listeners[i].c, args);\n                    }\n                    listeners = events.all || [];\n                    args.unshift(type);\n                    for (i = 0; i < listeners.length; i++) {\n                        listeners[i].f.apply(listeners[i].c, args);\n                    }\n                }\n            },\n            off: {\n                enumerable: !!enumerable,\n                value(type, func) {\n                    const events = getter.call(this);\n                    const listeners = events[type];\n                    if (!listeners) {\n                        setter.call(this, {});\n                    }\n                    else if (func) {\n                        for (let i = 0; i < listeners.length; i++) {\n                            if (listeners[i].f === func) {\n                                listeners.splice(i, 1);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        listeners.splice(0, listeners.length);\n                    }\n                }\n            },\n            on: {\n                enumerable: !!enumerable,\n                value(type, func, ctx) {\n                    if (!getter.call(this)) {\n                        setter.call(this, {});\n                    }\n                    const events = getter.call(this);\n                    events[type] = events[type] || [];\n                    events[type].push({\n                        c: ctx,\n                        f: func\n                    });\n                }\n            }\n        });\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    extend: function (props, classProps) {\n        const superClass = this;\n        let subClass;\n        props || (props = {});\n        classProps || (classProps = {});\n        if (props.hasOwnProperty('constructor')) {\n            subClass = props.constructor;\n            delete props.constructor;\n        }\n        else {\n            subClass = function (...args) {\n                utils.classCallCheck(this, subClass);\n                const _this = utils.possibleConstructorReturn(this, (subClass.__super__ || Object.getPrototypeOf(subClass)).apply(this, args));\n                return _this;\n            };\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                configurable: true,\n                enumerable: false,\n                value: subClass,\n                writable: true\n            }\n        });\n        const obj = Object;\n        if (obj.setPrototypeOf) {\n            obj.setPrototypeOf(subClass, superClass);\n        }\n        else if (classProps.strictEs6Class) {\n            subClass.__proto__ = superClass;\n        }\n        else {\n            utils.forOwn(superClass, function (value, key) {\n                subClass[key] = value;\n            });\n        }\n        Object.defineProperty(subClass, '__super__', {\n            configurable: true,\n            value: superClass\n        });\n        utils.addHiddenPropsToTarget(subClass.prototype, props);\n        utils.fillIn(subClass, classProps);\n        return subClass;\n    },\n    /**\n     * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n     * but are missing from `dest.\n     *\n     * @ignore\n     * @param {Object} dest The destination object.\n     * @param {Object} source The source object.\n     */\n    fillIn: function (dest, src) {\n        utils.forOwn(src, function (value, key) {\n            if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n                dest[key] = value;\n            }\n        });\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    forEachRelation: function (mapper, opts, fn, ctx) {\n        const relationList = mapper.relationList || [];\n        if (!relationList.length) {\n            return;\n        }\n        relationList.forEach(function (def) {\n            utils._forRelation(opts, def, fn, ctx);\n        });\n    },\n    /**\n     * Iterate over an object's own enumerable properties.\n     *\n     * @ignore\n     * @param {Object} object The object whose properties are to be enumerated.\n     * @param {Function} fn Iteration function.\n     * @param {Object} [thisArg] Content to which to bind `fn`.\n     */\n    forOwn: function (obj, fn, thisArg) {\n        const keys = Object.keys(obj);\n        const len = keys.length;\n        let i;\n        for (i = 0; i < len; i++) {\n            fn.call(thisArg, obj[keys[i]], keys[i], obj);\n        }\n    },\n    /**\n     * Proxy for `JSON.parse`.\n     *\n     * @ignore\n     * @param {string} json JSON to parse.\n     * @return {Object} Parsed object.\n     */\n    fromJson: function (json) {\n        return utils.isString(json) ? JSON.parse(json) : json;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    'get': function (object, prop) {\n        if (!prop) {\n            return;\n        }\n        const parts = prop.split('.');\n        const last = parts.pop();\n        while (prop = parts.shift()) {\n            object = object[prop];\n            /* tslint:disable:triple-equals */\n            if (object == null) {\n                return;\n            }\n        }\n        return object[last];\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    getSuper: function (instance, isCtor) {\n        const ctor = isCtor ? instance : instance.constructor;\n        return (ctor.__super__ || Object.getPrototypeOf(ctor) || ctor.__proto__);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    hidePrototypeMethods: function (ctor) {\n        const descriptors = {};\n        utils.forOwn(ctor.prototype, function (value, key) {\n            if (!utils.isFunction(value)) {\n                return;\n            }\n            descriptors[key] = {\n                enumerable: false,\n                value\n            };\n        });\n    },\n    /**\n     * Return the intersection of two arrays.\n     *\n     * @ignore\n     * @param {Array} array1 First array.\n     * @param {Array} array2 Second array.\n     * @return {Array} Array of elements common to both arrays.\n     */\n    intersection: function (array1, array2) {\n        if (!array1 || !array2) {\n            return [];\n        }\n        const result = [];\n        let item;\n        let i;\n        const len = array1.length;\n        for (i = 0; i < len; i++) {\n            item = array1[i];\n            if (result.indexOf(item) !== -1) {\n                continue;\n            }\n            if (array2.indexOf(item) !== -1) {\n                result.push(item);\n            }\n        }\n        return result;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isArray: Array.isArray,\n    /**\n     * Return whether `prop` is matched by any string or regular expression in `bl`.\n     *\n     * @ignore\n     * @param {string} prop The name of a property.\n     * @param {Array} bl Array of strings and regular expressions.\n     * @return {boolean} Whether `prop` was matched.\n     */\n    isBlacklisted: function (prop, bl) {\n        if (!bl || !bl.length) {\n            return false;\n        }\n        let matches;\n        for (var i = 0; i < bl.length; i++) {\n            if ((toStr(bl[i]) === REGEXP_TAG && bl[i].test(prop)) || bl[i] === prop) {\n                matches = prop;\n                return matches;\n            }\n        }\n        return !!matches;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isBoolean: function (value) {\n        return toStr(value) === BOOL_TAG;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isBrowser: false,\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isDate: function (value) {\n        return (value && typeof value === 'object' && toStr(value) === DATE_TAG);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isFunction: function (value) {\n        return typeof value === 'function' || (value && toStr(value) === FUNC_TAG);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isInteger: function (value) {\n        /* tslint:disable:triple-equals */\n        return toStr(value) === NUMBER_TAG && value == toInteger(value);\n        /* tslint:enable:triple-equals */\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isNull: function (value) {\n        return value === null;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isNumber: function (value) {\n        const type = typeof value;\n        return type === 'number' || (value && type === 'object' && toStr(value) === NUMBER_TAG);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isObject: function (value) {\n        return toStr(value) === OBJECT_TAG;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isRegExp: function (value) {\n        return toStr(value) === REGEXP_TAG;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isSorN: function (value) {\n        return utils.isString(value) || utils.isNumber(value);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isString: function (value) {\n        return typeof value === 'string' || (value && typeof value === 'object' && toStr(value) === STRING_TAG);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    isUndefined: function (value) {\n        return value === undefined;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    logify: function (target, defaultNamespace) {\n        utils.addHiddenPropsToTarget(target, {\n            dbg(...args) {\n                this.log('debug', ...args);\n            },\n            log(level, ...args) {\n                if (level && !args.length) {\n                    args.push(level);\n                    level = 'debug';\n                }\n                if (level === 'debug' && !this.debug) {\n                    return;\n                }\n                const prefix = `${level.toUpperCase()}: (${this.name || defaultNamespace})`;\n                if (console[level]) {\n                    console[level](prefix, ...args);\n                }\n                else {\n                    console.log(prefix, ...args);\n                }\n            }\n        });\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    omit: function (props, keys) {\n        // Remove relations\n        const _props = {};\n        utils.forOwn(props, function (value, key) {\n            if (keys.indexOf(key) === -1) {\n                _props[key] = value;\n            }\n        });\n        return _props;\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    plainCopy: function (from) {\n        return utils.copy(from, undefined, undefined, undefined, undefined, true);\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    possibleConstructorReturn: function (self, call) {\n        if (!self) {\n            throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n        }\n        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n    },\n    /**\n     * Proxy for `Promise.reject`.\n     *\n     * @ignore\n     * @param {*} [value] Value with which to reject the Promise.\n     * @return {Promise} Promise reject with `value`.\n     */\n    reject: function (value) {\n        return utils.Promise.reject(value);\n    },\n    /**\n     * Proxy for `Promise.resolve`.\n     *\n     * @ignore\n     * @param {*} [value] Value with which to resolve the Promise.\n     * @return {Promise} Promise resolved with `value`.\n     */\n    resolve: function (value) {\n        return utils.Promise.resolve(value);\n    },\n    /**\n     * Set the value at the provided key or path.\n     *\n     * @ignore\n     * @param {Object} object The object on which to set a property.\n     * @param {(string|Object)} path The key or path to the property. Can also\n     * pass in an object of path/value pairs, which will all be set on the target\n     * object.\n     * @param {*} [value] The value to set.\n     */\n    set: function (object, path, value) {\n        if (utils.isObject(path)) {\n            utils.forOwn(path, function (value, _path) {\n                utils.set(object, _path, value);\n            });\n        }\n        else {\n            const parts = PATH.exec(path);\n            if (parts) {\n                mkdirP(object, parts[1])[parts[2]] = value;\n            }\n            else {\n                object[path] = value;\n            }\n        }\n    },\n    /**\n     * TODO\n     *\n     * @ignore\n     */\n    strictEqual: function (a, b) {\n        let _equal = a === b;\n        if (!_equal) {\n            if (utils.isObject(a) && utils.isObject(b)) {\n                utils.forOwn(a, function (value, key) {\n                    _equal = _equal && utils.strictEqual(value, b[key]);\n                });\n                utils.forOwn(b, function (value, key) {\n                    _equal = _equal && utils.strictEqual(value, a[key]);\n                });\n            }\n            else if (utils.isArray(a) && utils.isArray(b)) {\n                a.forEach(function (value, i) {\n                    _equal = _equal && utils.strictEqual(value, b[i]);\n                });\n            }\n        }\n        return _equal;\n    },\n    /**\n     * Proxy for `JSON.stringify`.\n     *\n     * @ignore\n     * @param {*} value Value to serialize to JSON.\n     * @return {string} JSON string.\n     */\n    toJson: JSON.stringify,\n    /**\n     * Unset the value at the provided key or path.\n     *\n     * @ignore\n     * @param {Object} object The object from which to delete the property.\n     * @param {string} path The key or path to the property.\n     */\n    unset: function (object, path) {\n        const parts = path.split('.');\n        const last = parts.pop();\n        while (path = parts.shift()) {\n            object = object[path];\n            /* tslint:disable:triple-equals */\n            if (object == null) {\n                return;\n            }\n        }\n        object[last] = undefined;\n    }\n};\n// Attempt to detect whether we are in the browser.\ntry {\n    utils.isBrowser = !!window;\n}\ncatch (e) {\n    utils.isBrowser = false;\n}\nexport default utils;\n","import utils from './utils';\nexport const belongsToType = 'belongsTo';\nexport const hasManyType = 'hasMany';\nexport const hasOneType = 'hasOne';\nfunction Relation(related, opts) {\n    const self = this;\n    opts || (opts = {});\n    const localField = opts.localField;\n    if (!localField) {\n        throw new Error('localField is required');\n    }\n    const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey;\n    if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\n        throw new Error('foreignKey is required');\n    }\n    const localKeys = opts.localKeys;\n    const foreignKeys = opts.foreignKeys;\n    if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\n        throw new Error('one of (foreignKey, localKeys, foreignKeys) is required');\n    }\n    if (utils.isString(related)) {\n        opts.relation = related;\n        if (!utils.isFunction(opts.getRelation)) {\n            throw new Error('you must provide a reference to the related mapper!');\n        }\n    }\n    else if (related) {\n        opts.relation = related.name;\n        Object.defineProperty(self, 'relatedMapper', {\n            value: related\n        });\n    }\n    utils.fillIn(self, opts);\n}\nutils.addHiddenPropsToTarget(Relation.prototype, {\n    getRelation() {\n        return this.relatedMapper;\n    },\n    getLocalKeys(record) {\n    },\n    getForeignKey(record) {\n        if (this.type === belongsToType) {\n            return utils.get(record, this.foreignKey);\n        }\n        return utils.get(record, this.mapper.idAttribute);\n    },\n    setForeignKey(record, relatedRecord) {\n        const self = this;\n        if (!record || !relatedRecord) {\n            return;\n        }\n        if (self.type === belongsToType) {\n            utils.set(record, self.foreignKey, utils.get(relatedRecord, self.getRelation().idAttribute));\n        }\n        else {\n            const idAttribute = self.mapper.idAttribute;\n            if (utils.isArray(relatedRecord)) {\n                relatedRecord.forEach(function (relatedRecordItem) {\n                    utils.set(relatedRecordItem, self.foreignKey, utils.get(record, idAttribute));\n                });\n            }\n            else {\n                utils.set(relatedRecord, self.foreignKey, utils.get(record, idAttribute));\n            }\n        }\n    },\n    getLocalField(record) {\n        return utils.get(record, this.localField);\n    },\n    setLocalField(record, data) {\n        return utils.set(record, this.localField, data);\n    }\n});\nconst relatedTo = function (mapper, related, opts) {\n    opts || (opts = {});\n    if (!opts.type) {\n        throw new Error('must specify relation type!');\n    }\n    opts.mapper = mapper;\n    opts.name = mapper.name;\n    const relation = new Relation(related, opts);\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] });\n    mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] });\n    mapper.relationList.push(relation);\n    mapper.relationFields.push(relation.localField);\n};\n/**\n * TODO\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {Object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n    opts || (opts = {});\n    opts.type = belongsToType;\n    return function (target) {\n        relatedTo(target, related, opts);\n    };\n};\n/**\n * TODO\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n    opts || (opts = {});\n    opts.type = hasManyType;\n    return function (target) {\n        relatedTo(target, related, opts);\n    };\n};\n/**\n * TODO\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n    opts || (opts = {});\n    opts.type = hasOneType;\n    return function (target) {\n        relatedTo(target, related, opts);\n    };\n};\n","import utils from './utils';\nconst reserved = {\n    limit: '',\n    offset: '',\n    orderBy: '',\n    skip: '',\n    sort: '',\n    where: ''\n};\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g;\nconst percentRegExp = /%/g;\nconst underscoreRegExp = /_/g;\nconst escape = function (pattern) {\n    return pattern.replace(escapeRegExp, '\\\\$1');\n};\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}.\n *\n * ```javascript\n * import {Query} from 'js-data'\n * ```\n *\n * @class Query\n * @param {Collection} collection - The collection on which this query operates.\n */\nexport class Query {\n    constructor(collection) {\n        utils.classCallCheck(this, Query);\n        /**\n         * The collection on which this query operates.\n         *\n         * @name Query#collection\n         * @type {Collection}\n         */\n        this.collection = collection;\n        /**\n         * The data result of this query.\n         *\n         * @name Query#data\n         * @type {Array}\n         */\n        this.data = null;\n    }\n    compare(orderBy, index, a, b) {\n        const def = orderBy[index];\n        let cA = utils.get(a, def[0]);\n        let cB = utils.get(b, def[0]);\n        if (cA && utils.isString(cA)) {\n            cA = cA.toUpperCase();\n        }\n        if (cB && utils.isString(cB)) {\n            cB = cB.toUpperCase();\n        }\n        a || (a = null);\n        b || (b = null);\n        if (def[1] === 'DESC') {\n            if (cB < cA) {\n                return -1;\n            }\n            else if (cB > cA) {\n                return 1;\n            }\n            else {\n                if (index < orderBy.length - 1) {\n                    return this.compare(orderBy, index + 1, a, b);\n                }\n                else {\n                    return 0;\n                }\n            }\n        }\n        else {\n            if (cA < cB) {\n                return -1;\n            }\n            else if (cA > cB) {\n                return 1;\n            }\n            else {\n                if (index < orderBy.length - 1) {\n                    return this.compare(orderBy, index + 1, a, b);\n                }\n                else {\n                    return 0;\n                }\n            }\n        }\n    }\n    evaluate(value, op, predicate) {\n        if (Query.ops[op]) {\n            return Query.ops[op](value, predicate);\n        }\n        if (op.indexOf('like') === 0) {\n            return !utils.isNull(this.like(predicate, op.substr(4)).exec(value));\n        }\n        else if (op.indexOf('notLike') === 0) {\n            return utils.isNull(this.like(predicate, op.substr(7)).exec(value));\n        }\n    }\n    like(pattern, flags) {\n        return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags);\n    }\n    /**\n     * Return the current data result of this query.\n     * @name Query#getData\n     * @method\n     * @return {Array} The data in this query.\n     */\n    getData() {\n        const self = this;\n        if (!self.data) {\n            self.data = self.collection.index.getAll();\n        }\n        return self.data;\n    }\n    /**\n     * Find all entities between two boundaries.\n     *\n     * Get the users ages 18 to 30\n     * ```js\n     * const users = query.between(18, 30, { index: 'age' }).run()\n     * ```\n     * Same as above\n     * ```js\n     * const users = query.between([18], [30], { index: 'age' }).run()\n     * ```\n     *\n     * @name Query#between\n     * @method\n     * @param {Array} leftKeys - Keys defining the left boundary.\n     * @param {Array} rightKeys - Keys defining the right boundary.\n     * @param {Object} [opts] - Configuration options.\n     * @param {string} [opts.index] - Name of the secondary index to use in the\n     * query. If no index is specified, the main index is used.\n     * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n     * on the left boundary.\n     * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n     * on the left boundary.\n     * @param {boolean} [opts.limit] - Limit the result to a certain number.\n     * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n     * @return {Query} A reference to itself for chaining.\n     */\n    between(leftKeys, rightKeys, opts) {\n        const self = this;\n        opts || (opts = {});\n        if (self.data) {\n            throw new Error('Cannot access index after first operation!');\n        }\n        self.data = self.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts);\n        return self;\n    }\n    /**\n     * Find the entity or entities that match the provided key.\n     *\n     * #### Example\n     *\n     * Get the entity whose primary key is 25\n     * ```js\n     * const entities = query.get(25).run()\n     * ```\n     * Same as above\n     * ```js\n     * const entities = query.get([25]).run()\n     * ```\n     * Get all users who are active and have the \"admin\" role\n     * ```js\n     * const activeAdmins = query.get(['active', 'admin'], {\n     *   index: 'activityAndRoles'\n     * }).run()\n     * ```\n     * Get all entities that match a certain weather condition\n     * ```js\n     * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n     *   index: 'weatherConditions'\n     * }).run()\n     * ```\n     *\n     * @name Query#get\n     * @method\n     * @param {Array} keyList - Key(s) defining the entity to retrieve. If\n     * `keyList` is not an array (i.e. for a single-value key), it will be\n     * wrapped in an array.\n     * @param {Object} [opts] - Configuration options.\n     * @param {string} [opts.string] - Name of the secondary index to use in the\n     * query. If no index is specified, the main index is used.\n     * @return {Query} A reference to itself for chaining.\n     */\n    get(keyList = [], opts) {\n        const self = this;\n        opts || (opts = {});\n        if (self.data) {\n            throw new Error('Cannot access index after first operation!');\n        }\n        if (keyList && !utils.isArray(keyList)) {\n            keyList = [keyList];\n        }\n        if (!keyList.length) {\n            self.getData();\n            return self;\n        }\n        self.data = self.collection.getIndex(opts.index).get(keyList);\n        return self;\n    }\n    /**\n     * Find the entity or entities that match the provided keyLists.\n     *\n     * #### Example\n     *\n     * Get the posts where \"status\" is \"draft\" or \"inReview\"\n     * ```js\n     * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n     * ```\n     * Same as above\n     * ```js\n     * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n     * ```\n     *\n     * @name Query#getAll\n     * @method\n     * @param {...Array} [keyList] - Provide one or more keyLists, and all\n     * entities matching each keyList will be retrieved. If no keyLists are\n     * provided, all entities will be returned.\n     * @param {Object} [opts] - Configuration options.\n     * @param {string} [opts.index] - Name of the secondary index to use in the\n     * query. If no index is specified, the main index is used.\n     * @return {Query} A reference to itself for chaining.\n     */\n    getAll(...args) {\n        const self = this;\n        let opts = {};\n        if (self.data) {\n            throw new Error('Cannot access index after first operation!');\n        }\n        if (!args.length || args.length === 1 && utils.isObject(args[0])) {\n            self.getData();\n            return self;\n        }\n        else if (args.length && utils.isObject(args[args.length - 1])) {\n            opts = args[args.length - 1];\n            args.pop();\n        }\n        const collection = self.collection;\n        const index = collection.getIndex(opts.index);\n        self.data = [];\n        args.forEach(function (keyList) {\n            self.data = self.data.concat(index.get(keyList));\n        });\n        return self;\n    }\n    /**\n     * Find the entity or entities that match the provided query or pass the\n     * provided filter function.\n     *\n     * #### Example\n     *\n     * Get the draft posts created less than three months\n     * ```js\n     * const posts = query.filter({\n     *   where: {\n     *     status: {\n     *       '==': 'draft'\n     *     },\n     *     created_at_timestamp: {\n     *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n     *     }\n     *   }\n     * }).run()\n     * ```\n     * Use a custom filter function\n     * ```js\n     * const posts = query.filter(function (post) {\n     *   return post.isReady()\n     * }).run()\n     * ```\n     *\n     * @name Query#filter\n     * @method\n     * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n     * function.\n     * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\n     * `queryOrFn` is a function.\n     * @return {Query} A reference to itself for chaining.\n     */\n    filter(query, thisArg) {\n        const self = this;\n        query || (query = {});\n        self.getData();\n        if (utils.isObject(query)) {\n            let where = {};\n            // Filter\n            if (utils.isObject(query.where)) {\n                where = query.where;\n            }\n            utils.forOwn(query, function (value, key) {\n                if (!(key in reserved) && !(key in where)) {\n                    where[key] = {\n                        '==': value\n                    };\n                }\n            });\n            const fields = [];\n            const ops = [];\n            const predicates = [];\n            utils.forOwn(where, function (clause, field) {\n                if (!utils.isObject(clause)) {\n                    clause = {\n                        '==': clause\n                    };\n                }\n                utils.forOwn(clause, function (expr, op) {\n                    fields.push(field);\n                    ops.push(op);\n                    predicates.push(expr);\n                });\n            });\n            if (fields.length) {\n                let i;\n                let len = fields.length;\n                self.data = self.data.filter(function (item) {\n                    let first = true;\n                    let keep = true;\n                    for (i = 0; i < len; i++) {\n                        let op = ops[i];\n                        const isOr = op.charAt(0) === '|';\n                        op = isOr ? op.substr(1) : op;\n                        const expr = self.evaluate(utils.get(item, fields[i]), op, predicates[i]);\n                        if (expr !== undefined) {\n                            keep = first ? expr : (isOr ? keep || expr : keep && expr);\n                        }\n                        first = false;\n                    }\n                    return keep;\n                });\n            }\n            // Sort\n            let orderBy = query.orderBy || query.sort;\n            if (utils.isString(orderBy)) {\n                orderBy = [\n                    [orderBy, 'ASC']\n                ];\n            }\n            if (!utils.isArray(orderBy)) {\n                orderBy = null;\n            }\n            // Apply 'orderBy'\n            if (orderBy) {\n                let index = 0;\n                orderBy.forEach(function (def, i) {\n                    if (utils.isString(def)) {\n                        orderBy[i] = [def, 'ASC'];\n                    }\n                });\n                self.data.sort(function (a, b) {\n                    return self.compare(orderBy, index, a, b);\n                });\n            }\n            // Skip\n            if (utils.isNumber(query.skip)) {\n                self.skip(query.skip);\n            }\n            else if (utils.isNumber(query.offset)) {\n                self.skip(query.offset);\n            }\n            // Limit\n            if (utils.isNumber(query.limit)) {\n                self.limit(query.limit);\n            }\n        }\n        else if (utils.isFunction(query)) {\n            self.data = self.data.filter(query, thisArg);\n        }\n        return self;\n    }\n    /**\n     * Skip a number of results.\n     *\n     * #### Example\n     *\n     * Get all but the first 10 draft posts\n     * ```js\n     * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n     * ```\n     *\n     * @name Query#skip\n     * @method\n     * @param {number} num - The number of entities to skip.\n     * @return {Query} A reference to itself for chaining.\n     */\n    skip(num) {\n        if (!utils.isNumber(num)) {\n            throw new TypeError(`skip: Expected number but found ${typeof num}!`);\n        }\n        const data = this.getData();\n        if (num < data.length) {\n            this.data = data.slice(num);\n        }\n        else {\n            this.data = [];\n        }\n        return this;\n    }\n    /**\n     * Limit the result.\n     *\n     * #### Example\n     *\n     * Get only the first 10 draft posts\n     * ```js\n     * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n     * ```\n     *\n     * @name Query#limit\n     * @method\n     * @param {number} num - The maximum number of entities to keep in the result.\n     * @return {Query} A reference to itself for chaining.\n     */\n    limit(num) {\n        if (!utils.isNumber(num)) {\n            throw new TypeError(`limit: Expected number but found ${typeof num}!`);\n        }\n        const data = this.getData();\n        this.data = data.slice(0, Math.min(data.length, num));\n        return this;\n    }\n    /**\n     * Iterate over all entities.\n     *\n     * @name Query#forEach\n     * @method\n     * @param {Function} forEachFn - Iteration function.\n     * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n     * @return {Query} A reference to itself for chaining.\n     */\n    forEach(forEachFn, thisArg) {\n        this.getData().forEach(forEachFn, thisArg);\n        return this;\n    }\n    /**\n     * Apply a mapping function to the result data.\n     *\n     * @name Query#map\n     * @method\n     * @param {Function} mapFn - Mapping function.\n     * @param {*} [thisArg] - Context to which to bind `mapFn`.\n     * @return {Query} A reference to itself for chaining.\n     */\n    map(mapFn, thisArg) {\n        this.data = this.getData().map(mapFn, thisArg);\n        return this;\n    }\n    /**\n     * Return the result of calling the specified function on each item in this\n     * collection's main index.\n     * @name Query#mapCall\n     * @method\n     * @param {string} funcName - Name of function to call\n     * @parama {...*} [args] - Remaining arguments to be passed to the function.\n     * @return {Query} A reference to itself for chaining.\n     */\n    mapCall(funcName, ...args) {\n        this.data = this.getData().map(function (item) {\n            return item[funcName](...args);\n        });\n        return this;\n    }\n    /**\n     * Complete the execution of the query and return the resulting data.\n     *\n     * @name Query#run\n     * @method\n     * @return {Array} The result of executing this query.\n     */\n    run() {\n        const data = this.data;\n        this.data = null;\n        return data;\n    }\n}\n/**\n * TODO\n *\n * @name Query.ops\n * @type {Object}\n */\nQuery.ops = {\n    '==': function (value, predicate) {\n        /* tslint:disable:triple-equals */\n        return value == predicate;\n        /* tslint:enable:triple-equals */\n    },\n    '===': function (value, predicate) {\n        return value === predicate;\n    },\n    '!=': function (value, predicate) {\n        /* tslint:disable:triple-equals */\n        return value != predicate;\n        /* tslint:enable:triple-equals */\n    },\n    '!==': function (value, predicate) {\n        return value !== predicate;\n    },\n    '>': function (value, predicate) {\n        return value > predicate;\n    },\n    '>=': function (value, predicate) {\n        return value >= predicate;\n    },\n    '<': function (value, predicate) {\n        return value < predicate;\n    },\n    '<=': function (value, predicate) {\n        return value <= predicate;\n    },\n    'isectEmpty': function (value, predicate) {\n        return !utils.intersection((value || []), (predicate || [])).length;\n    },\n    'isectNotEmpty': function (value, predicate) {\n        return utils.intersection((value || []), (predicate || [])).length;\n    },\n    'in': function (value, predicate) {\n        return predicate.indexOf(value) !== -1;\n    },\n    'notIn': function (value, predicate) {\n        return predicate.indexOf(value) === -1;\n    },\n    'contains': function (value, predicate) {\n        return (value || []).indexOf(predicate) !== -1;\n    },\n    'notContains': function (value, predicate) {\n        return (value || []).indexOf(predicate) === -1;\n    }\n};\n/**\n * Create a Query subclass.\n *\n * ```javascript\n * var MyQuery = Query.extend({\n *   foo: function () { return 'bar' }\n * })\n * var query = new MyQuery()\n * query.foo() // \"bar\"\n * ```\n *\n * @name Query.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Query.\n */\nQuery.extend = utils.extend;\nutils.hidePrototypeMethods(Query);\n","export function sort(a, b, hashCode) {\n    // Short-curcuit comparison if a and b are strictly equal\n    // This is absolutely necessary for indexed objects that\n    // don't have the idAttribute field\n    if (a === b) {\n        return 0;\n    }\n    if (hashCode) {\n        a = hashCode(a);\n        b = hashCode(b);\n    }\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (a === null) {\n        return -1;\n    }\n    if (b === null) {\n        return 1;\n    }\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nexport function insertAt(array, index, value) {\n    array.splice(index, 0, value);\n    return array;\n}\nexport function removeAt(array, index) {\n    array.splice(index, 1);\n    return array;\n}\nexport function binarySearch(array, value, field) {\n    let lo = 0;\n    let hi = array.length;\n    let compared;\n    let mid;\n    while (lo < hi) {\n        mid = ((lo + hi) / 2) | 0;\n        compared = sort(value, array[mid], field);\n        if (compared === 0) {\n            return {\n                found: true,\n                index: mid\n            };\n        }\n        else if (compared < 0) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    return {\n        found: false,\n        index: hi\n    };\n}\n","// Copyright (c) 2015, InternalFX.\nimport utils from '../../src/utils';\nimport { binarySearch, insertAt, removeAt } from './utils';\nconst blacklist = { '>': 1, '>=': 1, '<': 1, '<=': 1 };\nexport class Index {\n    constructor(fieldList, opts) {\n        utils.classCallCheck(this, Index);\n        fieldList || (fieldList = []);\n        if (!utils.isArray(fieldList)) {\n            throw new Error('fieldList must be an array.');\n        }\n        opts || (opts = {});\n        this.fieldList = fieldList;\n        this.fieldGetter = opts.fieldGetter;\n        this.hashCode = opts.hashCode;\n        this.isIndex = true;\n        this.keys = [];\n        this.values = [];\n    }\n    'set'(keyList, value) {\n        if (!utils.isArray(keyList)) {\n            keyList = [keyList];\n        }\n        let key = keyList.shift() || null;\n        let pos = binarySearch(this.keys, key);\n        if (keyList.length === 0) {\n            if (pos.found) {\n                let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode);\n                if (!dataLocation.found) {\n                    insertAt(this.values[pos.index], dataLocation.index, value);\n                }\n            }\n            else {\n                insertAt(this.keys, pos.index, key);\n                insertAt(this.values, pos.index, [value]);\n            }\n        }\n        else {\n            if (pos.found) {\n                this.values[pos.index].set(keyList, value);\n            }\n            else {\n                insertAt(this.keys, pos.index, key);\n                let newIndex = new Index([], { hashCode: this.hashCode });\n                newIndex.set(keyList, value);\n                insertAt(this.values, pos.index, newIndex);\n            }\n        }\n    }\n    'get'(keyList) {\n        if (!utils.isArray(keyList)) {\n            keyList = [keyList];\n        }\n        let key = keyList.shift() || null;\n        let pos = binarySearch(this.keys, key);\n        if (keyList.length === 0) {\n            if (pos.found) {\n                if (this.values[pos.index].isIndex) {\n                    return this.values[pos.index].getAll();\n                }\n                else {\n                    return this.values[pos.index];\n                }\n            }\n            else {\n                return [];\n            }\n        }\n        else {\n            if (pos.found) {\n                return this.values[pos.index].get(keyList);\n            }\n            else {\n                return [];\n            }\n        }\n    }\n    getAll() {\n        let results = [];\n        this.values.forEach(function (value) {\n            if (value.isIndex) {\n                results = results.concat(value.getAll());\n            }\n            else {\n                results = results.concat(value);\n            }\n        });\n        return results;\n    }\n    visitAll(cb, thisArg) {\n        this.values.forEach(function (value) {\n            if (value.isIndex) {\n                value.visitAll(cb, thisArg);\n            }\n            else {\n                value.forEach(cb, thisArg);\n            }\n        });\n    }\n    between(leftKeys, rightKeys, opts) {\n        opts || (opts = {});\n        if (!utils.isArray(leftKeys)) {\n            leftKeys = [leftKeys];\n        }\n        if (!utils.isArray(rightKeys)) {\n            rightKeys = [rightKeys];\n        }\n        utils.fillIn(opts, {\n            leftInclusive: true,\n            rightInclusive: false,\n            limit: undefined,\n            offset: 0\n        });\n        let results = this._between(leftKeys, rightKeys, opts);\n        if (opts.limit) {\n            return results.slice(opts.offset, opts.limit + opts.offset);\n        }\n        else {\n            return results.slice(opts.offset);\n        }\n    }\n    _between(leftKeys, rightKeys, opts) {\n        let results = [];\n        let leftKey = leftKeys.shift();\n        let rightKey = rightKeys.shift();\n        let pos;\n        if (leftKey !== undefined) {\n            pos = binarySearch(this.keys, leftKey);\n        }\n        else {\n            pos = {\n                found: false,\n                index: 0\n            };\n        }\n        if (leftKeys.length === 0) {\n            if (pos.found && opts.leftInclusive === false) {\n                pos.index += 1;\n            }\n            for (let i = pos.index; i < this.keys.length; i += 1) {\n                if (rightKey !== undefined) {\n                    if (opts.rightInclusive) {\n                        if (this.keys[i] > rightKey) {\n                            break;\n                        }\n                    }\n                    else {\n                        if (this.keys[i] >= rightKey) {\n                            break;\n                        }\n                    }\n                }\n                if (this.values[i].isIndex) {\n                    results = results.concat(this.values[i].getAll());\n                }\n                else {\n                    results = results.concat(this.values[i]);\n                }\n                if (opts.limit) {\n                    if (results.length >= (opts.limit + opts.offset)) {\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            for (let i = pos.index; i < this.keys.length; i += 1) {\n                let currKey = this.keys[i];\n                if (currKey > rightKey) {\n                    break;\n                }\n                if (this.values[i].isIndex) {\n                    if (currKey === leftKey) {\n                        results = results.concat(this.values[i]._between(utils.copy(leftKeys), rightKeys.map(function () { return undefined; }), opts));\n                    }\n                    else if (currKey === rightKey) {\n                        results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined; }), utils.copy(rightKeys), opts));\n                    }\n                    else {\n                        results = results.concat(this.values[i].getAll());\n                    }\n                }\n                else {\n                    results = results.concat(this.values[i]);\n                }\n                if (opts.limit) {\n                    if (results.length >= (opts.limit + opts.offset)) {\n                        break;\n                    }\n                }\n            }\n        }\n        if (opts.limit) {\n            return results.slice(0, opts.limit + opts.offset);\n        }\n        else {\n            return results;\n        }\n    }\n    peek() {\n        if (this.values.length) {\n            if (this.values[0].isIndex) {\n                return this.values[0].peek();\n            }\n            else {\n                return this.values[0];\n            }\n        }\n        return [];\n    }\n    clear() {\n        this.keys = [];\n        this.values = [];\n    }\n    insertRecord(data) {\n        let keyList = this.fieldList.map(function (field) {\n            if (utils.isFunction(field)) {\n                return field(data) || null;\n            }\n            else {\n                return data[field] || null;\n            }\n        });\n        this.set(keyList, data);\n    }\n    removeRecord(data) {\n        let removed;\n        this.values.forEach((value, i) => {\n            if (value.isIndex) {\n                if (value.removeRecord(data)) {\n                    if (value.keys.length === 0) {\n                        removeAt(this.keys, i);\n                        removeAt(this.values, i);\n                    }\n                    removed = true;\n                    return false;\n                }\n            }\n            else {\n                const dataLocation = binarySearch(value, data, this.hashCode);\n                if (dataLocation.found) {\n                    removeAt(value, dataLocation.index);\n                    if (value.length === 0) {\n                        removeAt(this.keys, i);\n                        removeAt(this.values, i);\n                    }\n                    removed = true;\n                    return false;\n                }\n            }\n        });\n        return removed ? data : undefined;\n    }\n    updateRecord(data) {\n        this.removeRecord(data);\n        this.insertRecord(data);\n    }\n}\nutils.hidePrototypeMethods(Index);\n","import utils from './utils';\nimport { Query } from './Query';\nimport { Index } from '../lib/mindex/index';\nconst COLLECTION_DEFAULTS = {\n    /**\n     * Field to be used as the unique identifier for records in this collection.\n     * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n     * this will default to {@link Mapper#idAttribute}.\n     *\n     * @name Collection#idAttribute\n     * @type {string}\n     * @default \"id\"\n     */\n    idAttribute: 'id',\n    /**\n     * Default Mapper for this collection. Optional. If a Mapper is provided, then\n     * the collection will use the {@link Mapper#idAttribute} setting, and will\n     * wrap records in {@link Mapper#recordClass}.\n     *\n     * @example\n     * import {Collection, Mapper} from 'js-data'\n     *\n     * class MyMapperClass extends Mapper {\n     *   foo () { return 'bar' }\n     * }\n     * const myMapper = new MyMapperClass()\n     * const collection = new Collection(null, { mapper: myMapper })\n     *\n     * @name Collection#mapper\n     * @type {Mapper}\n     * @default null\n     */\n    mapper: null,\n    /**\n     * What to do when inserting a record into this Collection that shares a\n     * primary key with a record already in this Collection.\n     *\n     * Possible values:\n     * - merge\n     * - replace\n     *\n     * Merge:\n     *\n     * Recursively shallow copy properties from the new record onto the existing\n     * record.\n     *\n     * Replace:\n     *\n     * Shallow copy top-level properties from the new record onto the existing\n     * record. Any top-level own properties of the existing record that are _not_\n     * on the new record will be removed.\n     *\n     * @name Collection#onConflict\n     * @type {string}\n     * @default \"merge\"\n     */\n    onConflict: 'merge',\n    /**\n     * Options to be passed into {@link Mapper#createRecord} when wrapping records\n     * in {@link Mapper#recordClass}.\n     *\n     * @name Collection#recordOpts\n     * @type {Object}\n     * @default null\n     */\n    recordOpts: null\n};\n/**\n * ```javascript\n * import {Collection} from 'js-data'\n * ```\n *\n * An ordered set of {@link Record} instances.\n *\n * @example\n * import {Collection, Record} from 'js-data'\n * const user1 = new Record({ id: 1 })\n * const user2 = new Record({ id: 2 })\n * const UserCollection = new Collection([user1, user2])\n * UserCollection.get(1) === user1 // true\n *\n * @class Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection.\n * @param {Object} [opts] Configuration options.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n * @param {Object} [opts.recordOpts=null] See {@link Collection#recordOpts}.\n */\nexport class Collection {\n    constructor(records, opts) {\n        const self = this;\n        utils.classCallCheck(self, Collection);\n        if (utils.isObject(records) && !utils.isArray(records)) {\n            opts = records;\n            records = [];\n        }\n        if (utils.isString(opts)) {\n            opts = { idAttribute: opts };\n        }\n        // Default values for arguments\n        records || (records = []);\n        opts || (opts = {});\n        opts.recordOpts || (opts.recordOpts = {});\n        utils.fillIn(self, opts);\n        utils.fillIn(self, COLLECTION_DEFAULTS);\n        /**\n         * Event listeners attached to this Collection.\n         *\n         * @name Collection#_listeners\n         * @instance\n         * @type {Object}\n         * @private\n         */\n        self._listeners = {};\n        const idAttribute = self.recordId();\n        /**\n         * The main index, which uses @{link Collection#recordId} as the key.\n         * @name Collection#index\n         * @type {Index}\n         */\n        self.index = new Index([idAttribute], {\n            hashCode(obj) {\n                return utils.get(obj, idAttribute);\n            }\n        });\n        /**\n         * Object that holds the secondary indexes of this collection.\n         * @name Collection#indexes\n         * @type {Object.<string, Index>}\n         */\n        self.indexes = {};\n        records.forEach(function (record) {\n            record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record;\n            self.index.insertRecord(record);\n            if (record && utils.isFunction(record.on)) {\n                record.on('all', self._onRecordEvent, self);\n            }\n        });\n    }\n    /**\n     * Used to bind to events emitted by records in this Collection.\n     *\n     * @name Collection#_onRecordEvent\n     * @method\n     * @private\n     * @param {...*} [arg] Args passed to {@link Collection#emit}.\n     */\n    _onRecordEvent(...args) {\n        this.emit(...args);\n    }\n    /**\n     * Insert the provided record or records.\n     *\n     * If a record is already in the collection then the provided record will\n     * either merge with or replace the existing record based on the value of the\n     * `onConflict` option.\n     *\n     * The collection's secondary indexes will be updated as each record is\n     * visited.\n     *\n     * @name Collection#add\n     * @method\n     * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n     * @param {Object} [opts] Configuration options.\n     * @param {string} [opts.onConflict] What to do when a record is already in\n     * the collection. Possible values are `merge` or `replace`.\n     * @return {(Object|Object[]|Record|Record[])} The added record or records.\n     */\n    add(records, opts) {\n        const self = this;\n        // Default values for arguments\n        opts || (opts = {});\n        // Fill in \"opts\" with the Collection's configuration\n        utils._(self, opts);\n        records = self.beforeAdd(records, opts) || records;\n        // Track whether just one record or an array of records is being inserted\n        let singular = false;\n        const idAttribute = self.recordId();\n        if (utils.isObject(records) && !utils.isArray(records)) {\n            records = [records];\n            singular = true;\n        }\n        // Map the provided records to existing records.\n        // New records will be inserted. If any records map to existing records,\n        // they will be merged into the existing records according to the onConflict\n        // option.\n        records = records.map(function (record) {\n            let id = self.recordId(record);\n            if (!utils.isSorN(id)) {\n                throw new TypeError(`${idAttribute}: Expected string or number, found ${typeof id}!`);\n            }\n            // Grab existing record if there is one\n            const existing = self.get(id);\n            // If the currently visited record is just a reference to an existing\n            // record, then there is nothing to be done. Exit early.\n            if (record === existing) {\n                return existing;\n            }\n            if (existing) {\n                // Here, the currently visited record corresponds to a record already\n                // in the collection, so we need to merge them\n                const onConflict = opts.onConflict || self.onConflict;\n                if (onConflict === 'merge') {\n                    utils.deepMixIn(existing, record);\n                }\n                else if (onConflict === 'replace') {\n                    utils.forOwn(existing, (value, key) => {\n                        if (key !== idAttribute && !record.hasOwnProperty(key)) {\n                            delete existing[key];\n                        }\n                    });\n                    existing.set(record);\n                }\n                record = existing;\n                // Update all indexes in the collection\n                self.updateIndexes(record);\n            }\n            else {\n                // Here, the currently visted record does not correspond to any record\n                // in the collection, so (optionally) instantiate this record and insert\n                // it into the collection\n                record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record;\n                self.index.insertRecord(record);\n                utils.forOwn(self.indexes, function (index, name) {\n                    index.insertRecord(record);\n                });\n                if (record && utils.isFunction(record.on)) {\n                    record.on('all', self._onRecordEvent, self);\n                }\n            }\n            return record;\n        });\n        // Finally, return the inserted data\n        const result = singular ? (records.length ? records[0] : undefined) : records;\n        // TODO: Make this more performant (batch events?)\n        self.emit('add', result);\n        return self.afterAdd(records, opts, result) || result;\n    }\n    /**\n     * Lifecycle hook called by {@link Collection#add}. If this method returns a\n     * value then {@link Collection#add} will return that same value.\n     *\n     * @name Collection#method\n     * @method\n     * @param {(Object|Object[]|Record|Record[])} result The record or records\n     * that were added to this Collection by {@link Collection#add}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n     */\n    afterAdd(...args) { }\n    /**\n     * Lifecycle hook called by {@link Collection#remove}. If this method returns\n     * a value then {@link Collection#remove} will return that same value.\n     *\n     * @name Collection#afterRemove\n     * @method\n     * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n     * @param {Object} record The result that will be returned by {@link Collection#remove}.\n     */\n    afterRemove(...args) { }\n    /**\n     * Lifecycle hook called by {@link Collection#removeAll}. If this method\n     * returns a value then {@link Collection#removeAll} will return that same\n     * value.\n     *\n     * @name Collection#afterRemoveAll\n     * @method\n     * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n     * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\n     */\n    afterRemoveAll(...args) { }\n    /**\n     * Lifecycle hook called by {@link Collection#add}. If this method returns a\n     * value then the `records` argument in {@link Collection#add} will be\n     * re-assigned to the returned value.\n     *\n     * @name Collection#beforeAdd\n     * @method\n     * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n     */\n    beforeAdd(...args) { }\n    /**\n     * Lifecycle hook called by {@link Collection#remove}.\n     *\n     * @name Collection#beforeRemove\n     * @method\n     * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n     */\n    beforeRemove(...args) { }\n    /**\n     * Lifecycle hook called by {@link Collection#removeAll}.\n     *\n     * @name Collection#beforeRemoveAll\n     * @method\n     * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n     * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n     */\n    beforeRemoveAll(...args) { }\n    /**\n     * Find all records between two boundaries.\n     *\n     * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n     *\n     * @example <caption>Get all users ages 18 to 30</caption>\n     * const users = collection.between(18, 30, { index: 'age' })\n     *\n     * @example <caption>Same as above</caption>\n     * const users = collection.between([18], [30], { index: 'age' })\n     *\n     * @name Collection#between\n     * @method\n     * @param {Array} leftKeys Keys defining the left boundary.\n     * @param {Array} rightKeys Keys defining the right boundary.\n     * @param {Object} [opts] Configuration options.\n     * @param {string} [opts.index] Name of the secondary index to use in the\n     * query. If no index is specified, the main index is used.\n     * @param {boolean} [opts.leftInclusive=true] Whether to include records\n     * on the left boundary.\n     * @param {boolean} [opts.rightInclusive=false] Whether to include records\n     * on the left boundary.\n     * @param {boolean} [opts.limit] Limit the result to a certain number.\n     * @param {boolean} [opts.offset] The number of resulting records to skip.\n     * @return {Array} The result.\n     */\n    between(leftKeys, rightKeys, opts) {\n        return this.query().between(leftKeys, rightKeys, opts).run();\n    }\n    /**\n     * Create a new secondary index on the contents of the collection.\n     *\n     * @example <caption>Index users by age</caption>\n     * collection.createIndex('age')\n     *\n     * @example <caption>Index users by status and role</caption>\n     * collection.createIndex('statusAndRole', ['status', 'role'])\n     *\n     * @name Collection#createIndex\n     * @method\n     * @param {string} name - The name of the new secondary index.\n     * @param {string[]} [fieldList] - Array of field names to use as the key or\n     * compound key of the new secondary index. If no fieldList is provided, then\n     * the name will also be the field that is used to index the collection.\n     * @return {Collection} A reference to itself for chaining.\n     */\n    createIndex(name, fieldList, opts) {\n        const self = this;\n        if (utils.isString(name) && fieldList === undefined) {\n            fieldList = [name];\n        }\n        opts || (opts = {});\n        opts.hashCode = opts.hashCode || function (obj) {\n            return self.recordId(obj);\n        };\n        const index = self.indexes[name] = new Index(fieldList, opts);\n        self.index.visitAll(index.insertRecord, index);\n        return self;\n    }\n    /**\n     * Find the record or records that match the provided query or pass the\n     * provided filter function.\n     *\n     * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n     *\n     * @example <caption>Get the draft posts created less than three months</caption>\n     * const posts = collection.filter({\n     *   where: {\n     *     status: {\n     *       '==': 'draft'\n     *     },\n     *     created_at_timestamp: {\n     *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n     *     }\n     *   }\n     * })\n     *\n     * @example <caption>Use a custom filter function</caption>\n     * const posts = collection.filter(function (post) {\n     *   return post.isReady()\n     * })\n     *\n     * @name Collection#filter\n     * @method\n     * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n     * function.\n     * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n     * `queryOrFn` is a function.\n     * @return {Array} The result.\n     */\n    filter(query, thisArg) {\n        return this.query().filter(query, thisArg).run();\n    }\n    /**\n     * Iterate over all records.\n     *\n     * @example\n     * collection.forEach(function (record) {\n     *   // do something\n     * })\n     *\n     * @name Collection#forEach\n     * @method\n     * @param {Function} forEachFn - Iteration function.\n     * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n     * @return {Array} The result.\n     */\n    forEach(cb, thisArg) {\n        this.index.visitAll(cb, thisArg);\n    }\n    /**\n     * Get the record with the given id.\n     *\n     * @name Collection#get\n     * @method\n     * @param {(string|number)} id - The primary key of the record to get.\n     * @return {(Object|Record)} The record with the given id.\n     */\n    get(id) {\n        const instances = this.query().get(id).run();\n        return instances.length ? instances[0] : undefined;\n    }\n    /**\n     * Find the record or records that match the provided keyLists.\n     *\n     * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n     *\n     * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\n     * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n     *\n     * @example <caption>Same as above</caption>\n     * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n     *\n     * @name Collection#getAll\n     * @method\n     * @param {...Array} [keyList] - Provide one or more keyLists, and all\n     * records matching each keyList will be retrieved. If no keyLists are\n     * provided, all records will be returned.\n     * @param {Object} [opts] - Configuration options.\n     * @param {string} [opts.index] - Name of the secondary index to use in the\n     * query. If no index is specified, the main index is used.\n     * @return {Array} The result.\n     */\n    getAll(...args) {\n        return this.query().getAll(...args).run();\n    }\n    /**\n     * Return the index with the given name. If no name is provided, return the\n     * main index. Throws an error if the specified index does not exist.\n     *\n     * @name Collection#getIndex\n     * @method\n     * @param {string} [name] The name of the index to retrieve.\n     */\n    getIndex(name) {\n        const index = name ? this.indexes[name] : this.index;\n        if (!index) {\n            throw new Error(`Index ${name} does not exist!`);\n        }\n        return index;\n    }\n    /**\n     * Limit the result.\n     *\n     * Shortcut for `collection.query().limit(maximumNumber).run()`\n     *\n     * @example\n     * const posts = collection.limit(10)\n     *\n     * @name Collection#limit\n     * @method\n     * @param {number} num - The maximum number of records to keep in the result.\n     * @return {Array} The result.\n     */\n    limit(num) {\n        return this.query().limit(num).run();\n    }\n    /**\n     * Apply a mapping function to all records.\n     *\n     * @example\n     * const names = collection.map(function (user) {\n     *   return user.name\n     * })\n     *\n     * @name Collection#map\n     * @method\n     * @param {Function} mapFn - Mapping function.\n     * @param {*} [thisArg] - Context to which to bind `mapFn`.\n     * @return {Array} The result of the mapping.\n     */\n    map(cb, thisArg) {\n        const data = [];\n        this.index.visitAll(function (value) {\n            data.push(cb.call(thisArg, value));\n        });\n        return data;\n    }\n    /**\n     * Return the result of calling the specified function on each record in this\n     * collection's main index.\n     *\n     * @name Collection#mapCall\n     * @method\n     * @param {string} funcName - Name of function to call\n     * @parama {...*} [args] - Remaining arguments to be passed to the function.\n     * @return {Array} The result.\n     */\n    mapCall(funcName, ...args) {\n        const data = [];\n        this.index.visitAll(function (record) {\n            data.push(record[funcName](...args));\n        });\n        return data;\n    }\n    /**\n     * Return the primary key of the given, or if no record is provided, return the\n     * name of the field that holds the primary key of records in this Collection.\n     *\n     * @name Collection#recordId\n     * @method\n     * @param {(Object|Record)} [record] The record whose primary key is to be\n     * returned.\n     * @return {(string|number)} Primary key or name of field that holds primary\n     * key.\n     */\n    recordId(record) {\n        if (record) {\n            return utils.get(record, this.recordId());\n        }\n        const self = this;\n        return self.mapper ? self.mapper.idAttribute : self.idAttribute || 'id';\n    }\n    /**\n     * Create a new query to be executed against the contents of the collection.\n     * The result will be all or a subset of the contents of the collection.\n     *\n     * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\n     * collection.query()\n     *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n     *   .skip(10) // second page\n     *   .limit(10) // page size\n     *   .run()\n     *\n     * @name Collection#query\n     * @method\n     * @return {Query} New query object.\n     */\n    query() {\n        return new Query(this);\n    }\n    /**\n     * Reduce the data in the collection to a single value and return the result.\n     *\n     * @example\n     * const totalVotes = collection.reduce(function (prev, record) {\n     *   return prev + record.upVotes + record.downVotes\n     * }, 0)\n     *\n     * @name Collection#reduce\n     * @method\n     * @param {Function} cb - Reduction callback.\n     * @param {*} initialValue - Initial value of the reduction.\n     * @return {*} The result.\n     */\n    reduce(cb, initialValue) {\n        const data = this.getAll();\n        return data.reduce(cb, initialValue);\n    }\n    /**\n     * Remove the record with the given id from this Collection.\n     *\n     * @name Collection#remove\n     * @method\n     * @param {(string|number)} id - The primary key of the record to be removed.\n     * @param {Object} [opts] - Configuration options.\n     * @return {Object|Record} The removed record, if any.\n     */\n    remove(id, opts) {\n        const self = this;\n        // Default values for arguments\n        opts || (opts = {});\n        self.beforeRemove(id, opts);\n        const record = self.get(id);\n        // The record is in the collection, remove it\n        if (record) {\n            self.index.removeRecord(record);\n            utils.forOwn(self.indexes, function (index, name) {\n                index.removeRecord(record);\n            });\n            if (record && utils.isFunction(record.off)) {\n                record.off('all', self._onRecordEvent, self);\n                self.emit('remove', record);\n            }\n        }\n        return self.afterRemove(id, opts, record) || record;\n    }\n    /**\n     * Remove the record selected by \"query\" from this collection.\n     *\n     * @name Collection#removeAll\n     * @method\n     * @param {Object} [query={}] - Selection query.\n     * @param {Object} [query.where] - Filtering criteria.\n     * @param {number} [query.skip] - Number to skip.\n     * @param {number} [query.limit] - Number to limit to.\n     * @param {Array} [query.orderBy] - Sorting criteria.\n     * @param {Object} [opts] - Configuration options.\n     * @return {(Object[]|Record[])} The removed records, if any.\n     */\n    removeAll(query, opts) {\n        const self = this;\n        // Default values for arguments\n        opts || (opts = {});\n        self.beforeRemoveAll(query, opts);\n        const records = self.filter(query);\n        // Remove each selected record from the collection\n        records.forEach(function (item) {\n            self.remove(self.recordId(item), opts);\n        });\n        return self.afterRemoveAll(query, opts, records) || records;\n    }\n    /**\n     * Skip a number of results.\n     *\n     * Shortcut for `collection.query().skip(numberToSkip).run()`\n     *\n     * @example\n     * const posts = collection.skip(10)\n     *\n     * @name Collection#skip\n     * @method\n     * @param {number} num - The number of records to skip.\n     * @return {Array} The result.\n     */\n    skip(num) {\n        return this.query().skip(num).run();\n    }\n    /**\n     * Return the plain JSON representation of all items in this collection.\n     * Assumes records in this collection have a toJSON method.\n     *\n     * @name Collection#toJSON\n     * @method\n     * @param {Object} [opts] - Configuration options.\n     * @param {string[]} [opts.with] - Array of relation names or relation fields\n     * to include in the representation.\n     * @return {Array} The records.\n     */\n    toJSON(opts) {\n        return this.mapCall('toJSON', opts);\n    }\n    /**\n     * Update a record's position in a single index of this collection. See\n     * {@link Collection#updateIndexes} to update a record's position in all\n     * indexes at once.\n     *\n     * @name Collection#updateIndex\n     * @method\n     * @param {Object} record - The record to update.\n     * @param {Object} [opts] - Configuration options.\n     * @param {string} [opts.index] The index in which to update the record's\n     * position. If you don't specify an index then the record will be updated\n     * in the main index.\n     */\n    updateIndex(record, opts) {\n        opts || (opts = {});\n        this.getIndex(opts.index).updateRecord(record);\n    }\n    /**\n     * TODO\n     *\n     * @name Collection#updateIndexes\n     * @method\n     * @param {Object} record - TODO\n     * @param {Object} [opts] - Configuration options.\n     */\n    updateIndexes(record) {\n        const self = this;\n        self.index.updateRecord(record);\n        utils.forOwn(self.indexes, function (index, name) {\n            index.updateRecord(record);\n        });\n    }\n}\n/**\n * Create a Collection subclass.\n *\n * @example\n * var MyCollection = Collection.extend({\n *   foo: function () { return 'bar' }\n * })\n * var collection = new MyCollection()\n * collection.foo() // \"bar\"\n *\n * @name Collection.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Collection.\n */\nCollection.extend = utils.extend;\n/**\n * TODO\n *\n * @name Collection#on\n * @method\n * @param {string} event TODO.\n * @param {Function} handler TODO\n */\n/**\n * TODO\n *\n * @name Collection#off\n * @method\n * @param {string} [event] TODO.\n * @param {Function} [handler] TODO\n */\n/**\n * TODO\n *\n * @name Collection#emit\n * @method\n * @param {string} event TODO.\n * @param {...*} [arg] TODO\n */\nutils.eventify(Collection.prototype, function () {\n    return this._listeners;\n}, function (value) {\n    this._listeners = value;\n});\nutils.hidePrototypeMethods(Collection);\n","import utils from './utils';\n/**\n * js-data's Record class.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @class Record\n * @param {Object} [props] The initial properties of the new Record instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nexport class Record {\n    constructor(props, opts) {\n        const self = this;\n        utils.classCallCheck(self, Record);\n        props || (props = {});\n        opts || (opts = {});\n        const _props = {};\n        Object.defineProperties(self, {\n            _get: {\n                enumerable: false,\n                value(key) {\n                    return utils.get(_props, key);\n                }\n            },\n            _set: {\n                enumerable: false,\n                value(key, value) {\n                    return utils.set(_props, key, value);\n                }\n            },\n            _unset: {\n                enumerable: false,\n                value(key) {\n                    return utils.unset(_props, key);\n                }\n            }\n        });\n        const _set = self._set;\n        // TODO: Optimize these strings\n        _set('creating', true);\n        if (opts.noValidate) {\n            _set('noValidate', true);\n        }\n        utils.fillIn(self, props);\n        _set('creating', false);\n        _set('noValidate', false);\n        _set('previous', utils.copy(props));\n    }\n    _set(prop, value) { }\n    _get(prop) { }\n    _unset(prop) { }\n    /**\n     * TODO\n     *\n     * @name Record#_mapper\n     * @method\n     * @ignore\n     */\n    _mapper() {\n        const ctor = this.constructor;\n        if (!ctor.mapper) {\n            throw new Error('This recordClass has no Mapper!');\n        }\n        return ctor.mapper;\n    }\n    /**\n     * Return the value at the given path for this instance.\n     *\n     * @name Record#get\n     * @method\n     * @param {string} key - Path of value to retrieve.\n     * @return {*} Value at path.\n     */\n    'get'(key) {\n        return utils.get(this, key);\n    }\n    /**\n     * Set the value for a given key, or the values for the given keys if \"key\" is\n     * an object.\n     *\n     * @name Record#set\n     * @method\n     * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n     * @param {*} [value] - Value to set for the given key.\n     * @param {Object} [opts] - Optional configuration.\n     * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n     */\n    'set'(key, value, opts) {\n        const self = this;\n        if (utils.isObject(key)) {\n            opts = value;\n        }\n        opts || (opts = {});\n        if (opts.silent) {\n            self._set('silent', true);\n        }\n        utils.set(self, key, value);\n        if (!self._get('eventId')) {\n            self._set('silent'); // unset\n        }\n    }\n    /**\n     * Unset the value for a given key.\n     *\n     * @name Record#unset\n     * @method\n     * @param {string} key - Key to unset.\n     * @param {Object} [opts] - Optional configuration.\n     * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n     */\n    unset(key, opts) {\n        this.set(key, undefined, opts);\n    }\n    /**\n     * TODO\n     *\n     * @name Record#hashCode\n     * @method\n     */\n    hashCode() {\n        const self = this;\n        return utils.get(self, self._mapper().idAttribute);\n    }\n    /**\n     * Return changes to this record since it was instantiated or\n     * {@link Record#commit} was called.\n     *\n     * @name Record#changes\n     * @method\n     * @param [opts] Configuration options.\n     * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n     * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n     */\n    changes(opts) {\n        const self = this;\n        opts || (opts = {});\n        return utils.diffObjects(self, self._get('previous'), opts);\n    }\n    /**\n     * Return whether this record has changed since it was instantiated or\n     * {@link Record#commit} was called.\n     *\n     * @name Record#hasChanges\n     * @method\n     * @param [opts] Configuration options.\n     * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n     * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n     */\n    hasChanges(opts) {\n        const self = this;\n        const quickHasChanges = !!(self._get('changed') || []).length;\n        return quickHasChanges || utils.areDifferent(self, self._get('previous'), opts);\n    }\n    /**\n     * TODO\n     *\n     * @name Record#commit\n     * @method\n     */\n    commit() {\n        const self = this;\n        self._set('changed'); // unset\n        self._set('previous', utils.copy(self));\n        return self;\n    }\n    /**\n     * TODO\n     *\n     * @name Record#previous\n     * @method\n     * @param {string} [key] TODO\n     */\n    previous(key) {\n        const self = this;\n        if (key) {\n            return self._get(`previous.${key}`);\n        }\n        return self._get('previous');\n    }\n    /**\n     * TODO\n     *\n     * @name Record#revert\n     * @method\n     * @param {Object} [opts] Configuration options.\n     */\n    revert(opts) {\n        const self = this;\n        const previous = self._get('previous') || {};\n        opts || (opts = {});\n        opts.preserve || (opts.preserve = []);\n        utils.forOwn(self, (value, key) => {\n            if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n                delete self[key];\n            }\n        });\n        utils.forOwn(previous, (value, key) => {\n            if (opts.preserve.indexOf(key) === -1) {\n                self[key] = value;\n            }\n        });\n        self.commit();\n        return self;\n    }\n    /**\n     * TODO\n     *\n     * @name Record#schema\n     * @method\n     * @param {string} [key] TODO\n     */\n    schema(key) {\n        let _schema = this._mapper().schema;\n        return key ? _schema[key] : _schema;\n    }\n    // validate (obj, value) {\n    //   let errors = []\n    //   let _schema = this.schema()\n    //   if (!obj) {\n    //     obj = this\n    //   } else if (utils.isString(obj)) {\n    //     const prop = _schema[obj]\n    //     if (prop) {\n    //       errors = validate.validate(prop, value) || []\n    //     }\n    //   } else {\n    //     utils. utils.forOwn(_schema, function (prop, key) {\n    //       errors = errors.concat(validate.validate(prop, utils.get(obj, key)) || [])\n    //     })\n    //   }\n    //   return errors.length ? errors : undefined\n    // },\n    /**\n     * TODO\n     *\n     * @name Record#create\n     * @method\n     * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n     */\n    create(opts) {\n        return this._mapper().create(this, opts);\n    }\n    /**\n     * TODO\n     *\n     * @name Record#beforeSave\n     * @method\n     * @param {Object} opts TODO\n     */\n    beforeSave() { }\n    /**\n     * TODO\n     *\n     * @name Record#save\n     * @method\n     * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n     */\n    save(opts) {\n        let op, adapter;\n        const self = this;\n        const mapper = self._mapper();\n        // Default values for arguments\n        opts || (opts = {});\n        // Fill in \"opts\" with the Model's configuration\n        utils._(self, opts);\n        adapter = opts.adapter = mapper.getAdapterName(opts);\n        // beforeSave lifecycle hook\n        op = opts.op = 'beforeSave';\n        return utils.resolve(self[op](opts)).then(function () {\n            // Now delegate to the adapter\n            op = opts.op = 'save';\n            mapper.dbg(op, self, opts);\n            return mapper.getAdapter(adapter)[op](mapper, self, opts);\n        }).then(function (data) {\n            // afterSave lifecycle hook\n            op = opts.op = 'afterSave';\n            return utils.resolve(self[op](data, opts)).then(function (_data) {\n                // Allow for re-assignment from lifecycle hook\n                data = _data || data;\n                if (opts.raw) {\n                    self.set(data.data);\n                    data.data = self;\n                }\n                else {\n                    self.set(data);\n                }\n                return mapper.end(data, opts);\n            });\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name Record#afterSave\n     * @method\n     * @param {Object} opts TODO\n     */\n    afterSave() { }\n    /**\n     * TODO\n     *\n     * @name Record#beforeLoadRelations\n     * @method\n     * @param {string[]} relations TODO\n     * @param {Object} opts TODO\n     */\n    beforeLoadRelations() { }\n    /**\n     * TODO\n     *\n     * @name Record#loadRelations\n     * @method\n     * @param {string[]} [relations] TODO\n     * @param {Object} [opts] TODO\n     */\n    loadRelations(relations, opts) {\n        let op;\n        const self = this;\n        const mapper = self._mapper();\n        const relationList = mapper.relationList || [];\n        // Default values for arguments\n        relations || (relations = []);\n        opts || (opts = {});\n        // Fill in \"opts\" with the Model's configuration\n        utils._(mapper, opts);\n        opts.adapter = mapper.getAdapterName(opts);\n        // beforeLoadRelations lifecycle hook\n        op = opts.op = 'beforeLoadRelations';\n        return utils.resolve(self[op](relations, opts)).then(function () {\n            if (utils.isString(relations)) {\n                relations = [relations];\n            }\n            // Now delegate to the adapter\n            op = opts.op = 'loadRelations';\n            mapper.dbg(op, self, relations, opts);\n            return Promise.all(relationList.map(function (def) {\n                if (utils.isFunction(def.load)) {\n                    return def.load(mapper, def, self, opts);\n                }\n                let task;\n                if (def.type === 'hasMany' && def.foreignKey) {\n                    // hasMany\n                    task = def.getRelation().findAll({\n                        [def.foreignKey]: utils.get(self, mapper.idAttribute)\n                    }, opts);\n                }\n                else if (def.foreignKey) {\n                    // belongsTo or hasOne\n                    const key = utils.get(self, def.foreignKey);\n                    if (utils.isSorN(key)) {\n                        task = def.getRelation().find(key, opts);\n                    }\n                }\n                else if (def.localKeys) {\n                    // hasMany\n                    task = def.getRelation().findAll({\n                        [def.getRelation().idAttribute]: {\n                            'in': utils.get(self, def.localKeys)\n                        }\n                    }, opts);\n                }\n                else if (def.foreignKeys) {\n                    // hasMany\n                    task = def.getRelation().findAll({\n                        [def.getRelation().idAttribute]: {\n                            'contains': utils.get(self, mapper.idAttribute)\n                        }\n                    }, opts);\n                }\n                if (task) {\n                    task = task.then(function (data) {\n                        if (opts.raw) {\n                            data = data.data;\n                        }\n                        utils.set(self, def.localField, def.type === 'hasOne' ? (data.length ? data[0] : undefined) : data);\n                    });\n                }\n                return task;\n            }));\n        }).then(function () {\n            // afterLoadRelations lifecycle hook\n            op = opts.op = 'afterLoadRelations';\n            return utils.resolve(self[op](relations, opts)).then(function () {\n                return self;\n            });\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name Record#afterLoadRelations\n     * @method\n     * @param {string[]} relations TODO\n     * @param {Object} opts TODO\n     */\n    afterLoadRelations() { }\n    /**\n     * TODO\n     *\n     * @name Record#destroy\n     * @method\n     * @param {Object} [opts] Configuration options. @see {@link Model.destroy}.\n     */\n    destroy(opts) {\n        // TODO: move actual destroy logic here\n        const mapper = this._mapper();\n        return mapper.destroy(utils.get(this, mapper.idAttribute), opts);\n    }\n    // TODO: move logic for single-item async operations onto the instance.\n    /**\n     * Return a plain object representation of this record. If the class from\n     * which this record was created has a mapper, then {@link Mapper#toJSON} will\n     * be called instead.\n     *\n     * @name Record#toJSON\n     * @method\n     * @param {Object} [opts] Configuration options.\n     * @param {string[]} [opts.with] Array of relation names or relation fields\n     * to include in the representation. Only available as an option if the class\n     * from which this record was created has a mapper.\n     * @return {Object} Plain object representation of this record.\n     */\n    toJSON(opts) {\n        const ctor = this.constructor;\n        const mapper = ctor.mapper;\n        if (mapper) {\n            return mapper.toJSON(this, opts);\n        }\n        else {\n            const json = {};\n            utils.forOwn(this, function (prop, key) {\n                json[key] = utils.copy(prop);\n            });\n            return json;\n        }\n    }\n}\n/**\n * Create a Record subclass.\n *\n * ```javascript\n * var MyRecord = Record.extend({\n *   foo: function () { return 'bar' }\n * })\n * var record = new MyRecord()\n * record.foo() // \"bar\"\n * ```\n *\n * @name Record.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Record.\n */\nRecord.extend = utils.extend;\n/**\n * Register a new event listener on this Record.\n *\n * @name Record#on\n * @method\n */\n/**\n * Remove an event listener from this Record.\n *\n * @name Record#off\n * @method\n */\n/**\n * Trigger an event on this Record.\n *\n * @name Record#emit\n * @method\n * @param {string} event Name of event to emit.\n */\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\nutils.eventify(Record.prototype, function () {\n    return this._get('events');\n}, function (value) {\n    this._set('events', value);\n});\nutils.hidePrototypeMethods(Record);\n","import utils from './utils';\n/**\n * TODO\n *\n * @name Schema.types\n * @type {Object}\n */\nconst types = {\n    array: utils.isArray,\n    boolean: utils.isBoolean,\n    integer: utils.isInteger,\n    'null': utils.isNull,\n    number: utils.isNumber,\n    object: utils.isObject,\n    string: utils.isString\n};\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n    let str = '';\n    if (segment) {\n        if (utils.isNumber(segment)) {\n            str += `[${segment}]`;\n        }\n        else if (prev) {\n            str += `.${segment}`;\n        }\n        else {\n            str += `${segment}`;\n        }\n    }\n    return str;\n};\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n    opts || (opts = {});\n    let path = '';\n    const segments = opts.path || [];\n    segments.forEach(function (segment) {\n        path += segmentToString(segment, path);\n    });\n    path += segmentToString(opts.prop, path);\n    return path;\n};\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n    return {\n        expected,\n        actual: '' + actual,\n        path: makePath(opts)\n    };\n};\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n    errors.push(makeError(actual, expected, opts));\n};\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n    const max = schema[keyword];\n    if (value.length > max) {\n        return makeError(value.length, `length no more than ${max}`, opts);\n    }\n};\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n    const min = schema[keyword];\n    if (value.length < min) {\n        return makeError(value.length, `length no less than ${min}`, opts);\n    }\n};\n/**\n * TODO\n *\n * @name Schema.validationKeywords\n * @type {Object}\n */\nconst validationKeywords = {\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor82\n     *\n     * @name Schema.validationKeywords.allOf\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    allOf(value, schema, opts) {\n        let allErrors = [];\n        schema.allOf.forEach(function (_schema) {\n            allErrors = allErrors.concat(validate(value, _schema, opts) || []);\n        });\n        return allErrors.length ? undefined : allErrors;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor85\n     *\n     * @name Schema.validationKeywords.anyOf\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    anyOf(value, schema, opts) {\n        let validated = false;\n        let allErrors = [];\n        schema.anyOf.forEach(function (_schema) {\n            const errors = validate(value, _schema, opts);\n            if (errors) {\n                allErrors = allErrors.concat(errors);\n            }\n            else {\n                validated = true;\n            }\n        });\n        return validated ? undefined : allErrors;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor70\n     *\n     * @name Schema.validationKeywords.dependencies\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    dependencies(value, schema, opts) {\n        // TODO\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor76\n     *\n     * @name Schema.validationKeywords.enum\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    enum(value, schema, opts) {\n        const possibleValues = schema['enum'];\n        if (possibleValues.indexOf(value) === -1) {\n            return makeError(value, `one of (${possibleValues.join(', ')})`, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor37\n     *\n     * @name Schema.validationKeywords.items\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    items(value, schema, opts) {\n        opts || (opts = {});\n        // TODO: additionalItems\n        let items = schema.items;\n        let errors = [];\n        const checkingTuple = utils.isArray(items);\n        const length = value.length;\n        for (var prop = 0; prop < length; prop++) {\n            if (checkingTuple) {\n                // Validating a tuple, instead of just checking each item against the\n                // same schema\n                items = schema.items[prop];\n            }\n            opts.prop = prop;\n            errors = errors.concat(validate(value[prop], items, opts) || []);\n        }\n        return errors.length ? errors : undefined;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor17\n     *\n     * @name Schema.validationKeywords.maximum\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    maximum(value, schema, opts) {\n        // Must be a number\n        const maximum = schema.maximum;\n        // Must be a boolean\n        // Depends on maximum\n        // default: false\n        const exclusiveMaximum = schema.exclusiveMaximum;\n        if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n            // TODO: Account for value of exclusiveMaximum in messaging\n            return makeError(value, `no more than ${maximum}`, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor42\n     *\n     * @name Schema.validationKeywords.maxItems\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    maxItems(value, schema, opts) {\n        return maxLengthCommon('maxItems', value, schema, opts);\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor26\n     *\n     * @name Schema.validationKeywords.maxLength\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    maxLength(value, schema, opts) {\n        return maxLengthCommon('maxLength', value, schema, opts);\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor54\n     *\n     * @name Schema.validationKeywords.maxProperties\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    maxProperties(value, schema, opts) {\n        const maxProperties = schema.maxProperties;\n        const length = Object.keys(value).length;\n        if (length > maxProperties) {\n            return makeError(length, `no more than ${maxProperties} properties`, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor21\n     *\n     * @name Schema.validationKeywords.minimum\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    minimum(value, schema, opts) {\n        // Must be a number\n        const minimum = schema.minimum;\n        // Must be a boolean\n        // Depends on minimum\n        // default: false\n        const exclusiveMinimum = schema.exclusiveMinimum;\n        if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n            // TODO: Account for value of exclusiveMinimum in messaging\n            return makeError(value, `no less than ${minimum}`, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor42\n     *\n     * @name Schema.validationKeywords.minItems\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    minItems(value, schema, opts) {\n        return minLengthCommon('minItems', value, schema, opts);\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor29\n     *\n     * @name Schema.validationKeywords.minLength\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    minLength(value, schema, opts) {\n        return minLengthCommon('minLength', value, schema, opts);\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor57\n     *\n     * @name Schema.validationKeywords.minProperties\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    minProperties(value, schema, opts) {\n        const minProperties = schema.minProperties;\n        const length = Object.keys(value).length;\n        if (length < minProperties) {\n            return makeError(length, `no more than ${minProperties} properties`, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor14\n     *\n     * @name Schema.validationKeywords.multipleOf\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    multipleOf(value, schema, opts) {\n        // TODO\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor91\n     *\n     * @name Schema.validationKeywords.not\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    not(value, schema, opts) {\n        if (!validate(value, schema.not, opts)) {\n            // TODO: better messaging\n            return makeError('succeeded', 'should have failed', opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor88\n     *\n     * @name Schema.validationKeywords.oneOf\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    oneOf(value, schema, opts) {\n        let validated = false;\n        let allErrors = [];\n        schema.oneOf.forEach(function (_schema) {\n            const errors = validate(value, _schema, opts);\n            if (errors) {\n                allErrors = allErrors.concat(errors);\n            }\n            else if (validated) {\n                allErrors = [makeError('valid against more than one', 'valid against only one', opts)];\n                validated = false;\n                return false;\n            }\n            else {\n                validated = true;\n            }\n        });\n        return validated ? undefined : allErrors;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor33\n     *\n     * @name Schema.validationKeywords.pattern\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    pattern(value, schema, opts) {\n        const pattern = schema.pattern;\n        if (utils.isString(value) && !value.match(pattern)) {\n            return makeError(value, pattern, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor64\n     *\n     * @name Schema.validationKeywords.properties\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    properties(value, schema, opts) {\n        opts || (opts = {});\n        // Can be a boolean or an object\n        // Technically the default is an \"empty schema\", but here \"true\" is\n        // functionally the same\n        const additionalProperties = utils.isUndefined(schema.additionalProperties) ? true : schema.additionalProperties;\n        // \"s\": The property set of the instance to validate.\n        const toValidate = {};\n        // \"p\": The property set from \"properties\".\n        // Default is an object\n        const properties = schema.properties || {};\n        // \"pp\": The property set from \"patternProperties\".\n        // Default is an object\n        const patternProperties = schema.patternProperties || {};\n        let errors = [];\n        // Collect set \"s\"\n        utils.forOwn(value, function (_value, prop) {\n            toValidate[prop] = undefined;\n        });\n        // Remove from \"s\" all elements of \"p\", if any.\n        utils.forOwn(properties || {}, function (_schema, prop) {\n            if (utils.isUndefined(value[prop]) && !utils.isUndefined(_schema['default'])) {\n                value[prop] = utils.copy(_schema['default']);\n            }\n            opts.prop = prop;\n            errors = errors.concat(validate(value[prop], _schema, opts) || []);\n            delete toValidate[prop];\n        });\n        // For each regex in \"pp\", remove all elements of \"s\" which this regex\n        // matches.\n        utils.forOwn(patternProperties, function (_schema, pattern) {\n            utils.forOwn(toValidate, function (undef, prop) {\n                if (prop.match(pattern)) {\n                    opts.prop = prop;\n                    errors = errors.concat(validate(value[prop], _schema, opts) || []);\n                    delete toValidate[prop];\n                }\n            });\n        });\n        const keys = Object.keys(toValidate);\n        // If \"s\" is not empty, validation fails\n        if (additionalProperties === false) {\n            if (keys.length) {\n                addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors);\n            }\n        }\n        else if (utils.isObject(additionalProperties)) {\n            // Otherwise, validate according to provided schema\n            keys.forEach(function (prop) {\n                opts.prop = prop;\n                errors = errors.concat(validate(value[prop], additionalProperties, opts) || []);\n            });\n        }\n        return errors.length ? errors : undefined;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor61\n     *\n     * @name Schema.validationKeywords.required\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    required(value, schema, opts) {\n        const required = schema.required;\n        let errors = [];\n        if (!opts.existingOnly) {\n            required.forEach(function (prop) {\n                if (utils.isUndefined(utils.get(value, prop))) {\n                    const prevProp = opts.prop;\n                    opts.prop = prop;\n                    addError(undefined, 'a value', opts, errors);\n                    opts.prop = prevProp;\n                }\n            });\n        }\n        return errors.length ? errors : undefined;\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor79\n     *\n     * @name Schema.validationKeywords.type\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    type(value, schema, opts) {\n        let type = schema.type;\n        let validType;\n        // Can be one of several types\n        if (utils.isString(type)) {\n            type = [type];\n        }\n        // Try to match the value against an expected type\n        type.forEach(function (_type) {\n            // TODO: throw an error if type is not defined\n            if (types[_type](value, schema, opts)) {\n                // Matched a type\n                validType = _type;\n                return false;\n            }\n        });\n        // Value did not match any expected type\n        if (!validType) {\n            return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts);\n        }\n        // Run keyword validators for matched type\n        // http://json-schema.org/latest/json-schema-validation.html#anchor12\n        const validator = typeGroupValidators[validType];\n        if (validator) {\n            return validator(value, schema, opts);\n        }\n    },\n    /**\n     * http://json-schema.org/latest/json-schema-validation.html#anchor49\n     *\n     * @name Schema.validationKeywords.uniqueItems\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    uniqueItems(value, schema, opts) {\n        if (value && value.length && schema.uniqueItems) {\n            const length = value.length;\n            let item, i, j;\n            // Check n - 1 items\n            for (i = length - 1; i > 0; i--) {\n                item = value[i];\n                // Only compare against unchecked items\n                for (j = i - 1; j >= 0; j--) {\n                    // Found a duplicate\n                    if (item === value[j]) {\n                        return makeError(item, 'no duplicates', opts);\n                    }\n                }\n            }\n        }\n    }\n};\n/**\n * @ignore\n */\nconst validateKeyword = function (op, value, schema, opts) {\n    return !utils.isUndefined(schema[op]) && validationKeywords[op](value, schema, opts);\n};\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n    let errors = [];\n    ops.forEach(function (op) {\n        errors = errors.concat(validateKeyword(op, value, schema, opts) || []);\n    });\n    return errors.length ? errors : undefined;\n};\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not'];\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems'];\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum'];\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies'];\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern'];\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n    return runOps(ANY_OPS, value, schema, opts);\n};\n/**\n * TODO\n *\n * @name Schema.validate\n * @method\n * @param {*} value TODO\n * @param {Object} [schema] TODO\n * @param {Object} [opts] Configuration options.\n */\nconst validate = function (value, schema, opts) {\n    let errors = [];\n    opts || (opts = {});\n    let shouldPop;\n    let prevProp = opts.prop;\n    if (utils.isUndefined(schema)) {\n        return;\n    }\n    if (!utils.isObject(schema)) {\n        throw new Error(`Invalid schema at path: \"${opts.path}\"`);\n    }\n    if (utils.isUndefined(opts.path)) {\n        opts.path = [];\n    }\n    // Track our location as we recurse\n    if (!utils.isUndefined(opts.prop)) {\n        shouldPop = true;\n        opts.path.push(opts.prop);\n        opts.prop = undefined;\n    }\n    // Validate against parent schema\n    if (schema['extends']) {\n        // opts.path = path\n        // opts.prop = prop\n        if (utils.isFunction(schema['extends'].validate)) {\n            errors = errors.concat(schema['extends'].validate(value, opts) || []);\n        }\n        else {\n            errors = errors.concat(validate(value, schema['extends'], opts) || []);\n        }\n    }\n    if (utils.isUndefined(value)) {\n        // Check if property is required\n        if (schema.required === true) {\n            addError(value, 'a value', opts, errors);\n        }\n        if (shouldPop) {\n            opts.path.pop();\n            opts.prop = prevProp;\n        }\n        return errors.length ? errors : undefined;\n    }\n    errors = errors.concat(validateAny(value, schema, opts) || []);\n    if (shouldPop) {\n        opts.path.pop();\n        opts.prop = prevProp;\n    }\n    return errors.length ? errors : undefined;\n};\n// These strings are cached for optimal performance of the change detection\n// boolean - Whether a Record is changing in the current execution frame\nconst changingPath = 'changing';\n// string[] - Properties that have changed in the current execution frame\nconst changedPath = 'changed';\n// boolean - Whether a Record is currently being instantiated\nconst creatingPath = 'creating';\n// number - The setTimeout change event id of a Record, if any\nconst eventIdPath = 'eventId';\n// boolean - Whether to skip validation for a Record's currently changing property\nconst noValidatePath = 'noValidate';\n// boolean - Whether to skip change notification for a Record's currently\n// changing property\nconst silentPath = 'silent';\nconst validationFailureMsg = 'validation failed';\n/**\n * Assemble a property descriptor which will be added to the prototype of\n * {@link Mapper#recordClass}. This method is called when\n * {@link Mapper#applySchema} is set to `true`.\n *\n * TODO: Make this more configurable, i.e. not so tied to the Record class.\n *\n * @ignore\n */\nconst makeDescriptor = function (prop, schema, opts) {\n    const descriptor = {\n        // These properties are enumerable by default, but regardless of their\n        // enumerability, they won't be \"own\" properties of individual records\n        enumerable: utils.isUndefined(schema.enumerable) ? true : !!schema.enumerable\n    };\n    // Cache a few strings for optimal performance\n    const keyPath = `props.${prop}`;\n    const previousPath = `previous.${prop}`;\n    const getter = opts.getter;\n    const setter = opts.setter;\n    const unsetter = opts.unsetter;\n    descriptor.get = function () {\n        return this._get(keyPath);\n    };\n    descriptor.set = function (value) {\n        const self = this;\n        // These are accessed a lot\n        const _get = self[getter];\n        const _set = self[setter];\n        const _unset = self[unsetter];\n        // Optionally check that the new value passes validation\n        if (!_get(noValidatePath)) {\n            const errors = schema.validate(value);\n            if (errors) {\n                // Immediately throw an error, preventing the record from getting into\n                // an invalid state\n                const error = new Error(validationFailureMsg);\n                error.errors = errors;\n                throw error;\n            }\n        }\n        // TODO: Make it so tracking can be turned on for all properties instead of\n        // only per-property\n        if (schema.track && !_get(creatingPath)) {\n            const previous = _get(previousPath);\n            const current = _get(keyPath);\n            let changing = _get(changingPath);\n            let changed = _get(changedPath);\n            if (!changing) {\n                // Track properties that are changing in the current event loop\n                changed = [];\n            }\n            // Add changing properties to this array once at most\n            const index = changed.indexOf(prop);\n            if (current !== value && index === -1) {\n                changed.push(prop);\n            }\n            if (previous === value) {\n                if (index >= 0) {\n                    changed.splice(index, 1);\n                }\n            }\n            // No changes in current event loop\n            if (!changed.length) {\n                changing = false;\n                _unset(changingPath);\n                _unset(changedPath);\n                // Cancel pending change event\n                if (_get(eventIdPath)) {\n                    clearTimeout(_get(eventIdPath));\n                    _unset(eventIdPath);\n                }\n            }\n            // Changes detected in current event loop\n            if (!changing && changed.length) {\n                _set(changedPath, changed);\n                _set(changingPath, true);\n                // Saving the timeout id allows us to batch all changes in the same\n                // event loop into a single \"change\"\n                // TODO: Optimize\n                _set(eventIdPath, setTimeout(() => {\n                    // Previous event loop where changes were gathered has ended, so\n                    // notify any listeners of those changes and prepare for any new\n                    // changes\n                    _unset(changedPath);\n                    _unset(eventIdPath);\n                    _unset(changingPath);\n                    // TODO: Optimize\n                    if (!_get(silentPath)) {\n                        let i;\n                        for (i = 0; i < changed.length; i++) {\n                            self.emit('change:' + changed[i], self, utils.get(self, changed[i]));\n                        }\n                        self.emit('change', self, self.changes());\n                    }\n                    _unset(silentPath);\n                }, 0));\n            }\n        }\n        _set(keyPath, value);\n        return value;\n    };\n    return descriptor;\n};\n/**\n * TODO\n *\n * @name Schema.typeGroupValidators\n * @type {Object}\n */\nconst typeGroupValidators = {\n    /**\n     * TODO\n     *\n     * @name Schema.typeGroupValidators.array\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    array: function (value, schema, opts) {\n        return runOps(ARRAY_OPS, value, schema, opts);\n    },\n    /**\n     * TODO\n     *\n     * @name Schema.typeGroupValidators.integer\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    integer: function (value, schema, opts) {\n        // Additional validations for numerics are the same\n        return typeGroupValidators.numeric(value, schema, opts);\n    },\n    /**\n     * TODO\n     *\n     * @name Schema.typeGroupValidators.number\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    number: function (value, schema, opts) {\n        // Additional validations for numerics are the same\n        return typeGroupValidators.numeric(value, schema, opts);\n    },\n    /**\n     * TODO\n     *\n     * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n     *\n     * @name Schema.typeGroupValidators.numeric\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    numeric: function (value, schema, opts) {\n        return runOps(NUMERIC_OPS, value, schema, opts);\n    },\n    /**\n     * TODO\n     *\n     * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n     *\n     * @name Schema.typeGroupValidators.object\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    object: function (value, schema, opts) {\n        return runOps(OBJECT_OPS, value, schema, opts);\n    },\n    /**\n     * TODO\n     *\n     * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n     *\n     * @name Schema.typeGroupValidators.string\n     * @method\n     * @param {*} value TODO\n     * @param {Object} schema TODO\n     * @param {Object} opts TODO\n     */\n    string: function (value, schema, opts) {\n        return runOps(STRING_OPS, value, schema, opts);\n    }\n};\n/**\n * js-data's Schema class.\n *\n * ```javascript\n * import {Schema} from 'js-data'\n * ```\n *\n * @class Schema\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport class Schema {\n    constructor(definition) {\n        // const self = this\n        definition || (definition = {});\n        // TODO: schema validation\n        utils.fillIn(this, definition);\n        // TODO: rework this to make sure all possible keywords are converted\n        if (definition.properties) {\n            utils.forOwn(definition.properties, function (_definition, prop) {\n                if (!(_definition instanceof Schema)) {\n                    definition.properties[prop] = new Schema(_definition);\n                }\n            });\n        }\n    }\n    /**\n     * This adds ES5 getters/setters to the target based on the \"properties\" in\n     * this Schema, which makes possible change tracking and validation on\n     * property assignment.\n     *\n     * @name Schema#validate\n     * @method\n     * @param {Object} target The prototype to which to apply this schema.\n     */\n    apply(target, opts) {\n        opts || (opts = {});\n        opts.getter = opts.getter || '_get';\n        opts.setter = opts.setter || '_set';\n        opts.unsetter = opts.unsetter || '_unset';\n        const properties = this.properties || {};\n        utils.forOwn(properties, function (schema, prop) {\n            Object.defineProperty(target, prop, makeDescriptor(prop, schema, opts));\n        });\n    }\n    /**\n     * Validate the provided value against this schema.\n     *\n     * @name Schema#validate\n     * @method\n     * @param {*} value Value to validate.\n     * @param {Object} [opts] Configuration options.\n     * @return {(array|undefined)} Array of errors or `undefined` if valid.\n     */\n    validate(value, opts) {\n        return Schema.validate(value, this, opts);\n    }\n}\n/**\n * @name Schema.extend\n * @method\n */\nSchema.extend = utils.extend;\nSchema.types = types;\nSchema.typeGroupValidators = typeGroupValidators;\nSchema.validationKeywords = validationKeywords;\nSchema.validate = validate;\n","import utils from './utils';\nimport { belongsTo, belongsToType, hasMany, hasManyType, hasOne, hasOneType } from './decorators';\nimport { Record } from './Record';\nimport { Schema } from './Schema';\nconst notify = function (...args) {\n    const self = this;\n    const opts = args[args.length - 1];\n    self.dbg(opts.op, ...args);\n    if (opts.notify || (opts.notify === undefined && self.notify)) {\n        setTimeout(() => {\n            self.emit(opts.op, ...args);\n        });\n    }\n};\nconst notify2 = function (...args) {\n    const self = this;\n    const opts = args[args.length - 2];\n    self.dbg(opts.op, ...args);\n    if (opts.notify || (opts.notify === undefined && self.notify)) {\n        setTimeout(() => {\n            self.emit(opts.op, ...args);\n        });\n    }\n};\nconst MAPPER_DEFAULTS = {\n    /**\n     * Whether to augment {@link Mapper#recordClass} with getter/setter property\n     * accessors according to the properties defined in {@link Mapper#schema}.\n     * This makes possible validation and change tracking on individual properties\n     * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n     * property.\n     *\n     * @name Mapper#applySchema\n     * @type {boolean}\n     * @default true\n     */\n    applySchema: true,\n    /**\n     * Whether to enable debug-level logs.\n     *\n     * @name Mapper#debug\n     * @type {boolean}\n     * @default false\n     */\n    debug: false,\n    /**\n     * The name of the registered adapter that this Mapper should used by default.\n     *\n     * @name Mapper#defaultAdapter\n     * @type {string}\n     * @default \"http\"\n     */\n    defaultAdapter: 'http',\n    /**\n     * The field used as the unique identifier on records handled by this Mapper.\n     *\n     * @name Mapper#idAttribute\n     * @type {string}\n     * @default id\n     */\n    idAttribute: 'id',\n    lifecycleMethods: {\n        count: {\n            defaults: [{}, {}],\n            skip: true,\n            types: []\n        },\n        destroy: {\n            defaults: [{}, {}],\n            skip: true,\n            types: []\n        },\n        destroyAll: {\n            defaults: [{}, {}],\n            skip: true,\n            types: []\n        },\n        find: {\n            defaults: [undefined, {}],\n            types: []\n        },\n        findAll: {\n            defaults: [{}, {}],\n            types: []\n        },\n        sum: {\n            defaults: [undefined, {}, {}],\n            skip: true,\n            types: []\n        },\n        update: {\n            adapterArgs(mapper, id, props, opts) {\n                return [id, mapper.toJSON(props, opts), opts];\n            },\n            beforeAssign: 1,\n            defaults: [undefined, {}, {}],\n            types: []\n        },\n        updateAll: {\n            adapterArgs(mapper, props, query, opts) {\n                return [mapper.toJSON(props, opts), query, opts];\n            },\n            beforeAssign: 0,\n            defaults: [{}, {}, {}],\n            types: []\n        },\n        updateMany: {\n            adapterArgs(mapper, records, opts) {\n                return [records.map(function (record) {\n                        return mapper.toJSON(record, opts);\n                    }), opts];\n            },\n            beforeAssign: 0,\n            defaults: [[], {}],\n            types: []\n        }\n    },\n    /**\n     * Minimum amount of meta information required to start operating against a\n     * resource.\n     *\n     * @name Mapper#name\n     * @type {string}\n     */\n    name: null,\n    /**\n     * Whether this Mapper should emit operational events.\n     *\n     * Defaults to `true` in the browser and `false` in Node.js\n     *\n     * @name Mapper#notify\n     * @type {boolean}\n     */\n    notify: utils.isBrowser,\n    /**\n     * Whether {@link Mapper#create}, {@link Mapper#createMany}, {@link Mapper#save},\n     * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n     * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy}, and\n     * {@link Mapper#destroyAll} should return a raw result object that contains\n     * both the instance data returned by the adapter _and_ metadata about the\n     * operation.\n     *\n     * The default is to NOT return the result object, and instead return just the\n     * instance data.\n     *\n     * @name Mapper#raw\n     * @type {boolean}\n     * @default false\n     */\n    raw: false,\n    schema: null\n};\n/**\n * ```javascript\n * import {Mapper} from 'js-data'\n * ```\n *\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers has been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * utils._(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n *\n * @class Mapper\n * @param {Object} [opts] Configuration options.\n */\nexport class Mapper {\n    constructor(opts) {\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n         * returns a promise then {@link Mapper#count} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterCount\n         * @method\n         * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n         * @param {*} result The result, if any.\n         */\n        this.afterCount = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n         * returns a promise then {@link Mapper#create} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterCreate\n         * @method\n         * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n         * @param {*} result The result, if any.\n         */\n        this.afterCreate = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n         * returns a promise then {@link Mapper#createMany} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterCreateMany\n         * @method\n         * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n         * @param {*} result The result, if any.\n         */\n        this.afterCreateMany = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n         * returns a promise then {@link Mapper#destroy} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterDestroy\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n         * @param {*} result The result, if any.\n         */\n        this.afterDestroy = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n         * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterDestroyAll\n         * @method\n         * @param {*} data The `data` returned by the adapter.\n         * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n         * @param {*} result The result, if any.\n         */\n        this.afterDestroyAll = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n         * returns a promise then {@link Mapper#find} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterFind\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n         * @param {*} result The result, if any.\n         */\n        this.afterFind = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n         * returns a promise then {@link Mapper#findAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterFindAll\n         * @method\n         * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n         * @param {*} result The result, if any.\n         */\n        this.afterFindAll = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n         * returns a promise then {@link Mapper#sum} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterSum\n         * @method\n         * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n         * @param {*} result The result, if any.\n         */\n        this.afterSum = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n         * returns a promise then {@link Mapper#update} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterUpdate\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n         * @param {props} props The `props` argument passed to {@link Mapper#update}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n         * @param {*} result The result, if any.\n         */\n        this.afterUpdate = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n         * returns a promise then {@link Mapper#updateAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterUpdateAll\n         * @method\n         * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n         * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n         * @param {*} result The result, if any.\n         */\n        this.afterUpdateAll = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n         * returns a promise then {@link Mapper#updateMany} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#afterUpdateMany\n         * @method\n         * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n         * @param {*} result The result, if any.\n         */\n        this.afterUpdateMany = notify2;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n         * returns a promise then {@link Mapper#create} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeCreate\n         * @method\n         * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n         */\n        this.beforeCreate = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n         * returns a promise then {@link Mapper#createMany} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeCreateMany\n         * @method\n         * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n         */\n        this.beforeCreateMany = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n         * returns a promise then {@link Mapper#count} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeCount\n         * @method\n         * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n         */\n        this.beforeCount = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n         * returns a promise then {@link Mapper#destroy} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeDestroy\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n         */\n        this.beforeDestroy = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n         * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeDestroyAll\n         * @method\n         * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n         */\n        this.beforeDestroyAll = notify;\n        /**\n         * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n         * returns a promise then {@link Mapper#find} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeFind\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n         */\n        this.beforeFind = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n         * returns a promise then {@link Mapper#findAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeFindAll\n         * @method\n         * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n         */\n        this.beforeFindAll = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n         * returns a promise then {@link Mapper#sum} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeSum\n         * @method\n         * @param {string} field The `field` argument passed to {@link Mapper#sum}.\n         * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n         */\n        this.beforeSum = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n         * returns a promise then {@link Mapper#update} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeUpdate\n         * @method\n         * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n         * @param {props} props The `props` argument passed to {@link Mapper#update}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n         */\n        this.beforeUpdate = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n         * returns a promise then {@link Mapper#updateAll} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeUpdateAll\n         * @method\n         * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n         * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n         */\n        this.beforeUpdateAll = notify;\n        /**\n         * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n         * returns a promise then {@link Mapper#updateMany} will wait for the promise\n         * to resolve before continuing.\n         *\n         * @name Mapper#beforeUpdateMany\n         * @method\n         * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n         * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n         */\n        this.beforeUpdateMany = notify;\n        const self = this;\n        utils.classCallCheck(self, Mapper);\n        opts || (opts = {});\n        /**\n         * Hash of registered adapters. Don't modify. Use {@link Mapper#registerAdapter}.\n         *\n         * @name Mapper#_adapters\n         * @private\n         */\n        Object.defineProperty(self, '_adapters', {\n            value: undefined,\n            writable: true\n        });\n        /**\n         * Hash of registered listeners. Don't modify. Use {@link Mapper#on} and\n         * {@link Mapper#off}.\n         *\n         * @name Mapper#_listeners\n         * @private\n         */\n        Object.defineProperty(self, '_listeners', {\n            value: {},\n            writable: true\n        });\n        /**\n         * Set the `false` to force the Mapper to work with POJO objects only.\n         *\n         * ```javascript\n         * import {Mapper, Record} from 'js-data'\n         * const UserMapper = new Mapper({ recordClass: false })\n         * UserMapper.recordClass // false\n         * const user = UserMapper#createRecord()\n         * user instanceof Record // false\n         * ```\n         *\n         * Set to a custom class to have records wrapped in your custom class.\n         *\n         * ```javascript\n         * import {Mapper, Record} from 'js-data'\n         *  // Custom class\n         * class User {\n         *   constructor (props = {}) {\n         *     for (var key in props) {\n         *       if (props.hasOwnProperty(key)) {\n         *         this[key] = props[key]\n         *       }\n         *     }\n         *   }\n         * }\n         * const UserMapper = new Mapper({ recordClass: User })\n         * UserMapper.recordClass // function User() {}\n         * const user = UserMapper#createRecord()\n         * user instanceof Record // false\n         * user instanceof User // true\n         * ```\n         *\n         * Extend the {@link Record} class.\n         *\n         * ```javascript\n         * import {Mapper, Record} from 'js-data'\n         *  // Custom class\n         * class User extends Record {\n         *   constructor () {\n         *     super(props)\n         *   }\n         * }\n         * const UserMapper = new Mapper({ recordClass: User })\n         * UserMapper.recordClass // function User() {}\n         * const user = UserMapper#createRecord()\n         * user instanceof Record // true\n         * user instanceof User // true\n         * ```\n         *\n         * @name Mapper#recordClass\n         * @default {@link Record}\n         */\n        Object.defineProperty(self, 'recordClass', {\n            value: undefined,\n            writable: true\n        });\n        utils.fillIn(self, opts);\n        utils.fillIn(self, utils.copy(MAPPER_DEFAULTS));\n        if (!self.name) {\n            throw new Error('mapper cannot function without a name!');\n        }\n        self._adapters || (self._adapters = {});\n        if (!(self.schema instanceof Schema)) {\n            self.schema = new Schema(self.schema || {});\n        }\n        if (utils.isUndefined(self.recordClass)) {\n            self.recordClass = Record.extend();\n        }\n        if (self.recordClass) {\n            self.recordClass.mapper = self;\n            // We can only apply the schema to the prototype of self.recordClass if the\n            // class extends Record\n            if (utils.getSuper(self.recordClass, true) === Record && self.schema && self.schema.apply && self.applySchema) {\n                self.schema.apply(self.recordClass.prototype);\n            }\n        }\n    }\n    /**\n     * @name Mapper#_end\n     * @method\n     * @private\n     */\n    _end(result, opts, skip) {\n        const self = this;\n        if (opts.raw) {\n            utils._(opts, result);\n        }\n        if (skip) {\n            return result;\n        }\n        let _data = opts.raw ? result.data : result;\n        if (utils.isArray(_data) && _data.length && utils.isObject(_data[0])) {\n            _data = _data.map(function (item) {\n                return self.createRecord(item);\n            });\n        }\n        else if (utils.isObject(_data)) {\n            _data = self.createRecord(_data);\n        }\n        if (opts.raw) {\n            result.data = _data;\n        }\n        else {\n            result = _data;\n        }\n        return result;\n    }\n    /**\n     * Usage:\n     *\n     * Post.belongsTo(User, {\n     *   localKey: 'myUserId'\n     * })\n     *\n     * Comment.belongsTo(User)\n     * Comment.belongsTo(Post, {\n     *   localField: '_post'\n     * })\n     *\n     * @name Mapper#belongsTo\n     * @method\n     */\n    belongsTo(relatedMapper, opts) {\n        return belongsTo(relatedMapper, opts)(this);\n    }\n    /**\n     * Using the `query` argument, select records to pull from an adapter.\n     * Expects back from the adapter the array of selected records.\n     *\n     * {@link Mapper#beforeCount} will be called before calling the adapter.\n     * {@link Mapper#afterCount} will be called after calling the adapter.\n     *\n     * @name Mapper#count\n     * @method\n     * @param {Object} [query={}] Selection query.\n     * @param {Object} [query.where] Filtering criteria.\n     * @param {number} [query.skip] Number to skip.\n     * @param {number} [query.limit] Number to limit to.\n     * @param {Array} [query.orderBy] Sorting criteria.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * resulting data. If `true` return a response object that includes the\n     * resulting data and metadata about the operation.\n     * @return {Promise}\n     */\n    count(query, opts) {\n        return this.crud('count', query, opts);\n    }\n    /**\n     * Create and save a new the record using the provided `props`.\n     *\n     * {@link Mapper#beforeCreate} will be called before calling the adapter.\n     * {@link Mapper#afterCreate} will be called after calling the adapter.\n     *\n     * @name Mapper#create\n     * @method\n     * @param {Object} props The properties for the new record.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * created data. If `true` return a response object that includes the created\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to create in a cascading\n     * create if `props` contains nested relations. NOT performed in a\n     * transaction. Each nested create will result in another {@link Mapper#create}\n     * or {@link Mapper#createMany} call.\n     * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n     * of the payload. Normally relations are not sent.\n     * @return {Promise}\n     */\n    create(props, opts) {\n        let op, adapter;\n        const self = this;\n        // Default values for arguments\n        props || (props = {});\n        opts || (opts = {});\n        // Fill in \"opts\" with the Mapper's configuration\n        utils._(self, opts);\n        adapter = opts.adapter = self.getAdapterName(opts);\n        // beforeCreate lifecycle hook\n        op = opts.op = 'beforeCreate';\n        return utils.resolve(self[op](props, opts)).then(function (_props) {\n            // Allow for re-assignment from lifecycle hook\n            props = utils.isUndefined(_props) ? props : _props;\n            // Deep pre-create belongsTo relations\n            const belongsToRelationData = {};\n            opts.with || (opts.with = []);\n            let tasks = [];\n            utils.forEachRelation(self, opts, function (def, optsCopy) {\n                const relationData = def.getLocalField(props);\n                if (def.type === belongsToType && relationData) {\n                    // Create belongsTo relation first because we need a generated id to\n                    // attach to the child\n                    tasks.push(def.getRelation().create(relationData, optsCopy).then(function (data) {\n                        const relatedRecord = optsCopy.raw ? data.data : data;\n                        def.setLocalField(belongsToRelationData, relatedRecord);\n                        def.setForeignKey(props, relatedRecord);\n                    }));\n                }\n            });\n            return utils.Promise.all(tasks).then(function () {\n                // Now delegate to the adapter for the main create\n                op = opts.op = 'create';\n                self.dbg(op, props, opts);\n                return utils.resolve(self.getAdapter(adapter)[op](self, self.toJSON(props, { with: opts.pass || [] }), opts));\n            }).then(function (data) {\n                const createdRecord = opts.raw ? data.data : data;\n                // Deep post-create hasMany and hasOne relations\n                tasks = [];\n                utils.forEachRelation(self, opts, function (def, optsCopy) {\n                    const relationData = def.getLocalField(props);\n                    if (!relationData) {\n                        return;\n                    }\n                    let task;\n                    // Create hasMany and hasOne after the main create because we needed\n                    // a generated id to attach to these items\n                    if (def.type === hasManyType) {\n                        def.setForeignKey(createdRecord, relationData);\n                        task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n                            def.setLocalField(createdRecord, opts.raw ? data.data : data);\n                        });\n                    }\n                    else if (def.type === hasOneType) {\n                        def.setForeignKey(createdRecord, relationData);\n                        task = def.getRelation().create(relationData, optsCopy).then(function (data) {\n                            def.setLocalField(createdRecord, opts.raw ? data.data : data);\n                        });\n                    }\n                    else if (def.type === belongsToType && def.getLocalField(belongsToRelationData)) {\n                        def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData));\n                    }\n                    if (task) {\n                        tasks.push(task);\n                    }\n                });\n                return utils.Promise.all(tasks).then(function () {\n                    return data;\n                });\n            });\n        }).then(function (result) {\n            result = self._end(result, opts);\n            // afterCreate lifecycle hook\n            op = opts.op = 'afterCreate';\n            return utils.resolve(self[op](props, opts, result)).then(function (_result) {\n                // Allow for re-assignment from lifecycle hook\n                return utils.isUndefined(_result) ? result : _result;\n            });\n        });\n    }\n    createInstance(props, opts) {\n        return this.createRecord(props, opts);\n    }\n    /**\n     * Given an array of records, batch create them via an adapter.\n     *\n     * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n     * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n     *\n     * @name Mapper#createMany\n     * @method\n     * @param {Array} records Array of records to be created in one batch.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * updated data. If `true` return a response object that includes the updated\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to create in a cascading\n     * create if `records` contains nested relations. NOT performed in a\n     * transaction. Each nested create will result in another {@link Mapper#createMany}\n     * call.\n     * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n     * of the payload. Normally relations are not sent.\n     * @return {Promise}\n     */\n    createMany(records, opts) {\n        let op, adapter;\n        const self = this;\n        // Default values for arguments\n        records || (records = []);\n        opts || (opts = {});\n        // Fill in \"opts\" with the Mapper's configuration\n        utils._(self, opts);\n        adapter = opts.adapter = self.getAdapterName(opts);\n        // beforeCreateMany lifecycle hook\n        op = opts.op = 'beforeCreateMany';\n        return utils.resolve(self[op](records, opts)).then(function (_records) {\n            // Allow for re-assignment from lifecycle hook\n            records = utils.isUndefined(_records) ? records : _records;\n            // Deep pre-create belongsTo relations\n            const belongsToRelationData = {};\n            opts.with || (opts.with = []);\n            let tasks = [];\n            utils.forEachRelation(self, opts, function (def, optsCopy) {\n                const relationData = records.map(function (record) {\n                    return def.getLocalField(record);\n                }).filter(function (relatedRecord) {\n                    return relatedRecord;\n                });\n                if (def.type === belongsToType && relationData.length === records.length) {\n                    // Create belongsTo relation first because we need a generated id to\n                    // attach to the child\n                    tasks.push(def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n                        const relatedRecords = optsCopy.raw ? data.data : data;\n                        def.setLocalField(belongsToRelationData, relatedRecords);\n                        records.forEach(function (record, i) {\n                            def.setForeignKey(record, relatedRecords[i]);\n                        });\n                    }));\n                }\n            });\n            return utils.Promise.all(tasks).then(function () {\n                // Now delegate to the adapter\n                op = opts.op = 'createMany';\n                const json = records.map(function (record) {\n                    return self.toJSON(record, { with: opts.pass || [] });\n                });\n                self.dbg(op, records, opts);\n                return utils.resolve(self.getAdapter(adapter)[op](self, json, opts));\n            }).then(function (data) {\n                const createdRecords = opts.raw ? data.data : data;\n                // Deep post-create hasOne relations\n                tasks = [];\n                utils.forEachRelation(self, opts, function (def, optsCopy) {\n                    const relationData = records.map(function (record) {\n                        return def.getLocalField(record);\n                    }).filter(function (relatedRecord) {\n                        return relatedRecord;\n                    });\n                    if (relationData.length !== records.length) {\n                        return;\n                    }\n                    const belongsToData = def.getLocalField(belongsToRelationData);\n                    let task;\n                    // Create hasMany and hasOne after the main create because we needed\n                    // a generated id to attach to these items\n                    if (def.type === hasManyType) {\n                        // Not supported\n                        self.log('warn', 'deep createMany of hasMany type not supported!');\n                    }\n                    else if (def.type === hasOneType) {\n                        createdRecords.forEach(function (createdRecord, i) {\n                            def.setForeignKey(createdRecord, relationData[i]);\n                        });\n                        task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n                            const relatedData = opts.raw ? data.data : data;\n                            createdRecords.forEach(function (createdRecord, i) {\n                                def.setLocalField(createdRecord, relatedData[i]);\n                            });\n                        });\n                    }\n                    else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecords.length) {\n                        createdRecords.forEach(function (createdRecord, i) {\n                            def.setLocalField(createdRecord, belongsToData[i]);\n                        });\n                    }\n                    if (task) {\n                        tasks.push(task);\n                    }\n                });\n                return utils.Promise.all(tasks).then(function () {\n                    return data;\n                });\n            });\n        }).then(function (result) {\n            result = self._end(result, opts);\n            // afterCreateMany lifecycle hook\n            op = opts.op = 'afterCreateMany';\n            return utils.resolve(self[op](records, opts, result)).then(function (_result) {\n                // Allow for re-assignment from lifecycle hook\n                return utils.isUndefined(_result) ? result : _result;\n            });\n        });\n    }\n    /**\n     * Create an unsaved, uncached instance of this Mapper's\n     * {@link Mapper#recordClass}.\n     *\n     * Returns `props` if `props` is already an instance of\n     * {@link Mapper#recordClass}.\n     *\n     * @name Mapper#createRecord\n     * @method\n     * @param {Object} props The initial properties of the new unsaved record.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n     * initial properties.\n     * @return {Object} The unsaved record.\n     */\n    createRecord(props, opts) {\n        const self = this;\n        const recordClass = self.recordClass;\n        const relationList = self.relationList || [];\n        relationList.forEach(function (def) {\n            const relatedMapper = def.getRelation();\n            const relationData = def.getLocalField(props);\n            if (utils.isArray(relationData) && relationData.length && !relatedMapper.is(relationData[0])) {\n                def.setLocalField(props, relationData.map(function (relationDataItem) {\n                    return def.getRelation().createRecord(relationDataItem);\n                }));\n            }\n            else if (utils.isObject(relationData) && !relatedMapper.is(relationData)) {\n                def.setLocalField(props, def.getRelation().createRecord(relationData));\n            }\n        });\n        // Check to make sure \"props\" is not already an instance of this Mapper.\n        return recordClass ? (props instanceof recordClass ? props : new recordClass(props, opts)) : props;\n    }\n    /**\n     * Lifecycle invocation method.\n     *\n     * @name Mapper#crud\n     * @method\n     * @param {string} method Name of the lifecycle method to invoke.\n     * @param {...*} args Arguments to pass to the lifecycle method.\n     * @return {Promise}\n     */\n    crud(method, ...args) {\n        const self = this;\n        const config = self.lifecycleMethods[method];\n        if (!config) {\n            throw new Error(`${method}: No such CRUD method!`);\n        }\n        const upper = `${method.charAt(0).toUpperCase()}${method.substr(1)}`;\n        const before = `before${upper}`;\n        const after = `after${upper}`;\n        let op, adapter;\n        // Default values for arguments\n        config.defaults.forEach(function (value, i) {\n            if (utils.isUndefined(args[i])) {\n                args[i] = utils.copy(value);\n            }\n        });\n        const opts = args[args.length - 1];\n        // Fill in \"opts\" with the Mapper's configuration\n        utils._(self, opts);\n        adapter = opts.adapter = self.getAdapterName(opts);\n        // before lifecycle hook\n        op = opts.op = before;\n        return utils.resolve(self[op](...args)).then(function (_value) {\n            if (!utils.isUndefined(config.beforeAssign)) {\n                // Allow for re-assignment from lifecycle hook\n                args[config.beforeAssign] = utils.isUndefined(_value) ? args[config.beforeAssign] : _value;\n            }\n            // Now delegate to the adapter\n            op = opts.op = method;\n            args = config.adapterArgs ? config.adapterArgs(self, ...args) : args;\n            self.dbg(op, ...args);\n            return utils.resolve(self.getAdapter(adapter)[op](self, ...args));\n        }).then(function (result) {\n            result = self._end(result, opts, !!config.skip);\n            args.push(result);\n            // after lifecycle hook\n            op = opts.op = after;\n            return utils.resolve(self[op](...args)).then(function (_result) {\n                // Allow for re-assignment from lifecycle hook\n                return utils.isUndefined(_result) ? result : _result;\n            });\n        });\n    }\n    /**\n     * Using an adapter, destroy the record with the primary key specified by the\n     * `id` argument.\n     *\n     * {@link Mapper#beforeDestroy} will be called before destroying the record.\n     * {@link Mapper#afterDestroy} will be called after destroying the record.\n     *\n     * @name Mapper#destroy\n     * @method\n     * @param {(string|number)} id The primary key of the record to destroy.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * ejected data (if any). If `true` return a response object that includes the\n     * ejected data (if any) and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n     * delete. NOT performed in a transaction.\n     * @return {Promise}\n     */\n    destroy(id, opts) {\n        return this.crud('destroy', id, opts);\n    }\n    /**\n     * Using the `query` argument, destroy the selected records via an adapter.\n     * If no `query` is provided then all records will be destroyed.\n     *\n     * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n     * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n     *\n     * @name Mapper#destroyAll\n     * @method\n     * @param {Object} [query={}] Selection query.\n     * @param {Object} [query.where] Filtering criteria.\n     * @param {number} [query.skip] Number to skip.\n     * @param {number} [query.limit] Number to limit to.\n     * @param {Array} [query.orderBy] Sorting criteria.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * ejected data (if any). If `true` return a response object that includes the\n     * ejected data (if any) and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n     * delete. NOT performed in a transaction.\n     * @return {Promise}\n     */\n    destroyAll(query, opts) {\n        return this.crud('destroyAll', query, opts);\n    }\n    /**\n     * Retrieve via an adapter the record with the given primary key.\n     *\n     * {@link Mapper#beforeFind} will be called before calling the adapter.\n     * {@link Mapper#afterFind} will be called after calling the adapter.\n     *\n     * @name Mapper#find\n     * @method\n     * @param {(string|number)} id The primary key of the record to retrieve.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * updated data. If `true` return a response object that includes the updated\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n     * @return {Promise}\n     */\n    find(id, opts) {\n        return this.crud('find', id, opts);\n    }\n    /**\n     * Using the `query` argument, select records to pull from an adapter.\n     * Expects back from the adapter the array of selected records.\n     *\n     * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n     * {@link Mapper#afterFindAll} will be called after calling the adapter.\n     *\n     * @name Mapper#findAll\n     * @method\n     * @param {Object} [query={}] Selection query.\n     * @param {Object} [query.where] Filtering criteria.\n     * @param {number} [query.skip] Number to skip.\n     * @param {number} [query.limit] Number to limit to.\n     * @param {Array} [query.orderBy] Sorting criteria.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * resulting data. If `true` return a response object that includes the\n     * resulting data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n     * @return {Promise}\n     */\n    findAll(query, opts) {\n        return this.crud('findAll', query, opts);\n    }\n    /**\n     * Return the registered adapter with the given name or the default adapter if\n     * no name is provided.\n     *\n     * @name Mapper#getAdapter\n     * @method\n     * @param {string} [name] The name of the adapter to retrieve.\n     * @return {Adapter} The adapter.\n     */\n    getAdapter(name) {\n        const self = this;\n        self.dbg('getAdapter', 'name:', name);\n        const adapter = self.getAdapterName(name);\n        if (!adapter) {\n            throw new ReferenceError(`${adapter} not found!`);\n        }\n        return self.getAdapters()[adapter];\n    }\n    /**\n     * Return the name of a registered adapter based on the given name or options,\n     * or the name of the default adapter if no name provided.\n     *\n     * @name Mapper#getAdapterName\n     * @method\n     * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n     * @return {string} The name of the adapter.\n     */\n    getAdapterName(opts) {\n        opts || (opts = {});\n        if (utils.isString(opts)) {\n            opts = { adapter: opts };\n        }\n        return opts.adapter || opts.defaultAdapter;\n    }\n    /**\n     * @name Mapper#getAdapters\n     * @method\n     */\n    getAdapters() {\n        return this._adapters;\n    }\n    getSchema() {\n        return this.schema;\n    }\n    /**\n     * Usage:\n     *\n     * User.hasMany(Post, {\n     *   localField: 'my_posts'\n     * })\n     *\n     * @name Mapper#hasMany\n     * @method\n     */\n    hasMany(relatedMapper, opts) {\n        return hasMany(relatedMapper, opts)(this);\n    }\n    /**\n     * Usage:\n     *\n     * User.hasOne(Profile, {\n     *   localField: '_profile'\n     * })\n     *\n     * @name Mapper#hasOne\n     * @method\n     */\n    hasOne(relatedMapper, opts) {\n        return hasOne(relatedMapper, opts)(this);\n    }\n    /**\n     * Return whether `record` is an instance of this Mappers's recordClass.\n     *\n     * @name Mapper#is\n     * @method\n     * @param {Object} record The record to check.\n     * @return {boolean} Whether `record` is an instance of this Mappers's\n     * {@ link Mapper#recordClass}.\n     */\n    is(record) {\n        const recordClass = this.recordClass;\n        return recordClass ? record instanceof recordClass : false;\n    }\n    /**\n     * Register an adapter on this mapper under the given name.\n     *\n     * @name Mapper#registerAdapter\n     * @method\n     * @param {string} name The name of the adapter to register.\n     * @param {Adapter} adapter The adapter to register.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.default=false] Whether to make the adapter the\n     * default adapter for this Mapper.\n     */\n    registerAdapter(name, adapter, opts) {\n        const self = this;\n        opts || (opts = {});\n        self.getAdapters()[name] = adapter;\n        // Optionally make it the default adapter for the target.\n        if (opts === true || opts.default) {\n            self.defaultAdapter = name;\n        }\n    }\n    /**\n     * Using the `query` argument, select records to pull from an adapter.\n     * Expects back from the adapter the array of selected records.\n     *\n     * {@link Mapper#beforeSum} will be called before calling the adapter.\n     * {@link Mapper#afterSum} will be called after calling the adapter.\n     *\n     * @name Mapper#sum\n     * @method\n     * @param {string} field The field to sum.\n     * @param {Object} [query={}] Selection query.\n     * @param {Object} [query.where] Filtering criteria.\n     * @param {number} [query.skip] Number to skip.\n     * @param {number} [query.limit] Number to limit to.\n     * @param {Array} [query.orderBy] Sorting criteria.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * resulting data. If `true` return a response object that includes the\n     * resulting data and metadata about the operation.\n     * @return {Promise}\n     */\n    sum(field, query, opts) {\n        return this.crud('sum', field, query, opts);\n    }\n    /**\n     * Return a plain object representation of the given record.\n     *\n     * @name Mapper#toJSON\n     * @method\n     * @param {Object} record Record from which to create a plain object\n     * representation.\n     * @param {Object} [opts] Configuration options.\n     * @param {string[]} [opts.with] Array of relation names or relation fields\n     * to include in the representation.\n     * @return {Object} Plain object representation of the record.\n     */\n    toJSON(record, opts) {\n        const self = this;\n        opts || (opts = {});\n        const relationFields = (self ? self.relationFields : []) || [];\n        let json = {};\n        let properties;\n        if (self && self.schema) {\n            properties = self.schema.properties || {};\n            // TODO: Make this work recursively\n            utils.forOwn(properties, function (opts, prop) {\n                json[prop] = utils.plainCopy(record[prop]);\n            });\n        }\n        properties || (properties = {});\n        if (!opts.strict) {\n            utils.forOwn(record, function (value, key) {\n                if (!properties[key] && relationFields.indexOf(key) === -1) {\n                    json[key] = utils.plainCopy(value);\n                }\n            });\n        }\n        // The user wants to include relations in the resulting plain object\n        // representation\n        if (self && opts.withAll) {\n            opts.with = relationFields.slice();\n        }\n        if (self && opts.with) {\n            if (utils.isString(opts.with)) {\n                opts.with = [opts.with];\n            }\n            utils.forEachRelation(self, opts, function (def, optsCopy) {\n                const relationData = def.getLocalField(record);\n                if (relationData) {\n                    // The actual recursion\n                    if (utils.isArray(relationData)) {\n                        def.setLocalField(json, relationData.map(function (item) {\n                            return def.getRelation().toJSON(item, optsCopy);\n                        }));\n                    }\n                    else {\n                        def.setLocalField(json, def.getRelation().toJSON(relationData, optsCopy));\n                    }\n                }\n            });\n        }\n        return json;\n    }\n    /**\n     * Using an adapter, update the record with the primary key specified by the\n     * `id` argument.\n     *\n     * {@link Mapper#beforeUpdate} will be called before updating the record.\n     * {@link Mapper#afterUpdate} will be called after updating the record.\n     *\n     * @name Mapper#update\n     * @method\n     * @param {(string|number)} id The primary key of the record to update.\n     * @param {Object} props The update to apply to the record.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * updated data. If `true` return a response object that includes the updated\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to update in a cascading\n     * update if `props` contains nested updates to relations. NOT performed in a\n     * transaction.\n     * @return {Promise}\n     */\n    update(id, props, opts) {\n        return this.crud('update', id, props, opts);\n    }\n    /**\n     * Using the `query` argument, perform the a single updated to the selected\n     * records. Expects back from the adapter an array of the updated records.\n     *\n     * {@link Mapper#beforeUpdateAll} will be called before making the update.\n     * {@link Mapper#afterUpdateAll} will be called after making the update.\n     *\n     * @name Mapper#updateAll\n     * @method\n     * @param {Object} props Update to apply to selected records.\n     * @param {Object} [query={}] Selection query.\n     * @param {Object} [query.where] Filtering criteria.\n     * @param {number} [query.skip] Number to skip.\n     * @param {number} [query.limit] Number to limit to.\n     * @param {Array} [query.orderBy] Sorting criteria.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * updated data. If `true` return a response object that includes the updated\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to update in a cascading\n     * update if `props` contains nested updates to relations. NOT performed in a\n     * transaction.\n     * @return {Promise}\n     */\n    updateAll(props, query, opts) {\n        return this.crud('updateAll', props, query, opts);\n    }\n    /**\n     * Given an array of updates, perform each of the updates via an adapter. Each\n     * \"update\" is a hash of properties with which to update an record. Each\n     * update must contain the primary key to be updated.\n     *\n     * {@link Mapper#beforeUpdateMany} will be called before making the update.\n     * {@link Mapper#afterUpdateMany} will be called after making the update.\n     *\n     * @name Mapper#updateMany\n     * @method\n     * @param {Array} records Array up record updates.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n     * adapter to use.\n     * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n     * lifecycle events.\n     * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n     * updated data. If `true` return a response object that includes the updated\n     * data and metadata about the operation.\n     * @param {string[]} [opts.with=[]] Relations to update in a cascading\n     * update if each record update contains nested updates for relations. NOT\n     * performed in a transaction.\n     * @return {Promise}\n     */\n    updateMany(records, opts) {\n        return this.crud('updateMany', records, opts);\n    }\n}\n/**\n * Create a Mapper subclass.\n *\n * ```javascript\n * var MyMapper = Mapper.extend({\n *   foo: function () { return 'bar' }\n * })\n * var mapper = new MyMapper()\n * mapper.foo() // \"bar\"\n * ```\n *\n * @name Mapper.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Mapper.\n */\nMapper.extend = utils.extend;\n/**\n * @name Mapper#dbg\n * @method\n */\n/**\n * @name Mapper#log\n * @method\n */\nutils.logify(Mapper.prototype, 'Mapper');\n/**\n * Register a new event listener on this Mapper.\n *\n * @name Mapper#on\n * @method\n */\n/**\n * Remove an event listener from this Mapper.\n *\n * @name Mapper#off\n * @method\n */\n/**\n * Trigger an event on this Mapper.\n *\n * @name Mapper#emit\n * @method\n * @param {string} event Name of event to emit.\n */\n/**\n * A Mapper's registered listeners are stored at {@link Mapper#_listeners}.\n */\nutils.eventify(Mapper.prototype, function () {\n    return this._listeners;\n}, function (value) {\n    this._listeners = value;\n});\nutils.hidePrototypeMethods(Mapper);\n","import utils from './utils';\nimport { belongsToType, hasManyType, hasOneType } from './decorators';\nimport { Mapper } from './Mapper';\nconst toProxy = [\n    /**\n     * Proxy for {@link Mapper#count}.\n     *\n     * @name Container#count\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object} [query] - Passed to {@link Model.count}.\n     * @param {Object} [opts] - Passed to {@link Model.count}.\n     * @return {Promise}\n     */\n    'count',\n    /**\n     * Proxy for {@link Mapper#create}.\n     *\n     * @name Container#create\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {Object} record Passed to {@link Mapper#create}.\n     * @param {Object} [opts] Passed to {@link Mapper#create}. See\n     * {@link Mapper#create} for more configuration options.\n     * @return {Promise}\n     */\n    'create',\n    /**\n     * Proxy for {@link Mapper#createMany}.\n     *\n     * @name Container#createMany\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {Array} records Passed to {@link Mapper#createMany}.\n     * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n     * {@link Mapper#createMany} for more configuration options.\n     * @return {Promise}\n     */\n    'createMany',\n    /**\n     * Proxy for {@link Mapper#createRecord}.\n     *\n     * @name Container#createRecord\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {Object} props Passed to {@link Mapper#createRecord}.\n     * @param {Object} [opts] Passed to {@link Mapper#createRecord}. See\n     * {@link Mapper#createRecord} for configuration options.\n     * @return {Promise}\n     */\n    'createRecord',\n    /**\n     * Proxy for {@link Mapper#dbg}.\n     *\n     * @name Container#dbg\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#dbg}.\n     */\n    'dbg',\n    /**\n     * Proxy for {@link Mapper#destroy}.\n     *\n     * @name Container#destroy\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n     * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n     * {@link Mapper#destroy} for more configuration options.\n     * @return {Promise}\n     */\n    'destroy',\n    /**\n     * Proxy for {@link Mapper#destroyAll}.\n     *\n     * @name Container#destroyAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n     * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n     * {@link Mapper#destroyAll} for more configuration options.\n     * @return {Promise}\n     */\n    'destroyAll',\n    /**\n     * Proxy for {@link Mapper#find}.\n     *\n     * @name Container#emit\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#emit}.\n     */\n    'emit',\n    /**\n     * Proxy for {@link Mapper#find}.\n     *\n     * @name Container#find\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#find}.\n     * @param {Object} [opts] - Passed to {@link Mapper#find}.\n     * @return {Promise}\n     */\n    'find',\n    /**\n     * Proxy for {@link Mapper#createRecord}.\n     *\n     * @name Container#findAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object} [query] - Passed to {@link Model.findAll}.\n     * @param {Object} [opts] - Passed to {@link Model.findAll}.\n     * @return {Promise}\n     */\n    'findAll',\n    /**\n     * Proxy for {@link Mapper#is}.\n     *\n     * @name Container#getSchema\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     */\n    'getSchema',\n    /**\n     * Proxy for {@link Mapper#is}.\n     *\n     * @name Container#is\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#is}.\n     */\n    'is',\n    /**\n     * Proxy for {@link Mapper#log}.\n     *\n     * @name Container#log\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#log}.\n     */\n    'log',\n    /**\n     * Proxy for {@link Mapper#off}.\n     *\n     * @name Container#off\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#off}.\n     */\n    'off',\n    /**\n     * Proxy for {@link Mapper#on}.\n     *\n     * @name Container#on\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#on}.\n     */\n    'on',\n    /**\n     * Proxy for {@link Mapper#sum}.\n     *\n     * @name Container#sum\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {string} field - Passed to {@link Model.sum}.\n     * @param {Object} [query] - Passed to {@link Model.sum}.\n     * @param {Object} [opts] - Passed to {@link Model.sum}.\n     * @return {Promise}\n     */\n    'sum',\n    /**\n     * Proxy for {@link Mapper#toJSON}.\n     *\n     * @name Container#toJSON\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {...*} args - Passed to {@link Mapper#toJSON}.\n     */\n    'toJSON',\n    /**\n     * Proxy for {@link Mapper#update}.\n     *\n     * @name Container#update\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#update}.\n     * @param {Object} record - Passed to {@link Mapper#update}.\n     * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n     * {@link Mapper#update} for more configuration options.\n     * @return {Promise}\n     */\n    'update',\n    /**\n     * Proxy for {@link Mapper#updateAll}.\n     *\n     * @name Container#updateAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object?} query - Passed to {@link Model.updateAll}.\n     * @param {Object} props - Passed to {@link Model.updateAll}.\n     * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n     * {@link Model.updateAll} for more configuration options.\n     * @return {Promise}\n     */\n    'updateAll',\n    /**\n     * Proxy for {@link Mapper#updateMany}.\n     *\n     * @name Container#updateMany\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n     * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n     * {@link Mapper#updateMany} for more configuration options.\n     * @return {Promise}\n     */\n    'updateMany'\n];\n/**\n * ```javascript\n * import {Container} from 'js-data'\n * ```\n *\n * The `Container` class is a place to store {@link Mapper} instances.\n *\n * Without a container, you need to manage mappers yourself, including resolving\n * circular dependencies among relations. All mappers in a container share the\n * same adapters, so you don't have to add each adapter to all of your mappers.\n *\n * @example <caption>Without Container</caption>\n * import {Mapper} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const adapter = new HttpAdapter()\n * const userMapper = new Mapper({ name: 'user' })\n * userMapper.registerAdapter('http', adapter, { default: true })\n * const commentMapper = new Mapper({ name: 'comment' })\n * commentMapper.registerAdapter('http', adapter, { default: true })\n *\n * // This might be more difficult if the mappers were defined in different\n * // modules.\n * userMapper.hasMany(commentMapper, {\n *   localField: 'comments',\n *   foreignKey: 'userId'\n * })\n * commentMapper.belongsTo(userMapper, {\n *   localField: 'user',\n *   foreignKey: 'userId'\n * })\n *\n * @example <caption>With Container</caption>\n * import {Container} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const container = new Container()\n * // All mappers in container share adapters\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\n *\n * // These could be defined in separate modules without a problem.\n * container.defineMapper('user', {\n *   relations: {\n *     hasMany: {\n *       comment: {\n *         localField: 'comments',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n * container.defineMapper('comment', {\n *   relations: {\n *     belongsTo: {\n *       user: {\n *         localField: 'user',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n *\n * @class Container\n * @param {Object} [opts] Configuration options.\n * @param {Function} [opts.mapperClass] Constructor function to use in\n * {@link Container#defineMapper} to create a new mapper.\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\n * {@link Container#mapperClass} when creating a new mapper.\n * @return {Container}\n */\nexport class Container {\n    constructor(opts) {\n        const self = this;\n        utils.classCallCheck(self, Container);\n        opts || (opts = {});\n        // Apply options provided by the user\n        utils.fillIn(self, opts);\n        /**\n         * Defaults options to pass to {@link Container#mapperClass} when creating a\n         * new mapper.\n         *\n         * @name Container#mapperDefaults\n         * @type {Object}\n         */\n        self.mapperDefaults = self.mapperDefaults || {};\n        /**\n         * Constructor function to use in {@link Container#defineMapper} to create a\n         * new mapper.\n         *\n         * @name Container#mapperClass\n         * @type {Function}\n         */\n        self.mapperClass = self.mapperClass || Mapper;\n        // Initilize private data\n        // Holds the adapters, shared by all mappers in this container\n        self._adapters = {};\n        // The the mappers in this container\n        self._mappers = {};\n    }\n    /**\n     * Create a new mapper and register it in this container.\n     *\n     * @example\n     * import {Container} from 'js-data'\n     * const container = new Container({\n     *   mapperDefaults: { foo: 'bar' }\n     * })\n     * const userMapper = container.defineMapper('user')\n     * userMapper.foo // \"bar\"\n     *\n     * @name Container#defineMapper\n     * @method\n     * @param {string} name Name under which to register the new {@link Mapper}.\n     * {@link Mapper#name} will be set to this value.\n     * @param {Object} [opts] Configuration options. Passed to\n     * {@link Container#mapperClass} when creating the new {@link Mapper}.\n     * @return {Mapper}\n     */\n    defineMapper(name, opts) {\n        const self = this;\n        // For backwards compatibility with defineResource\n        if (utils.isObject(name)) {\n            opts = name;\n            if (!opts.name) {\n                throw new Error('name is required!');\n            }\n            name = opts.name;\n        }\n        else if (!utils.isString(name)) {\n            throw new Error('name is required!');\n        }\n        // Default values for arguments\n        opts || (opts = {});\n        // Set Mapper#name\n        opts.name = name;\n        opts.relations || (opts.relations = {});\n        // Check if the user is overriding the datastore's default mapperClass\n        const mapperClass = opts.mapperClass || self.mapperClass;\n        delete opts.mapperClass;\n        // Apply the datastore's defaults to the options going into the mapper\n        utils.fillIn(opts, self.mapperDefaults);\n        // Instantiate a mapper\n        const mapper = self._mappers[name] = new mapperClass(opts);\n        // Make sure the mapper's name is set\n        mapper.name = name;\n        // All mappers in this datastore will share adapters\n        mapper._adapters = self.getAdapters();\n        // Setup the mapper's relations, including generating Mapper#relationList\n        // and Mapper#relationFields\n        utils.forOwn(mapper.relations, function (group, type) {\n            utils.forOwn(group, function (relations, _name) {\n                if (utils.isObject(relations)) {\n                    relations = [relations];\n                }\n                relations.forEach(function (def) {\n                    def.getRelation = function () {\n                        return self.getMapper(_name);\n                    };\n                    const relatedMapper = self._mappers[_name] || _name;\n                    if (type === belongsToType) {\n                        mapper.belongsTo(relatedMapper, def);\n                    }\n                    else if (type === hasOneType) {\n                        mapper.hasOne(relatedMapper, def);\n                    }\n                    else if (type === hasManyType) {\n                        mapper.hasMany(relatedMapper, def);\n                    }\n                });\n            });\n        });\n        return mapper;\n    }\n    defineResource(name, opts) {\n        return this.defineMapper(name, opts);\n    }\n    /**\n     * Return the registered adapter with the given name or the default adapter if\n     * no name is provided.\n     *\n     * @name Container#getAdapter\n     * @method\n     * @param {string} [name] The name of the adapter to retrieve.\n     * @return {Adapter} The adapter.\n     */\n    getAdapter(name) {\n        const self = this;\n        const adapter = self.getAdapterName(name);\n        if (!adapter) {\n            throw new ReferenceError(`${adapter} not found!`);\n        }\n        return self.getAdapters()[adapter];\n    }\n    /**\n     * Return the name of a registered adapter based on the given name or options,\n     * or the name of the default adapter if no name provided.\n     *\n     * @name Container#getAdapterName\n     * @method\n     * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n     * @return {string} The name of the adapter.\n     */\n    getAdapterName(opts) {\n        opts || (opts = {});\n        if (utils.isString(opts)) {\n            opts = { adapter: opts };\n        }\n        return opts.adapter || this.mapperDefaults.defaultAdapter;\n    }\n    /**\n     * Return the registered adapters of this container.\n     *\n     * @name Container#getAdapters\n     * @method\n     * @return {Adapter}\n     */\n    getAdapters() {\n        return this._adapters;\n    }\n    /**\n     * Return the mapper registered under the specified name.\n     *\n     * @example\n     * import {Container} from 'js-data'\n     * const container = new Container()\n     * const userMapper = container.defineMapper('user')\n     * userMapper === container.getMapper('user') // true\n     *\n     * @name Container#getMapper\n     * @method\n     * @param {string} name {@link Mapper#name}.\n     * @return {Mapper}\n     */\n    getMapper(name) {\n        const mapper = this._mappers[name];\n        if (!mapper) {\n            throw new ReferenceError(`${name} is not a registered mapper!`);\n        }\n        return mapper;\n    }\n    /**\n     * Register an adapter on this container under the given name. Adapters\n     * registered on a container are shared by all mappers in the container.\n     *\n     * @example\n     * import {Container} from 'js-data'\n     * import HttpAdapter from 'js-data-http'\n     * const container = new Container()\n     * container.registerAdapter('http', new HttpAdapter, { default: true })\n     *\n     * @name Container#registerAdapter\n     * @method\n     * @param {string} name The name of the adapter to register.\n     * @param {Adapter} adapter The adapter to register.\n     * @param {Object} [opts] Configuration options.\n     * @param {boolean} [opts.default=false] Whether to make the adapter the\n     * default adapter for all Mappers in this container.\n     */\n    registerAdapter(name, adapter, opts) {\n        const self = this;\n        opts || (opts = {});\n        self.getAdapters()[name] = adapter;\n        // Optionally make it the default adapter for the target.\n        if (opts === true || opts.default) {\n            self.mapperDefaults.defaultAdapter = name;\n            utils.forOwn(self._mappers, function (mapper) {\n                mapper.defaultAdapter = name;\n            });\n        }\n    }\n}\n/**\n * Create a Container subclass.\n *\n * @example\n * var MyContainer = Container.extend({\n *   foo: function () { return 'bar' }\n * })\n * var container = new MyContainer()\n * container.foo() // \"bar\"\n *\n * @name Container.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Container.\n */\nContainer.extend = utils.extend;\nconst toAdd = {};\ntoProxy.forEach(function (method) {\n    toAdd[method] = function (name, ...args) {\n        return this.getMapper(name)[method](...args);\n    };\n});\nutils.addHiddenPropsToTarget(Container.prototype, toAdd);\nutils.hidePrototypeMethods(Container);\n","import utils from './utils';\nimport { hasManyType } from './decorators';\nimport { Collection } from './Collection';\n/**\n * TODO\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {Object} [opts] Configuration options. See {@link Collection}.\n * @return {Mapper}\n */\n/* tslint:disable:variable-name */\nexport const LinkedCollection = Collection.extend({\n    /* tslint:enable:variable-name */\n    constructor(records, opts) {\n        const self = this;\n        utils.classCallCheck(self, LinkedCollection);\n        utils.getSuper(self).call(self, records, opts);\n        // Make sure this collection has somewhere to store \"added\" timestamps\n        self._added = {};\n        // Make sure this collection a reference to a datastore\n        if (!self.datastore) {\n            throw new Error('This collection must have a datastore!');\n        }\n        return self;\n    },\n    _onRecordEvent(...args) {\n        const self = this;\n        utils.getSuper(self).prototype._onRecordEvent.apply(self, args);\n        const event = args[0];\n        // This is a very brute force method\n        // Lots of room for optimization\n        if (utils.isString(event) && event.indexOf('change') === 0) {\n            self.updateIndexes(args[1]);\n        }\n    },\n    add(records, opts) {\n        const self = this;\n        const datastore = self.datastore;\n        const mapper = self.mapper;\n        const relationList = mapper.relationList || [];\n        const timestamp = new Date().getTime();\n        const usesRecordClass = !!mapper.recordClass;\n        let singular;\n        if (utils.isObject(records) && !utils.isArray(records)) {\n            singular = true;\n            records = [records];\n        }\n        if (relationList.length && records.length) {\n            // Check the currently visited record for relations that need to be\n            // inserted into their respective collections.\n            mapper.relationList.forEach(function (def) {\n                const relationName = def.relation;\n                // A reference to the Mapper that this Mapper is related to\n                const relatedMapper = datastore.getMapper(relationName);\n                // The field used by the related Mapper as the primary key\n                const relationIdAttribute = relatedMapper.idAttribute;\n                // Grab the foreign key in this relationship, if there is one\n                const foreignKey = def.foreignKey;\n                // A lot of this is an optimization for being able to insert a lot of\n                // data as quickly as possible\n                const relatedCollection = datastore.getCollection(relationName);\n                const type = def.type;\n                const isHasMany = type === hasManyType;\n                const shouldAdd = utils.isUndefined(def.add) ? true : !!def.add;\n                let relatedData;\n                records.forEach(function (record) {\n                    // Grab a reference to the related data attached or linked to the\n                    // currently visited record\n                    relatedData = def.getLocalField(record);\n                    if (utils.isFunction(def.add)) {\n                        def.add(datastore, def, record);\n                    }\n                    else if (relatedData) {\n                        // Otherwise, if there is something to be added, add it\n                        if (isHasMany) {\n                            // Handle inserting hasMany relations\n                            relatedData = relatedData.map(function (toInsertItem) {\n                                // Check that this item isn't the same item that is already in the\n                                // store\n                                if (toInsertItem !== relatedCollection.get(relatedCollection.recordId(toInsertItem))) {\n                                    // Make sure this item has its foreignKey\n                                    if (foreignKey) {\n                                        // TODO: slow, could be optimized? But user loses hook\n                                        def.setForeignKey(record, toInsertItem);\n                                    }\n                                    // Finally add this related item\n                                    if (shouldAdd) {\n                                        toInsertItem = relatedCollection.add(toInsertItem);\n                                    }\n                                }\n                                return toInsertItem;\n                            });\n                            // If it's the parent that has the localKeys\n                            if (def.localKeys) {\n                                utils.set(record, def.localKeys, relatedData.map(function (inserted) {\n                                    return utils.get(inserted, relationIdAttribute);\n                                }));\n                            }\n                        }\n                        else {\n                            const relatedDataId = utils.get(relatedData, relationIdAttribute);\n                            // Handle inserting belongsTo and hasOne relations\n                            if (relatedData !== relatedCollection.get(relatedDataId)) {\n                                // Make sure foreignKey field is set\n                                def.setForeignKey(record, relatedData);\n                                // Finally insert this related item\n                                if (shouldAdd) {\n                                    relatedData = relatedCollection.add(relatedData);\n                                }\n                            }\n                        }\n                        def.setLocalField(record, relatedData);\n                    }\n                });\n            });\n        }\n        records = utils.getSuper(self).prototype.add.call(self, records, opts);\n        records.forEach(function (record) {\n            // Track when this record was added\n            self._added[self.recordId(record)] = timestamp;\n            if (usesRecordClass) {\n                record._set('$', timestamp);\n            }\n        });\n        return singular ? records[0] : records;\n    },\n    remove(id, opts) {\n        const self = this;\n        delete self._added[id];\n        const record = utils.getSuper(self).prototype.remove.call(self, id, opts);\n        if (record) {\n            const mapper = self.mapper;\n            if (mapper.recordClass) {\n                record._set('$'); // unset\n            }\n        }\n        return record;\n    },\n    removeAll(query, opts) {\n        const self = this;\n        const records = utils.getSuper(self).prototype.removeAll.call(self, query, opts);\n        records.forEach(function (record) {\n            delete self._added[self.recordId(record)];\n        });\n        return records;\n    }\n});\n/**\n * Create a LinkedCollection subclass.\n *\n * ```javascript\n * var MyLinkedCollection = LinkedCollection.extend({\n *   foo: function () { return 'bar' }\n * })\n * var collection = new MyLinkedCollection()\n * collection.foo() // \"bar\"\n * ```\n *\n * @name LinkedCollection.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of LinkedCollection.\n */\nutils.hidePrototypeMethods(LinkedCollection);\n","import utils from './utils';\nimport { belongsToType, hasManyType, hasOneType } from './decorators';\nimport { Container } from './Container';\nimport { LinkedCollection } from './LinkedCollection';\nconst DATASTORE_DEFAULTS = {\n    /**\n     * Whether relations should be linked for records that are in the datastore.\n     *\n     * Defaults to `true` in the browser and `false` in Node.js\n     *\n     * @name DataStore#linkRelations\n     * @type {boolean}\n     */\n    linkRelations: utils.isBrowser\n};\n/**\n * The `DataStore` class is an extension of {@link Container}. Not only does\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import {DataStore} from 'js-data'\n * ```\n *\n * @example\n * import {DataStore} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const store = new DataStore()\n * const UserMapper = store.defineMapper('user')\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then(function (user) {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" for the \"user\" mapper (Stateful DataStore)\n *   return store.find('user', 1)\n * }).then(function (user) {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1)\n *   user === cachedUser // true\n * })\n *\n * @class DataStore\n * @extends Container\n * @param {Object} [opts] Configuration options. See {@link Container}.\n * @return {DataStore}\n */\n/* tslint:disable:variable-name */\nexport class DataStore extends Container {\n    constructor(opts) {\n        super(opts);\n        const self = this;\n        utils.classCallCheck(self, DataStore);\n        utils.getSuper(self).call(self, opts);\n        self.collectionClass = self.collectionClass || LinkedCollection;\n        self._collections = {};\n        utils.fillIn(self, DATASTORE_DEFAULTS);\n        self._pendingQueries = {};\n        self._completedQueries = {};\n        return self;\n    }\n    _callSuper(method, ...args) {\n        return super[method].apply(this, args);\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#_end\n     * @method\n     * @private\n     * @param {string} name Name of the {@link LinkedCollection} to which to\n     * add the data.\n     * @param {Object} data TODO.\n     * @param {Object} [opts] Configuration options.\n     * @return {(Object|Array)} Result.\n     */\n    _end(name, data, opts) {\n        if (opts.raw) {\n            data.data = this.getCollection(name).add(data.data, opts);\n            return data;\n        }\n        else {\n            data = this.getCollection(name).add(data, opts);\n        }\n        return data;\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#create\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {Object} record Passed to {@link Mapper#create}.\n     * @param {Object} [opts] Passed to {@link Mapper#create}. See\n     * {@link Mapper#create} for more configuration options.\n     * @return {Promise}\n     */\n    create(name, record, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('create', name, record, opts).then(function (data) {\n            return self._end(name, data, opts);\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#createMany\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {Array} records Passed to {@link Mapper#createMany}.\n     * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n     * {@link Mapper#createMany} for more configuration options.\n     * @return {Promise}\n     */\n    createMany(name, records, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('createMany', name, records, opts).then(function (data) {\n            return self._end(name, data, opts);\n        });\n    }\n    defineMapper(name, opts) {\n        const self = this;\n        const mapper = utils.getSuper(self).prototype.defineMapper.call(self, name, opts);\n        self._pendingQueries[name] = {};\n        self._completedQueries[name] = {};\n        mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] });\n        // The datastore uses a subclass of Collection that is \"datastore-aware\"\n        const collection = self._collections[name] = new self.collectionClass(null, {\n            // Make sure the collection has somewhere to store \"added\" timestamps\n            _added: {},\n            // Give the collection a reference to this datastore\n            datastore: self,\n            // The mapper tied to the collection\n            mapper\n        });\n        const schema = mapper.schema || {};\n        const properties = schema.properties || {};\n        // TODO: Make it possible index nested properties?\n        utils.forOwn(properties, function (opts, prop) {\n            if (opts.indexed) {\n                collection.createIndex(prop);\n            }\n        });\n        // Create a secondary index on the \"added\" timestamps of records in the\n        // collection\n        collection.createIndex('addedTimestamps', ['$'], {\n            fieldGetter(obj) {\n                return collection._added[collection.recordId(obj)];\n            }\n        });\n        const linkRelations = self.linkRelations;\n        if (linkRelations) {\n            mapper.relationList.forEach(function (def) {\n                const relation = def.relation;\n                const localField = def.localField;\n                const path = `links.${localField}`;\n                const foreignKey = def.foreignKey;\n                const type = def.type;\n                const link = utils.isUndefined(def.link) ? linkRelations : def.link;\n                const updateOpts = { index: foreignKey };\n                let descriptor;\n                if (type === belongsToType) {\n                    if (!collection.indexes[foreignKey]) {\n                        collection.createIndex(foreignKey);\n                    }\n                    descriptor = {\n                        get() {\n                            const _self = this;\n                            if (!_self._get('$') || !link) {\n                                return _self._get(path);\n                            }\n                            const key = def.getForeignKey(_self);\n                            const item = utils.isUndefined(key) ? undefined : self.getCollection(relation).get(key);\n                            _self._set(path, item);\n                            return item;\n                        },\n                        set(record) {\n                            const _self = this;\n                            _self._set(path, record);\n                            def.setForeignKey(_self, record);\n                            collection.updateIndex(_self, updateOpts);\n                            return def.getLocalField(_self);\n                        }\n                    };\n                }\n                else if (type === hasManyType) {\n                    const localKeys = def.localKeys;\n                    const foreignKeys = def.foreignKeys;\n                    // TODO: Handle case when belongsTo relation isn't ever defined\n                    if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n                        self.getCollection(relation).createIndex(foreignKey);\n                    }\n                    descriptor = {\n                        get() {\n                            const _self = this;\n                            if (!_self._get('$') || !link) {\n                                return _self._get(path);\n                            }\n                            const key = def.getForeignKey(_self);\n                            let items;\n                            const relationCollection = self.getCollection(relation);\n                            if (foreignKey) {\n                                // Really fast retrieval\n                                items = relationCollection.getAll(key, {\n                                    index: foreignKey\n                                });\n                            }\n                            else if (localKeys) {\n                                const keys = utils.get(_self, localKeys) || [];\n                                const args = utils.isArray(keys) ? keys : Object.keys(keys);\n                                // Really fast retrieval\n                                items = relationCollection.getAll.apply(relationCollection, args);\n                            }\n                            else if (foreignKeys) {\n                                const query = {};\n                                utils.set(query, `where.${foreignKeys}.contains`, key);\n                                // Make a much slower retrieval\n                                items = relationCollection.filter(query);\n                            }\n                            _self._set(path, items);\n                            return items;\n                        },\n                        set(records) {\n                            const _self = this;\n                            const key = collection.recordId(_self);\n                            const relationCollection = self.getCollection(relation);\n                            _self._set(path, records);\n                            if (foreignKey) {\n                                def.setForeignKey(_self, records);\n                                if (utils.isArray(records)) {\n                                    records.forEach(function (record) {\n                                        relationCollection.updateIndex(record, updateOpts);\n                                    });\n                                }\n                            }\n                            if (localKeys) {\n                                utils.set(_self, localKeys, records.map(function (record) {\n                                    return relationCollection.recordId(record);\n                                }));\n                            }\n                            else if (foreignKeys) {\n                                records.forEach(function (record) {\n                                    const keys = utils.get(record, foreignKeys);\n                                    if (keys) {\n                                        if (keys.indexOf(key) === -1) {\n                                            keys.push(key);\n                                        }\n                                    }\n                                    else {\n                                        utils.set(record, foreignKeys, [key]);\n                                    }\n                                });\n                            }\n                            return def.getLocalField(_self);\n                        }\n                    };\n                }\n                else if (type === hasOneType) {\n                    descriptor = {\n                        get() {\n                            const _self = this;\n                            if (!_self._get('$') || !link) {\n                                return _self._get(path);\n                            }\n                            const key = def.getForeignKey(_self);\n                            const items = self.getCollection(relation).getAll(key, {\n                                index: foreignKey\n                            });\n                            const item = items.length ? items[0] : undefined;\n                            _self._set(path, item);\n                            return item;\n                        },\n                        set(record) {\n                            const _self = this;\n                            _self._set(path, record);\n                            def.setForeignKey(_self, record);\n                            self.getCollection(relation).updateIndex(record, updateOpts);\n                            return def.getLocalField(_self);\n                        }\n                    };\n                }\n                if (descriptor) {\n                    descriptor.enumerable = utils.isUndefined(def.enumerable) ? true : def.enumerable;\n                    if (def.get) {\n                        let origGet = descriptor.get;\n                        descriptor.get = function () {\n                            return def.get(def, this, (...args) => origGet.apply(this, args));\n                        };\n                    }\n                    if (def.set) {\n                        let origSet = descriptor.set;\n                        descriptor.set = function (related) {\n                            return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value));\n                        };\n                    }\n                    Object.defineProperty(mapper.recordClass.prototype, localField, descriptor);\n                }\n            });\n        }\n        return mapper;\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#destroy\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n     * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n     * {@link Mapper#destroy} for more configuration options.\n     * @return {Promise}\n     */\n    destroy(name, id, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('destroy', name, id, opts).then(function (data) {\n            if (opts.raw) {\n                data.data = self.getCollection(name).remove(id, opts);\n            }\n            else {\n                data = self.getCollection(name).remove(id, opts);\n            }\n            delete self._pendingQueries[name][id];\n            delete self._completedQueries[name][id];\n            return data;\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#destroyAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n     * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n     * {@link Mapper#destroyAll} for more configuration options.\n     * @return {Promise}\n     */\n    destroyAll(name, query, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('destroyAll', name, query, opts).then(function (data) {\n            if (opts.raw) {\n                data.data = self.getCollection(name).removeAll(query, opts);\n            }\n            else {\n                data = self.getCollection(name).removeAll(query, opts);\n            }\n            const hash = self.hashQuery(name, query, opts);\n            delete self._pendingQueries[name][hash];\n            delete self._completedQueries[name][hash];\n            return data;\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#find\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#find}.\n     * @param {Object} [opts] - Passed to {@link Mapper#find}.\n     * @return {Promise}\n     */\n    find(name, id, opts) {\n        const self = this;\n        opts || (opts = {});\n        const pendingQuery = self._pendingQueries[name][id];\n        utils.fillIn(opts, self.getMapper(name));\n        if (pendingQuery) {\n            return pendingQuery;\n        }\n        const item = self.cachedFind(name, id, opts);\n        let promise;\n        if (opts.force || !item) {\n            promise = self._pendingQueries[name][id] = self._callSuper('find', name, id, opts).then(function (data) {\n                delete self._pendingQueries[name][id];\n                return self._end(name, data, opts);\n            }, function (err) {\n                delete self._pendingQueries[name][id];\n                return utils.reject(err);\n            }).then(function (data) {\n                self._completedQueries[name][id] = new Date().getTime();\n                return data;\n            });\n        }\n        else {\n            promise = utils.resolve(item);\n        }\n        return promise;\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#findAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object} [query] - Passed to {@link Model.findAll}.\n     * @param {Object} [opts] - Passed to {@link Model.findAll}.\n     * @return {Promise}\n     */\n    findAll(name, query, opts) {\n        const self = this;\n        opts || (opts = {});\n        const hash = self.hashQuery(name, query, opts);\n        const pendingQuery = self._pendingQueries[name][hash];\n        utils.fillIn(opts, self.getMapper(name));\n        if (pendingQuery) {\n            return pendingQuery;\n        }\n        const items = self.cachedFindAll(name, query, opts);\n        let promise;\n        if (opts.force || !items) {\n            promise = self._pendingQueries[name][hash] = self._callSuper('findAll', name, query, opts).then(function (data) {\n                delete self._pendingQueries[name][hash];\n                return self._end(name, data, opts);\n            }, function (err) {\n                delete self._pendingQueries[name][hash];\n                return utils.reject(err);\n            }).then(function (data) {\n                self._completedQueries[name][hash] = new Date().getTime();\n                return data;\n            });\n        }\n        else {\n            promise = utils.resolve(items);\n        }\n        return promise;\n    }\n    cachedFind(name, id, opts) {\n        return this.get(name, id, opts);\n    }\n    cachedFindAll(name, query, opts) {\n        const self = this;\n        if (self._completedQueries[name][self.hashQuery(name, query, opts)]) {\n            return self.filter(name, query, opts);\n        }\n    }\n    hashQuery(name, query, opts) {\n        return utils.toJson(query);\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#getCollection\n     * @method\n     * @param {string} name Name of the {@link LinkedCollection} to retrieve.\n     * @return {LinkedCollection}\n     */\n    getCollection(name) {\n        const collection = this._collections[name];\n        if (!collection) {\n            throw new ReferenceError(`${name} is not a registered collection!`);\n        }\n        return collection;\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#update\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {(string|number)} id - Passed to {@link Mapper#update}.\n     * @param {Object} record - Passed to {@link Mapper#update}.\n     * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n     * {@link Mapper#update} for more configuration options.\n     * @return {Promise}\n     */\n    update(name, id, record, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('update', name, id, record, opts).then(function (data) {\n            return self._end(name, data, opts);\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#updateAll\n     * @method\n     * @param {string} name - Name of the {@link Mapper} to target.\n     * @param {Object?} query - Passed to {@link Model.updateAll}.\n     * @param {Object} props - Passed to {@link Model.updateAll}.\n     * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n     * {@link Model.updateAll} for more configuration options.\n     * @return {Promise}\n     */\n    updateAll(name, query, props, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('updateAll', name, query, props, opts).then(function (data) {\n            return self._end(name, data, opts);\n        });\n    }\n    /**\n     * TODO\n     *\n     * @name DataStore#updateMany\n     * @method\n     * @param {string} name Name of the {@link Mapper} to target.\n     * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n     * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n     * {@link Mapper#updateMany} for more configuration options.\n     * @return {Promise}\n     */\n    updateMany(name, records, opts) {\n        const self = this;\n        opts || (opts = {});\n        return self._callSuper('updateMany', name, records, opts).then(function (data) {\n            return self._end(name, data, opts);\n        });\n    }\n}\n/**\n * Create a DataStore subclass.\n *\n * ```javascript\n * var MyDataStore = DataStore.extend({\n *   foo: function () { return 'bar' }\n * })\n * var store = new MyDataStore()\n * store.foo() // \"bar\"\n * ```\n *\n * @name DataStore.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of DataStore.\n */\nconst toProxy = [\n    'add',\n    'between',\n    'createIndex',\n    'filter',\n    'get',\n    'getAll',\n    'query',\n    'remove',\n    'removeAll',\n    'toJson'\n];\nconst methods = {};\ntoProxy.forEach(function (method) {\n    methods[method] = function (name, ...args) {\n        return this.getCollection(name)[method](...args);\n    };\n});\nmethods.inject = function (...args) {\n    return this.add(...args);\n};\nmethods.eject = function (...args) {\n    return this.remove(...args);\n};\nmethods.ejectAll = function (...args) {\n    return this.removeAll(...args);\n};\nutils.logify(DataStore.prototype, 'DataStore');\nutils.addHiddenPropsToTarget(DataStore.prototype, methods);\nutils.hidePrototypeMethods(DataStore);\n","/**\n * Registered as `js-data` in NPM and Bower.\n * #### Script tag\n * ```js\n * window.JSData\n * ```\n * #### CommonJS\n * ```js\n * var JSData = require('js-data')\n * ```\n * #### ES6 Modules\n * ```js\n * import JSData from 'js-data'\n * ```\n * #### AMD\n * ```js\n * define('myApp', ['js-data'], function (JSData) { ... })\n * ```\n *\n * @module js-data\n */\n/**\n * Details of the current version of the `js-data` module.\n *\n * @name version\n * @memberof module:js-data\n * @type {Object}\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n */\nexport const version = {\n    alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\n    beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false,\n    full: '<%= pkg.version %>',\n    major: parseInt('<%= major %>', 10),\n    minor: parseInt('<%= minor %>', 10),\n    patch: parseInt('<%= patch %>', 10)\n};\nimport utils from './utils';\nexport { utils };\nexport * from './decorators';\n/**\n * {@link Collection} class.\n * @name module:js-data.Collection\n */\nexport * from './Collection';\n/**\n * {@link Container} class.\n * @name module:js-data.Container\n */\nexport * from './Container';\n/**\n * {@link DataStore} class.\n * @name module:js-data.DataStore\n */\nexport * from './DataStore';\n/**\n * {@link LinkedCollection} class.\n * @name module:js-data.LinkedCollection\n */\nexport * from './LinkedCollection';\n/**\n * {@link Mapper} class.\n * @name module:js-data.Mapper\n */\nexport * from './Mapper';\n/**\n * {@link Query} class.\n * @name module:js-data.Query\n */\nexport * from './Query';\n/**\n * {@link Record} class.\n * @name module:js-data.Record\n */\nexport * from './Record';\n/**\n * {@link Schema} class.\n * @name module:js-data.Schema\n */\nexport * from './Schema';\n"],"names":["utils","belongsTo","hasMany","hasOne","toProxy"],"mappings":"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"}