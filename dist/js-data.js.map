{"version":3,"file":"js-data.js","sources":["../src/utils.js","../src/Query.js","../lib/mindex/utils.js","../lib/mindex/index.js","../src/Collection.js","../src/decorators.js","../src/Record.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\r\n * @name utils\r\n * @memberof module:js-data\r\n * @type {Object}\r\n * @property {Function} addHiddenPropsToTarget TODO\r\n * @property {Function} classCallCheck TODO\r\n * @property {Function} copy TODO\r\n * @property {Function} deepMixIn TODO\r\n * @property {Function} eventify TODO\r\n * @property {Function} extend TODO\r\n * @property {Function} fillIn TODO\r\n * @property {Function} fromJson TODO\r\n * @property {Function} get TODO\r\n * @property {Function} getSuper TODO\r\n * @property {Function} intersection TODO\r\n * @property {Function} isArray TODO\r\n * @property {Function} isBlacklisted TODO\r\n * @property {boolean} isBrowser TODO\r\n * @property {Function} isBoolean TODO\r\n * @property {Function} isFunction TODO\r\n * @property {Function} isInteger TODO\r\n * @property {Function} isNull TODO\r\n * @property {Function} isNumber TODO\r\n * @property {Function} isObject TODO\r\n * @property {Function} isRegExp TODO\r\n * @property {Function} isSorN TODO\r\n * @property {Function} isString TODO\r\n * @property {Function} isUndefined TODO\r\n * @property {Function} possibleConstructorReturn TODO\r\n * @property {Function} reject TODO\r\n * @property {Function} resolve TODO\r\n * @property {Function} set TODO\r\n * @property {Function} toJson TODO\r\n * @property {Function} uuid TODO\r\n */\r\n\r\nconst INFINITY = 1 / 0\r\nconst MAX_INTEGER = 1.7976931348623157e+308\r\nconst BOOL_TAG = '[object Boolean]'\r\nconst DATE_TAG = '[object Date]'\r\nconst FUNC_TAG = '[object Function]'\r\nconst NUMBER_TAG = '[object Number]'\r\nconst OBJECT_TAG = '[object Object]'\r\nconst REGEXP_TAG = '[object RegExp]'\r\nconst STRING_TAG = '[object String]'\r\nconst objToString = Object.prototype.toString\r\nlet isBrowser\r\n\r\n// Attempt to detect whether we are in the browser.\r\ntry {\r\n  isBrowser = !!window\r\n} catch (e) {\r\n  isBrowser = false\r\n}\r\n\r\nexport {isBrowser}\r\n\r\nconst toString = function (value) {\r\n  return objToString.call(value)\r\n}\r\nconst toInteger = function (value) {\r\n  if (!value) {\r\n    return value === 0 ? value : 0\r\n  }\r\n  value = +value\r\n  if (value === INFINITY || value === -INFINITY) {\r\n    const sign = (value < 0 ? -1 : 1)\r\n    return sign * MAX_INTEGER\r\n  }\r\n  const remainder = value % 1\r\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\r\n}\r\nconst isPlainObject = function (value) {\r\n  return (!!value && typeof value === 'object' && value.constructor === Object)\r\n}\r\nexport const isArray = Array.isArray\r\nexport const isDate = function (value) {\r\n  return (value && typeof value === 'object' && toString(value) === DATE_TAG)\r\n}\r\nexport const isFunction = function (value) {\r\n  return typeof value === 'function' || (value && toString(value) === FUNC_TAG)\r\n}\r\nexport const isInteger = function (value) {\r\n  return toString(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\r\n}\r\nexport const isNull = function (value) {\r\n  return value === null\r\n}\r\nexport const isNumber = function (value) {\r\n  const type = typeof value\r\n  return type === 'number' || (value && type === 'object' && toString(value) === NUMBER_TAG)\r\n}\r\nexport const isObject = function (value) {\r\n  return toString(value) === OBJECT_TAG\r\n}\r\nexport const isRegExp = function (value) {\r\n  return toString(value) === REGEXP_TAG\r\n}\r\nexport const isSorN = function (value) {\r\n  return isString(value) || isNumber(value)\r\n}\r\nexport const isString = function (value) {\r\n  return typeof value === 'string' || (value && typeof value === 'object' && toString(value) === STRING_TAG)\r\n}\r\nexport const isUndefined = function (value) {\r\n  return value === undefined\r\n}\r\nexport const isBoolean = function (value) {\r\n  return toString(value) === BOOL_TAG\r\n}\r\nexport const get = function (object, prop) {\r\n  if (!prop) {\r\n    return\r\n  }\r\n  const parts = prop.split('.')\r\n  const last = parts.pop()\r\n\r\n  while (prop = parts.shift()) { // eslint-disable-line\r\n    object = object[prop]\r\n    if (object == null) return\r\n  }\r\n\r\n  return object[last]\r\n}\r\nconst mkdirP = function (object, path) {\r\n  if (!path) {\r\n    return object\r\n  }\r\n  const parts = path.split('.')\r\n  parts.forEach(function (key) {\r\n    if (!object[key]) {\r\n      object[key] = {}\r\n    }\r\n    object = object[key]\r\n  })\r\n  return object\r\n}\r\nconst PATH = /^(.+)\\.(.+)$/\r\n\r\n/**\r\n * Set the value at the provided key or path.\r\n *\r\n * @ignore\r\n * @param {Object} object The object on which to set a property.\r\n * @param {(string|Object)} path The key or path to the property. Can also\r\n * pass in an object of path/value pairs, which will all be set on the target\r\n * object.\r\n * @param {*} [value] The value to set.\r\n */\r\nexport const set = function (object, path, value) {\r\n  if (isObject(path)) {\r\n    forOwn(path, function (value, _path) {\r\n      set(object, _path, value)\r\n    })\r\n  } else {\r\n    const parts = PATH.exec(path)\r\n    if (parts) {\r\n      mkdirP(object, parts[1])[parts[2]] = value\r\n    } else {\r\n      object[path] = value\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Iterate over an object's own enumerable properties.\r\n *\r\n * @ignore\r\n * @param {Object} object The object whose properties are to be enumerated.\r\n * @param {Function} fn Iteration function.\r\n * @param {Object} [thisArg] Content to which to bind `fn`.\r\n */\r\nexport const forOwn = function (obj, fn, thisArg) {\r\n  const keys = Object.keys(obj)\r\n  const len = keys.length\r\n  let i\r\n  for (i = 0; i < len; i++) {\r\n    fn.call(thisArg, obj[keys[i]], keys[i], obj)\r\n  }\r\n}\r\n\r\n/**\r\n * Recursively shallow copy own enumberable properties from `source` to `dest`.\r\n *\r\n * @ignore\r\n * @param {Object} dest The destination object.\r\n * @param {Object} source The source object.\r\n */\r\nexport const deepMixIn = function (dest, source) {\r\n  if (source) {\r\n    forOwn(source, function (value, key) {\r\n      const existing = this[key]\r\n      if (isPlainObject(value) && isPlainObject(existing)) {\r\n        deepMixIn(existing, value)\r\n      } else {\r\n        this[key] = value\r\n      }\r\n    }, dest)\r\n  }\r\n  return dest\r\n}\r\n\r\n/**\r\n * Proxy for `Promise.resolve`.\r\n *\r\n * @ignore\r\n * @param {*} [value] Value with which to resolve the Promise.\r\n * @return {Promise} Promise resolved with `value`.\r\n */\r\nexport const resolve = function (value) {\r\n  return Promise.resolve(value)\r\n}\r\n\r\n/**\r\n * Proxy for `Promise.reject`.\r\n *\r\n * @ignore\r\n * @param {*} [value] Value with which to reject the Promise.\r\n * @return {Promise} Promise reject with `value`.\r\n */\r\nexport const reject = function (value) {\r\n  return Promise.reject(value)\r\n}\r\n\r\n/**\r\n * Shallow copy properties from src to dest that meet the following criteria:\r\n * - own enumerable\r\n * - not a function\r\n * - does not start with \"_\"\r\n *\r\n * @ignore\r\n * @param {Object} dest Destination object.\r\n * @param {Object} src Source object.\r\n */\r\nexport const _ = function (dest, src) {\r\n  for (var key in dest) {\r\n    let value = dest[key]\r\n    if (src[key] === undefined && !isFunction(value) && key && key.indexOf('_') !== 0) {\r\n      src[key] = value\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Return the intersection of two arrays.\r\n *\r\n * @ignore\r\n * @param {Array} array1 First array.\r\n * @param {Array} array2 Second array.\r\n * @return {Array} Array of elements common to both arrays.\r\n */\r\nexport const intersection = function (array1, array2) {\r\n  if (!array1 || !array2) {\r\n    return []\r\n  }\r\n  const result = []\r\n  let item\r\n  let i\r\n  const len = array1.length\r\n  for (i = 0; i < len; i++) {\r\n    item = array1[i]\r\n    if (result.indexOf(item) !== -1) {\r\n      continue\r\n    }\r\n    if (array2.indexOf(item) !== -1) {\r\n      result.push(item)\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\r\n * but are missing from `dest.\r\n *\r\n * @ignore\r\n * @param {Object} dest The destination object.\r\n * @param {Object} source The source object.\r\n */\r\nexport const fillIn = function (dest, src) {\r\n  forOwn(src, function (value, key) {\r\n    if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\r\n      dest[key] = value\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Return whether `prop` is matched by any string or regular expression in `bl`.\r\n *\r\n * @ignore\r\n * @param {string} prop The name of a property.\r\n * @param {Array} bl Array of strings and regular expressions.\r\n * @return {boolean} Whether `prop` was matched.\r\n */\r\nexport const isBlacklisted = function (prop, bl) {\r\n  if (!bl || !bl.length) {\r\n    return false\r\n  }\r\n  let matches\r\n  for (var i = 0; i < bl.length; i++) {\r\n    if ((toString(bl[i]) === '[object RegExp]' && bl[i].test(prop)) || bl[i] === prop) {\r\n      matches = prop\r\n      return matches\r\n    }\r\n  }\r\n  return !!matches\r\n}\r\n\r\n/**\r\n * Proxy for `JSON.parse`.\r\n *\r\n * @ignore\r\n * @param {string} json JSON to parse.\r\n * @return {Object} Parsed object.\r\n */\r\nexport const fromJson = function (json) {\r\n  return isString(json) ? JSON.parse(json) : json\r\n}\r\n\r\n/**\r\n * Proxy for `JSON.stringify`.\r\n *\r\n * @ignore\r\n * @param {*} value Value to serialize to JSON.\r\n * @return {string} JSON string.\r\n */\r\nexport const toJson = JSON.stringify\r\n\r\n/**\r\n * Deep copy a value.\r\n *\r\n * @ignore\r\n * @param {*} from Value to deep copy.\r\n * @return {*} Deep copy of `from`.\r\n */\r\nexport const copy = function (from, to, stackFrom, stackTo, blacklist) {\r\n  if (!to) {\r\n    to = from\r\n    if (from) {\r\n      if (isArray(from)) {\r\n        to = copy(from, [], stackFrom, stackTo, blacklist)\r\n      } else if (isDate(from)) {\r\n        to = new Date(from.getTime())\r\n      } else if (isRegExp(from)) {\r\n        to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\r\n        to.lastIndex = from.lastIndex\r\n      } else if (isObject(from)) {\r\n        to = copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist)\r\n      }\r\n    }\r\n  } else {\r\n    if (from === to) {\r\n      throw new Error('Cannot copy! Source and destination are identical.')\r\n    }\r\n\r\n    stackFrom = stackFrom || []\r\n    stackTo = stackTo || []\r\n\r\n    if (isObject(from)) {\r\n      let index = stackFrom.indexOf(from)\r\n      if (index !== -1) {\r\n        return stackTo[index]\r\n      }\r\n\r\n      stackFrom.push(from)\r\n      stackTo.push(to)\r\n    }\r\n\r\n    let result\r\n    if (isArray(from)) {\r\n      let i\r\n      to.length = 0\r\n      for (i = 0; i < from.length; i++) {\r\n        result = copy(from[i], null, stackFrom, stackTo, blacklist)\r\n        if (isObject(from[i])) {\r\n          stackFrom.push(from[i])\r\n          stackTo.push(result)\r\n        }\r\n        to.push(result)\r\n      }\r\n    } else {\r\n      if (isArray(to)) {\r\n        to.length = 0\r\n      } else {\r\n        forOwn(to, function (value, key) {\r\n          delete to[key]\r\n        })\r\n      }\r\n      for (var key in from) {\r\n        if (from.hasOwnProperty(key)) {\r\n          if (isBlacklisted(key, blacklist)) {\r\n            continue\r\n          }\r\n          result = copy(from[key], null, stackFrom, stackTo, blacklist)\r\n          if (isObject(from[key])) {\r\n            stackFrom.push(from[key])\r\n            stackTo.push(result)\r\n          }\r\n          to[key] = result\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\n/**\r\n * Add eventing capabilities into the target object.\r\n *\r\n * @ignore\r\n * @param {Object} target Target object.\r\n * @param {Function} [getter] Custom getter for retrieving the object's event\r\n * listeners.\r\n * @param {Function} [setter] Custom setter for setting the object's event\r\n * listeners.\r\n */\r\nexport const eventify = function (target, getter, setter, enumerable) {\r\n  target = target || this\r\n  let _events = {}\r\n  if (!getter && !setter) {\r\n    getter = function () {\r\n      return _events\r\n    }\r\n    setter = function (value) {\r\n      _events = value\r\n    }\r\n  }\r\n  Object.defineProperties(target, {\r\n    on: {\r\n      enumerable: !!enumerable,\r\n      value (type, func, ctx) {\r\n        if (!getter.call(this)) {\r\n          setter.call(this, {})\r\n        }\r\n        const events = getter.call(this)\r\n        events[type] = events[type] || []\r\n        events[type].push({\r\n          f: func,\r\n          c: ctx\r\n        })\r\n      }\r\n    },\r\n    off: {\r\n      enumerable: !!enumerable,\r\n      value (type, func) {\r\n        const events = getter.call(this)\r\n        const listeners = events[type]\r\n        if (!listeners) {\r\n          setter.call(this, {})\r\n        } else if (func) {\r\n          for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].f === func) {\r\n              listeners.splice(i, 1)\r\n              break\r\n            }\r\n          }\r\n        } else {\r\n          listeners.splice(0, listeners.length)\r\n        }\r\n      }\r\n    },\r\n    emit: {\r\n      enumerable: !!enumerable,\r\n      value (...args) {\r\n        const events = getter.call(this) || {}\r\n        const type = args.shift()\r\n        let listeners = events[type] || []\r\n        let i\r\n        for (i = 0; i < listeners.length; i++) {\r\n          listeners[i].f.apply(listeners[i].c, args)\r\n        }\r\n        listeners = events.all || []\r\n        args.unshift(type)\r\n        for (i = 0; i < listeners.length; i++) {\r\n          listeners[i].f.apply(listeners[i].c, args)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError('Cannot call a class as a function')\r\n  }\r\n}\r\n\r\nexport const possibleConstructorReturn = function (self, call) {\r\n  if (!self) {\r\n    throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called')\r\n  }\r\n\r\n  return call && (typeof call === 'object' || typeof call === 'function') ? call : self\r\n}\r\n\r\nexport const addHiddenPropsToTarget = function (target, props) {\r\n  forOwn(props, function (value, key) {\r\n    props[key] = {\r\n      writable: true,\r\n      value\r\n    }\r\n  })\r\n  Object.defineProperties(target, props)\r\n}\r\n\r\nexport const extend = function (props, classProps) {\r\n  const SuperClass = this\r\n  let SubClass\r\n\r\n  props || (props = {})\r\n  classProps || (classProps = {})\r\n\r\n  if (props.hasOwnProperty('constructor')) {\r\n    SubClass = props.constructor\r\n    delete props.constructor\r\n  } else {\r\n    SubClass = function (...args) {\r\n      classCallCheck(this, SubClass)\r\n      const _this = possibleConstructorReturn(this, (SubClass.__super__ || Object.getPrototypeOf(SubClass)).apply(this, args))\r\n      return _this\r\n    }\r\n  }\r\n\r\n  SubClass.prototype = Object.create(SuperClass && SuperClass.prototype, {\r\n    constructor: {\r\n      value: SubClass,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  })\r\n\r\n  if (Object.setPrototypeOf) {\r\n    Object.setPrototypeOf(SubClass, SuperClass)\r\n  } else if (classProps.strictEs6Class) {\r\n    SubClass.__proto__ = SuperClass // eslint-disable-line\r\n  } else {\r\n    forOwn(SuperClass, function (value, key) {\r\n      SubClass[key] = value\r\n    })\r\n  }\r\n  Object.defineProperty(SubClass, '__super__', {\r\n    configurable: true,\r\n    value: SuperClass\r\n  })\r\n\r\n  addHiddenPropsToTarget(SubClass.prototype, props)\r\n  fillIn(SubClass, classProps)\r\n\r\n  return SubClass\r\n}\r\n\r\nexport const getSuper = function (instance) {\r\n  const Ctor = instance.constructor\r\n  return (Ctor.__super__ || Object.getPrototypeOf(Ctor) || Ctor.__proto__) // eslint-disable-line\r\n}\r\n","import {\r\n  addHiddenPropsToTarget,\r\n  classCallCheck,\r\n  extend,\r\n  forOwn,\r\n  get,\r\n  intersection,\r\n  isArray,\r\n  isFunction,\r\n  isNull,\r\n  isNumber,\r\n  isObject,\r\n  isString\r\n} from './utils'\r\n\r\n/**\r\n * A class used by the {@link Collection} class to build queries to be executed\r\n * against the collection's data. An instance of `Query` is returned by\r\n * {@link Collection#query}.\r\n *\r\n * ```javascript\r\n * import {Query} from 'js-data'\r\n * ```\r\n *\r\n * @class Query\r\n * @param {Collection} collection - The collection on which this query operates.\r\n */\r\nexport default function Query (collection) {\r\n  classCallCheck(this, Query)\r\n\r\n  /**\r\n   * The collection on which this query operates.\r\n   *\r\n   * @name Query#collection\r\n   * @type {Collection}\r\n   */\r\n  this.collection = collection\r\n\r\n  /**\r\n   * The data result of this query.\r\n   *\r\n   * @name Query#data\r\n   * @type {Array}\r\n   */\r\n  this.data = null\r\n}\r\n\r\n/**\r\n * Create a Query subclass.\r\n *\r\n * ```javascript\r\n * var MyQuery = Query.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var query = new MyQuery()\r\n * query.foo() // \"bar\"\r\n * ```\r\n *\r\n * @name Query.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of Query.\r\n */\r\nQuery.extend = extend\r\n\r\nconst reserved = {\r\n  skip: '',\r\n  offset: '',\r\n  where: '',\r\n  limit: '',\r\n  orderBy: '',\r\n  sort: ''\r\n}\r\n\r\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\r\nconst percentRegExp = /%/g\r\nconst underscoreRegExp = /_/g\r\n\r\nfunction escape (pattern) {\r\n  return pattern.replace(escapeRegExp, '\\\\$1')\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Query.ops\r\n * @type {Object}\r\n */\r\nQuery.ops = {\r\n  '==': function (value, predicate) {\r\n    return value == predicate // eslint-disable-line\r\n  },\r\n  '===': function (value, predicate) {\r\n    return value === predicate\r\n  },\r\n  '!=': function (value, predicate) {\r\n    return value != predicate // eslint-disable-line\r\n  },\r\n  '!==': function (value, predicate) {\r\n    return value !== predicate\r\n  },\r\n  '>': function (value, predicate) {\r\n    return value > predicate\r\n  },\r\n  '>=': function (value, predicate) {\r\n    return value >= predicate\r\n  },\r\n  '<': function (value, predicate) {\r\n    return value < predicate\r\n  },\r\n  '<=': function (value, predicate) {\r\n    return value <= predicate\r\n  },\r\n  'isectEmpty': function (value, predicate) {\r\n    return !intersection((value || []), (predicate || [])).length\r\n  },\r\n  'isectNotEmpty': function (value, predicate) {\r\n    return intersection((value || []), (predicate || [])).length\r\n  },\r\n  'in': function (value, predicate) {\r\n    return predicate.indexOf(value) !== -1\r\n  },\r\n  'notIn': function (value, predicate) {\r\n    return predicate.indexOf(value) === -1\r\n  },\r\n  'contains': function (value, predicate) {\r\n    return (value || []).indexOf(predicate) !== -1\r\n  },\r\n  'notContains': function (value, predicate) {\r\n    return (value || []).indexOf(predicate) === -1\r\n  }\r\n}\r\n\r\naddHiddenPropsToTarget(Query.prototype, {\r\n  compare (orderBy, index, a, b) {\r\n    const def = orderBy[index]\r\n    let cA = get(a, def[0])\r\n    let cB = get(b, def[0])\r\n    if (cA && isString(cA)) {\r\n      cA = cA.toUpperCase()\r\n    }\r\n    if (cB && isString(cB)) {\r\n      cB = cB.toUpperCase()\r\n    }\r\n    a || (a = null)\r\n    b || (b = null)\r\n    if (def[1] === 'DESC') {\r\n      if (cB < cA) {\r\n        return -1\r\n      } else if (cB > cA) {\r\n        return 1\r\n      } else {\r\n        if (index < orderBy.length - 1) {\r\n          return this.compare(orderBy, index + 1, a, b)\r\n        } else {\r\n          return 0\r\n        }\r\n      }\r\n    } else {\r\n      if (cA < cB) {\r\n        return -1\r\n      } else if (cA > cB) {\r\n        return 1\r\n      } else {\r\n        if (index < orderBy.length - 1) {\r\n          return this.compare(orderBy, index + 1, a, b)\r\n        } else {\r\n          return 0\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  evaluate (value, op, predicate) {\r\n    if (Query.ops[op]) {\r\n      return Query.ops[op](value, predicate)\r\n    }\r\n    if (op.indexOf('like') === 0) {\r\n      return !isNull(this.like(predicate, op.substr(4)).exec(value))\r\n    } else if (op.indexOf('notLike') === 0) {\r\n      return isNull(this.like(predicate, op.substr(7)).exec(value))\r\n    }\r\n  },\r\n\r\n  like (pattern, flags) {\r\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\r\n  },\r\n\r\n  /**\r\n   * Return the current data result of this query.\r\n   * @name Query#getData\r\n   * @method\r\n   * @return {Array} The data in this query.\r\n   */\r\n  getData () {\r\n    if (!this.data) {\r\n      this.data = this.collection.index.getAll()\r\n    }\r\n    return this.data\r\n  },\r\n\r\n  /**\r\n   * Find all entities between two boundaries.\r\n   *\r\n   * Get the users ages 18 to 30\r\n   * ```js\r\n   * const users = query.between(18, 30, { index: 'age' }).run()\r\n   * ```\r\n   * Same as above\r\n   * ```js\r\n   * const users = query.between([18], [30], { index: 'age' }).run()\r\n   * ```\r\n   *\r\n   * @name Query#between\r\n   * @method\r\n   * @param {Array} leftKeys - Keys defining the left boundary.\r\n   * @param {Array} rightKeys - Keys defining the right boundary.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string} [opts.index] - Name of the secondary index to use in the\r\n   * query. If no index is specified, the main index is used.\r\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\r\n   * on the left boundary.\r\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\r\n   * on the left boundary.\r\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\r\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  between (leftKeys, rightKeys, opts) {\r\n    opts || (opts = {})\r\n    const collection = this.collection\r\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\r\n    if (this.data) {\r\n      throw new Error('Cannot access index after first operation!')\r\n    }\r\n    this.data = index.between(leftKeys, rightKeys, opts)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Find the entity or entities that match the provided key.\r\n   *\r\n   * #### Example\r\n   *\r\n   * Get the entity whose primary key is 25\r\n   * ```js\r\n   * const entities = query.get(25).run()\r\n   * ```\r\n   * Same as above\r\n   * ```js\r\n   * const entities = query.get([25]).run()\r\n   * ```\r\n   * Get all users who are active and have the \"admin\" role\r\n   * ```js\r\n   * const activeAdmins = query.get(['active', 'admin'], {\r\n   *   index: 'activityAndRoles'\r\n   * }).run()\r\n   * ```\r\n   * Get all entities that match a certain weather condition\r\n   * ```js\r\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\r\n   *   index: 'weatherConditions'\r\n   * }).run()\r\n   * ```\r\n   *\r\n   * @name Query#get\r\n   * @method\r\n   * @param {Array} keyList - Key(s) defining the entity to retrieve. If\r\n   * `keyList` is not an array (i.e. for a single-value key), it will be\r\n   * wrapped in an array.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string} [opts.string] - Name of the secondary index to use in the\r\n   * query. If no index is specified, the main index is used.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  get (keyList = [], opts) {\r\n    opts || (opts = {})\r\n    if (this.data) {\r\n      throw new Error('Cannot access index after first operation!')\r\n    }\r\n    if (keyList && !isArray(keyList)) {\r\n      keyList = [keyList]\r\n    }\r\n    if (!keyList.length) {\r\n      this.getData()\r\n      return this\r\n    }\r\n    const collection = this.collection\r\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\r\n    this.data = index.get(keyList)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Find the entity or entities that match the provided keyLists.\r\n   *\r\n   * #### Example\r\n   *\r\n   * Get the posts where \"status\" is \"draft\" or \"inReview\"\r\n   * ```js\r\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\r\n   * ```\r\n   * Same as above\r\n   * ```js\r\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\r\n   * ```\r\n   *\r\n   * @name Query#getAll\r\n   * @method\r\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\r\n   * entities matching each keyList will be retrieved. If no keyLists are\r\n   * provided, all entities will be returned.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string} [opts.index] - Name of the secondary index to use in the\r\n   * query. If no index is specified, the main index is used.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  getAll (...args) {\r\n    let opts = {}\r\n    if (this.data) {\r\n      throw new Error('Cannot access index after first operation!')\r\n    }\r\n    if (!args.length || args.length === 1 && isObject(args[0])) {\r\n      this.getData()\r\n      return this\r\n    } else if (args.length && isObject(args[args.length - 1])) {\r\n      opts = args[args.length - 1]\r\n      args.pop()\r\n    }\r\n    const collection = this.collection\r\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\r\n    this.data = []\r\n    args.forEach(keyList => {\r\n      this.data = this.data.concat(index.get(keyList))\r\n    })\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Find the entity or entities that match the provided query or pass the\r\n   * provided filter function.\r\n   *\r\n   * #### Example\r\n   *\r\n   * Get the draft posts created less than three months\r\n   * ```js\r\n   * const posts = query.filter({\r\n   *   where: {\r\n   *     status: {\r\n   *       '==': 'draft'\r\n   *     },\r\n   *     created_at_timestamp: {\r\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\r\n   *     }\r\n   *   }\r\n   * }).run()\r\n   * ```\r\n   * Use a custom filter function\r\n   * ```js\r\n   * const posts = query.filter(function (post) {\r\n   *   return post.isReady()\r\n   * }).run()\r\n   * ```\r\n   *\r\n   * @name Query#filter\r\n   * @method\r\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\r\n   * function.\r\n   * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\r\n   * `queryOrFn` is a function.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  filter (query, thisArg) {\r\n    const self = this\r\n    query || (query = {})\r\n    self.getData()\r\n    if (isObject(query)) {\r\n      let where = {}\r\n      // Filter\r\n      if (isObject(query.where)) {\r\n        where = query.where\r\n      }\r\n      forOwn(query, function (value, key) {\r\n        if (!(key in reserved) && !(key in where)) {\r\n          where[key] = {\r\n            '==': value\r\n          }\r\n        }\r\n      })\r\n\r\n      const fields = []\r\n      const ops = []\r\n      const predicates = []\r\n      forOwn(where, function (clause, field) {\r\n        if (!isObject(clause)) {\r\n          clause = {\r\n            '==': clause\r\n          }\r\n        }\r\n        forOwn(clause, function (expr, op) {\r\n          fields.push(field)\r\n          ops.push(op)\r\n          predicates.push(expr)\r\n        })\r\n      })\r\n      if (fields.length) {\r\n        let i\r\n        let len = fields.length\r\n        self.data = self.data.filter(function (item) {\r\n          let first = true\r\n          let keep = true\r\n\r\n          for (i = 0; i < len; i++) {\r\n            let op = ops[i]\r\n            const isOr = op.charAt(0) === '|'\r\n            op = isOr ? op.substr(1) : op\r\n            const expr = self.evaluate(get(item, fields[i]), op, predicates[i])\r\n            if (expr !== undefined) {\r\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\r\n            }\r\n            first = false\r\n          }\r\n          return keep\r\n        })\r\n      }\r\n\r\n      // Sort\r\n      let orderBy = query.orderBy || query.sort\r\n\r\n      if (isString(orderBy)) {\r\n        orderBy = [\r\n          [orderBy, 'ASC']\r\n        ]\r\n      }\r\n      if (!isArray(orderBy)) {\r\n        orderBy = null\r\n      }\r\n\r\n      // Apply 'orderBy'\r\n      if (orderBy) {\r\n        let index = 0\r\n        orderBy.forEach(function (def, i) {\r\n          if (isString(def)) {\r\n            orderBy[i] = [def, 'ASC']\r\n          }\r\n        })\r\n        self.data.sort(function (a, b) {\r\n          return self.compare(orderBy, index, a, b)\r\n        })\r\n      }\r\n\r\n      // Skip\r\n      if (isNumber(query.skip)) {\r\n        self.skip(query.skip)\r\n      } else if (isNumber(query.offset)) {\r\n        self.skip(query.offset)\r\n      }\r\n      // Limit\r\n      if (isNumber(query.limit)) {\r\n        self.limit(query.limit)\r\n      }\r\n    } else if (isFunction(query)) {\r\n      self.data = self.data.filter(query, thisArg)\r\n    }\r\n    return self\r\n  },\r\n\r\n  /**\r\n   * Skip a number of results.\r\n   *\r\n   * #### Example\r\n   *\r\n   * Get all but the first 10 draft posts\r\n   * ```js\r\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\r\n   * ```\r\n   *\r\n   * @name Query#skip\r\n   * @method\r\n   * @param {number} num - The number of entities to skip.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  skip (num) {\r\n    if (!isNumber(num)) {\r\n      throw new TypeError(`skip: Expected number but found ${typeof num}!`)\r\n    }\r\n    const data = this.getData()\r\n    if (num < data.length) {\r\n      this.data = data.slice(num)\r\n    } else {\r\n      this.data = []\r\n    }\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Limit the result.\r\n   *\r\n   * #### Example\r\n   *\r\n   * Get only the first 10 draft posts\r\n   * ```js\r\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\r\n   * ```\r\n   *\r\n   * @name Query#limit\r\n   * @method\r\n   * @param {number} num - The maximum number of entities to keep in the result.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  limit (num) {\r\n    if (!isNumber(num)) {\r\n      throw new TypeError(`limit: Expected number but found ${typeof num}!`)\r\n    }\r\n    const data = this.getData()\r\n    this.data = data.slice(0, Math.min(data.length, num))\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Iterate over all entities.\r\n   *\r\n   * @name Query#forEach\r\n   * @method\r\n   * @param {Function} forEachFn - Iteration function.\r\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  forEach (forEachFn, thisArg) {\r\n    this.getData().forEach(forEachFn, thisArg)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Apply a mapping function to the result data.\r\n   *\r\n   * @name Query#map\r\n   * @method\r\n   * @param {Function} mapFn - Mapping function.\r\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  map (mapFn, thisArg) {\r\n    this.data = this.getData().map(mapFn, thisArg)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Return the result of calling the specified function on each item in this\r\n   * collection's main index.\r\n   * @name Query#mapCall\r\n   * @method\r\n   * @param {string} funcName - Name of function to call\r\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\r\n   * @return {Query} A reference to itself for chaining.\r\n   */\r\n  mapCall (funcName, ...args) {\r\n    this.data = this.getData().map(function (item) {\r\n      return item[funcName](...args)\r\n    })\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * Complete the execution of the query and return the resulting data.\r\n   *\r\n   * @name Query#run\r\n   * @method\r\n   * @return {Array} The result of executing this query.\r\n   */\r\n  run () {\r\n    const data = this.data\r\n    this.data = null\r\n    return data\r\n  }\r\n})\r\n","export function sort (a, b, hashCode) {\r\n  // Short-curcuit comparison if a and b are strictly equal\r\n  // This is absolutely necessary for indexed objects that\r\n  // don't have the idAttribute field\r\n  if (a === b) {\r\n    return 0\r\n  }\r\n  if (hashCode) {\r\n    a = hashCode(a)\r\n    b = hashCode(b)\r\n  }\r\n  if (a === null && b === null) {\r\n    return 0\r\n  }\r\n\r\n  if (a === null) {\r\n    return -1\r\n  }\r\n\r\n  if (b === null) {\r\n    return 1\r\n  }\r\n\r\n  if (a < b) {\r\n    return -1\r\n  }\r\n\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nexport function insertAt (array, index, value) {\r\n  array.splice(index, 0, value)\r\n  return array\r\n}\r\n\r\nexport function removeAt (array, index) {\r\n  array.splice(index, 1)\r\n  return array\r\n}\r\n\r\nexport function binarySearch (array, value, field) {\r\n  let lo = 0\r\n  let hi = array.length\r\n  let compared\r\n  let mid\r\n\r\n  while (lo < hi) {\r\n    mid = ((lo + hi) / 2) | 0\r\n    compared = sort(value, array[mid], field)\r\n    if (compared === 0) {\r\n      return {\r\n        found: true,\r\n        index: mid\r\n      }\r\n    } else if (compared < 0) {\r\n      hi = mid\r\n    } else {\r\n      lo = mid + 1\r\n    }\r\n  }\r\n\r\n  return {\r\n    found: false,\r\n    index: hi\r\n  }\r\n}\r\n","// Copyright (c) 2015, InternalFX.\r\n\r\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\r\n// without fee is hereby granted, provided that the above copyright notice and this permission\r\n// notice appear in all copies.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\r\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\r\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\r\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\r\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\r\n// USE OR PERFORMANCE OF THIS SOFTWARE.\r\n\r\n// Modifications\r\n// Copyright 2015 Jason Dobry\r\n//\r\n// Summary of modifications:\r\n// Converted to ES6 Class syntax\r\n// Reworked dependencies so as to re-use code already in js-data\r\nimport {\r\n  addHiddenPropsToTarget,\r\n  classCallCheck,\r\n  copy,\r\n  fillIn,\r\n  forOwn,\r\n  isArray,\r\n  isFunction\r\n} from '../../src/utils'\r\nimport {binarySearch, insertAt, removeAt} from './utils'\r\n\r\nconst blacklist = { '>': 1, '>=': 1, '<': 1, '<=': 1 }\r\n\r\nexport function Index (fieldList, opts) {\r\n  classCallCheck(this, Index)\r\n  fieldList || (fieldList = [])\r\n\r\n  if (!isArray(fieldList)) {\r\n    throw new Error('fieldList must be an array.')\r\n  }\r\n\r\n  opts || (opts = {})\r\n  this.fieldList = fieldList\r\n  this.fieldGetter = opts.fieldGetter\r\n  this.hashCode = opts.hashCode\r\n  this.isIndex = true\r\n  this.keys = []\r\n  this.values = []\r\n}\r\n\r\naddHiddenPropsToTarget(Index.prototype, {\r\n  set (keyList, value) {\r\n    if (!isArray(keyList)) {\r\n      keyList = [keyList]\r\n    }\r\n\r\n    let key = keyList.shift() || null\r\n    let pos = binarySearch(this.keys, key)\r\n\r\n    if (keyList.length === 0) {\r\n      if (pos.found) {\r\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\r\n        if (!dataLocation.found) {\r\n          insertAt(this.values[pos.index], dataLocation.index, value)\r\n        }\r\n      } else {\r\n        insertAt(this.keys, pos.index, key)\r\n        insertAt(this.values, pos.index, [value])\r\n      }\r\n    } else {\r\n      if (pos.found) {\r\n        this.values[pos.index].set(keyList, value)\r\n      } else {\r\n        insertAt(this.keys, pos.index, key)\r\n        let newIndex = new Index([], { hashCode: this.hashCode })\r\n        newIndex.set(keyList, value)\r\n        insertAt(this.values, pos.index, newIndex)\r\n      }\r\n    }\r\n  },\r\n\r\n  get (keyList) {\r\n    if (!isArray(keyList)) {\r\n      keyList = [keyList]\r\n    }\r\n\r\n    let key = keyList.shift() || null\r\n    let pos = binarySearch(this.keys, key)\r\n\r\n    if (keyList.length === 0) {\r\n      if (pos.found) {\r\n        if (this.values[pos.index].isIndex) {\r\n          return this.values[pos.index].getAll()\r\n        } else {\r\n          return this.values[pos.index]\r\n        }\r\n      } else {\r\n        return []\r\n      }\r\n    } else {\r\n      if (pos.found) {\r\n        return this.values[pos.index].get(keyList)\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n\r\n  getAll () {\r\n    let results = []\r\n    this.values.forEach(function (value) {\r\n      if (value.isIndex) {\r\n        results = results.concat(value.getAll())\r\n      } else {\r\n        results = results.concat(value)\r\n      }\r\n    })\r\n    return results\r\n  },\r\n\r\n  visitAll (cb, thisArg) {\r\n    this.values.forEach(function (value) {\r\n      if (value.isIndex) {\r\n        value.visitAll(cb, thisArg)\r\n      } else {\r\n        value.forEach(cb, thisArg)\r\n      }\r\n    })\r\n  },\r\n\r\n  query (query) {\r\n    let leftKeys\r\n    let rightKeys\r\n\r\n    if (query['>']) {\r\n      leftKeys = query['>']\r\n      query.leftInclusive = false\r\n    } else if (query['>=']) {\r\n      leftKeys = query['>=']\r\n      query.leftInclusive = true\r\n    }\r\n\r\n    if (query['<']) {\r\n      rightKeys = query['<']\r\n      query.rightInclusive = false\r\n    } else if (query['<=']) {\r\n      rightKeys = query['<=']\r\n      query.rightInclusive = true\r\n    }\r\n\r\n    if (leftKeys.length !== rightKeys.length) {\r\n      throw new Error('Key arrays must be same length')\r\n    }\r\n\r\n    const _opts = {}\r\n    forOwn(query, function (value, key) {\r\n      if (!blacklist[key]) {\r\n        _opts[key] = value\r\n      }\r\n    })\r\n    return this.between(leftKeys, rightKeys, _opts)\r\n  },\r\n\r\n  between (leftKeys, rightKeys, opts = {}) {\r\n    if (!isArray(leftKeys)) {\r\n      leftKeys = [leftKeys]\r\n    }\r\n    if (!isArray(rightKeys)) {\r\n      rightKeys = [rightKeys]\r\n    }\r\n    fillIn(opts, {\r\n      leftInclusive: true,\r\n      rightInclusive: false,\r\n      limit: undefined,\r\n      offset: 0\r\n    })\r\n\r\n    let results = this._between(leftKeys, rightKeys, opts)\r\n\r\n    if (opts.limit) {\r\n      return results.slice(opts.offset, opts.limit + opts.offset)\r\n    } else {\r\n      return results.slice(opts.offset)\r\n    }\r\n  },\r\n\r\n  _between (leftKeys, rightKeys, opts) {\r\n    let results = []\r\n\r\n    let leftKey = leftKeys.shift()\r\n    let rightKey = rightKeys.shift()\r\n\r\n    let pos\r\n\r\n    if (leftKey !== undefined) {\r\n      pos = binarySearch(this.keys, leftKey)\r\n    } else {\r\n      pos = {\r\n        found: false,\r\n        index: 0\r\n      }\r\n    }\r\n\r\n    if (leftKeys.length === 0) {\r\n      if (pos.found && opts.leftInclusive === false) {\r\n        pos.index += 1\r\n      }\r\n\r\n      for (let i = pos.index; i < this.keys.length; i += 1) {\r\n        if (rightKey !== undefined) {\r\n          if (opts.rightInclusive) {\r\n            if (this.keys[i] > rightKey) { break }\r\n          } else {\r\n            if (this.keys[i] >= rightKey) { break }\r\n          }\r\n        }\r\n\r\n        if (this.values[i].isIndex) {\r\n          results = results.concat(this.values[i].getAll())\r\n        } else {\r\n          results = results.concat(this.values[i])\r\n        }\r\n\r\n        if (opts.limit) {\r\n          if (results.length >= (opts.limit + opts.offset)) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = pos.index; i < this.keys.length; i += 1) {\r\n        let currKey = this.keys[i]\r\n        if (currKey > rightKey) { break }\r\n\r\n        if (this.values[i].isIndex) {\r\n          if (currKey === leftKey) {\r\n            results = results.concat(this.values[i]._between(copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\r\n          } else if (currKey === rightKey) {\r\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), copy(rightKeys), opts))\r\n          } else {\r\n            results = results.concat(this.values[i].getAll())\r\n          }\r\n        } else {\r\n          results = results.concat(this.values[i])\r\n        }\r\n\r\n        if (opts.limit) {\r\n          if (results.length >= (opts.limit + opts.offset)) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (opts.limit) {\r\n      return results.slice(0, opts.limit + opts.offset)\r\n    } else {\r\n      return results\r\n    }\r\n  },\r\n\r\n  peek () {\r\n    if (this.values.length) {\r\n      if (this.values[0].isIndex) {\r\n        return this.values[0].peek()\r\n      } else {\r\n        return this.values[0]\r\n      }\r\n    }\r\n    return []\r\n  },\r\n\r\n  remove (keyList, value) {\r\n    if (!isArray(keyList)) {\r\n      keyList = [keyList]\r\n    }\r\n\r\n    let key = keyList.shift()\r\n    let pos = binarySearch(this.keys, key)\r\n\r\n    if (keyList.length === 0) {\r\n      if (pos.found) {\r\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\r\n        if (dataLocation.found) {\r\n          removeAt(this.values[pos.index], dataLocation.index)\r\n          if (this.values[pos.index].length === 0) {\r\n            removeAt(this.keys, pos.index)\r\n            removeAt(this.values, pos.index)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (pos.found) {\r\n        this.values[pos.index].delete(keyList, value)\r\n      }\r\n    }\r\n  },\r\n\r\n  clear () {\r\n    this.keys = []\r\n    this.values = []\r\n  },\r\n\r\n  insertRecord (data) {\r\n    let keyList = this.fieldList.map(function (field) {\r\n      if (isFunction(field)) {\r\n        return field(data) || null\r\n      } else {\r\n        return data[field] || null\r\n      }\r\n    })\r\n    this.set(keyList, data)\r\n  },\r\n\r\n  removeRecord (data) {\r\n    let removed\r\n    this.values.forEach((value, i) => {\r\n      if (value.isIndex) {\r\n        if (value.removeRecord(data)) {\r\n          if (value.keys.length === 0) {\r\n            removeAt(this.keys, i)\r\n            removeAt(this.values, i)\r\n          }\r\n          removed = true\r\n          return false\r\n        }\r\n      } else {\r\n        const dataLocation = binarySearch(value, data, this.hashCode)\r\n        if (dataLocation.found) {\r\n          removeAt(value, dataLocation.index)\r\n          if (value.length === 0) {\r\n            removeAt(this.keys, i)\r\n            removeAt(this.values, i)\r\n          }\r\n          removed = true\r\n          return false\r\n        }\r\n      }\r\n    })\r\n    return removed ? data : undefined\r\n  },\r\n\r\n  updateRecord (data) {\r\n    this.removeRecord(data)\r\n    this.insertRecord(data)\r\n  }\r\n})\r\n","import Query from './Query'\r\nimport {\r\n  _,\r\n  addHiddenPropsToTarget,\r\n  classCallCheck,\r\n  deepMixIn,\r\n  eventify,\r\n  extend,\r\n  fillIn,\r\n  forOwn,\r\n  get,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isSorN,\r\n  isString\r\n} from './utils'\r\nimport {Index} from '../lib/mindex/index'\r\n\r\nconst COLLECTION_DEFAULTS = {\r\n  /**\r\n   * Field to be used as the unique identifier for records in this collection.\r\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\r\n   * this will default to {@link Mapper#idAttribute}.\r\n   *\r\n   * @name Collection#idAttribute\r\n   * @type {string}\r\n   * @default \"id\"\r\n   */\r\n  idAttribute: 'id',\r\n\r\n  /**\r\n   * Default Mapper for this collection. Optional. If a Mapper is provided, then\r\n   * the collection will use the {@link Mapper#idAttribute} setting, and will\r\n   * wrap records in {@link Mapper#RecordClass}.\r\n   *\r\n   * @example\r\n   * import {Collection, Mapper} from 'js-data'\r\n   *\r\n   * class MyMapperClass extends Mapper {\r\n   *   foo () { return 'bar' }\r\n   * }\r\n   * const myMapper = new MyMapperClass()\r\n   * const collection = new Collection(null, { mapper: myMapper })\r\n   *\r\n   * @name Collection#mapper\r\n   * @type {Mapper}\r\n   * @default null\r\n   */\r\n  mapper: null,\r\n\r\n  /**\r\n   * What to do when inserting a record into this Collection that shares a\r\n   * primary key with a record already in this Collection.\r\n   *\r\n   * Possible values:\r\n   * - merge\r\n   * - replace\r\n   *\r\n   * Merge:\r\n   *\r\n   * Recursively shallow copy properties from the new record onto the existing\r\n   * record.\r\n   *\r\n   * Replace:\r\n   *\r\n   * Shallow copy top-level properties from the new record onto the existing\r\n   * record. Any top-level own properties of the existing record that are _not_\r\n   * on the new record will be removed.\r\n   *\r\n   * @name Collection#onConflict\r\n   * @type {string}\r\n   * @default \"merge\"\r\n   */\r\n  onConflict: 'merge',\r\n\r\n  /**\r\n   * Options to be passed into {@link Mapper#createRecord} when wrapping records\r\n   * in {@link Mapper#RecordClass}.\r\n   *\r\n   * @name Collection#recordOpts\r\n   * @type {Object}\r\n   * @default null\r\n   */\r\n  recordOpts: null\r\n}\r\n\r\n/**\r\n * ```javascript\r\n * import {Collection} from 'js-data'\r\n * ```\r\n *\r\n * An ordered set of {@link Record} instances.\r\n *\r\n * @example\r\n * import {Collection, Record} from 'js-data'\r\n * const user1 = new Record({ id: 1 })\r\n * const user2 = new Record({ id: 2 })\r\n * const UserCollection = new Collection([user1, user2])\r\n * UserCollection.get(1) === user1 // true\r\n *\r\n * @class Collection\r\n * @param {Array} [records] Initial set of records to insert into the\r\n * collection.\r\n * @param {Object} [opts] Configuration options.\r\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\r\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\r\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\r\n * @param {Object} [opts.recordOpts=null] See {@link Collection#recordOpts}.\r\n */\r\nexport default function Collection (records, opts) {\r\n  const self = this\r\n  classCallCheck(self, Collection)\r\n\r\n  if (isObject(records) && !isArray(records)) {\r\n    opts = records\r\n    records = []\r\n  }\r\n  if (isString(opts)) {\r\n    opts = { idAttribute: opts }\r\n  }\r\n\r\n  // Default values for arguments\r\n  records || (records = [])\r\n  opts || (opts = {})\r\n  opts.recordOpts || (opts.recordOpts = {})\r\n\r\n  fillIn(self, opts)\r\n  fillIn(self, COLLECTION_DEFAULTS)\r\n\r\n  /**\r\n   * Event listeners attached to this Collection.\r\n   *\r\n   * @name Collection#_listeners\r\n   * @instance\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n  self._listeners = {}\r\n\r\n  const idAttribute = self.recordId()\r\n\r\n  /**\r\n   * The main index, which uses @{link Collection#recordId} as the key.\r\n   * @name Collection#index\r\n   * @type {Index}\r\n   */\r\n  self.index = new Index([idAttribute], {\r\n    hashCode (obj) {\r\n      return get(obj, idAttribute)\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Object that holds the secondary indexes of this collection.\r\n   * @name Collection#indexes\r\n   * @type {Object.<string, Index>}\r\n   */\r\n  self.indexes = {}\r\n\r\n  records.forEach(function (record) {\r\n    record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\r\n    self.index.insertRecord(record)\r\n    if (record && isFunction(record.on)) {\r\n      record.on('all', self._onRecordEvent, self)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Create a Collection subclass.\r\n *\r\n * @example\r\n * var MyCollection = Collection.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var collection = new MyCollection()\r\n * collection.foo() // \"bar\"\r\n *\r\n * @name Collection.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of Collection.\r\n */\r\nCollection.extend = extend\r\n\r\naddHiddenPropsToTarget(Collection.prototype, {\r\n  /**\r\n   * Used to bind to events emitted by records in this Collection.\r\n   *\r\n   * @name Collection#_onRecordEvent\r\n   * @method\r\n   * @private\r\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\r\n   */\r\n  _onRecordEvent (...args) {\r\n    this.emit(...args)\r\n  },\r\n\r\n  /**\r\n   * Insert the provided record or records.\r\n   *\r\n   * If a record is already in the collection then the provided record will\r\n   * either merge with or replace the existing record based on the value of the\r\n   * `onConflict` option.\r\n   *\r\n   * The collection's secondary indexes will be updated as each record is\r\n   * visited.\r\n   *\r\n   * @name Collection#add\r\n   * @method\r\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {string} [opts.onConflict] What to do when a record is already in\r\n   * the collection. Possible values are `merge` or `replace`.\r\n   * @return {(Object|Object[]|Record|Record[])} The added record or records.\r\n   */\r\n  add (records, opts) {\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Collection's configuration\r\n    _(self, opts)\r\n    records = self.beforeAdd(records, opts) || records\r\n\r\n    // Track whether just one record or an array of records is being inserted\r\n    let singular = false\r\n    const idAttribute = self.recordId()\r\n    if (!isArray(records)) {\r\n      records = [records]\r\n      singular = true\r\n    }\r\n\r\n    // Map the provided records to existing records.\r\n    // New records will be inserted. If any records map to existing records,\r\n    // they will be merged into the existing records according to the onConflict\r\n    // option.\r\n    records = records.map(function (record) {\r\n      let id = self.recordId(record)\r\n      if (!isSorN(id)) {\r\n        throw new TypeError(`${idAttribute}: Expected string or number, found ${typeof id}!`)\r\n      }\r\n      // Grab existing record if there is one\r\n      const existing = self.get(id)\r\n      // If the currently visited record is just a reference to an existing\r\n      // record, then there is nothing to be done. Exit early.\r\n      if (record === existing) {\r\n        return existing\r\n      }\r\n\r\n      if (existing) {\r\n        // Here, the currently visited record corresponds to a record already\r\n        // in the collection, so we need to merge them\r\n        const onConflict = opts.onConflict || self.onConflict\r\n        if (onConflict === 'merge') {\r\n          deepMixIn(existing, record)\r\n        } else if (onConflict === 'replace') {\r\n          forOwn(existing, (value, key) => {\r\n            if (key !== idAttribute && !record.hasOwnProperty(key)) {\r\n              delete existing[key]\r\n            }\r\n          })\r\n          existing.set(record)\r\n        }\r\n        record = existing\r\n        // Update all indexes in the collection\r\n        self.updateIndexes(record)\r\n      } else {\r\n        // Here, the currently visted record does not correspond to any record\r\n        // in the collection, so (optionally) instantiate this record and insert\r\n        // it into the collection\r\n        record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\r\n        self.index.insertRecord(record)\r\n        forOwn(self.indexes, function (index, name) {\r\n          index.insertRecord(record)\r\n        })\r\n        if (record && isFunction(record.on)) {\r\n          record.on('all', self._onRecordEvent, self)\r\n        }\r\n      }\r\n      return record\r\n    })\r\n    // Finally, return the inserted data\r\n    const result = singular ? (records.length ? records[0] : undefined) : records\r\n    // TODO: Make this more performant (batch events?)\r\n    self.emit('add', result)\r\n    return self.afterAdd(records, opts, result) || result\r\n  },\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\r\n   * value then {@link Collection#add} will return that same value.\r\n   *\r\n   * @name Collection#method\r\n   * @method\r\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\r\n   * that were added to this Collection by {@link Collection#add}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\r\n   */\r\n  afterAdd () {},\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\r\n   * a value then {@link Collection#remove} will return that same value.\r\n   *\r\n   * @name Collection#afterRemove\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\r\n   * @param {Object} record The result that will be returned by {@link Collection#remove}.\r\n   */\r\n  afterRemove () {},\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\r\n   * returns a value then {@link Collection#removeAll} will return that same\r\n   * value.\r\n   *\r\n   * @name Collection#afterRemoveAll\r\n   * @method\r\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\r\n   * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\r\n   */\r\n  afterRemoveAll () {},\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\r\n   * value then the `records` argument in {@link Collection#add} will be\r\n   * re-assigned to the returned value.\r\n   *\r\n   * @name Collection#beforeAdd\r\n   * @method\r\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\r\n   */\r\n  beforeAdd () {},\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#remove}.\r\n   *\r\n   * @name Collection#beforeRemove\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\r\n   */\r\n  beforeRemove () {},\r\n\r\n  /**\r\n   * Lifecycle hook called by {@link Collection#removeAll}.\r\n   *\r\n   * @name Collection#beforeRemoveAll\r\n   * @method\r\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\r\n   */\r\n  beforeRemoveAll () {},\r\n\r\n  /**\r\n   * Find all records between two boundaries.\r\n   *\r\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\r\n   *\r\n   * @example <caption>Get all users ages 18 to 30</caption>\r\n   * const users = collection.between(18, 30, { index: 'age' })\r\n   *\r\n   * @example <caption>Same as above</caption>\r\n   * const users = collection.between([18], [30], { index: 'age' })\r\n   *\r\n   * @name Collection#between\r\n   * @method\r\n   * @param {Array} leftKeys Keys defining the left boundary.\r\n   * @param {Array} rightKeys Keys defining the right boundary.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {string} [opts.index] Name of the secondary index to use in the\r\n   * query. If no index is specified, the main index is used.\r\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\r\n   * on the left boundary.\r\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\r\n   * on the left boundary.\r\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\r\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\r\n   * @return {Array} The result.\r\n   */\r\n  between (leftKeys, rightKeys, opts) {\r\n    return this.query().between(leftKeys, rightKeys, opts).run()\r\n  },\r\n\r\n  /**\r\n   * Create a new secondary index on the contents of the collection.\r\n   *\r\n   * @example <caption>Index users by age</caption>\r\n   * collection.createIndex('age')\r\n   *\r\n   * @example <caption>Index users by status and role</caption>\r\n   * collection.createIndex('statusAndRole', ['status', 'role'])\r\n   *\r\n   * @name Collection#createIndex\r\n   * @method\r\n   * @param {string} name - The name of the new secondary index.\r\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\r\n   * compound key of the new secondary index. If no fieldList is provided, then\r\n   * the name will also be the field that is used to index the collection.\r\n   * @return {Collection} A reference to itself for chaining.\r\n   */\r\n  createIndex (name, fieldList, opts) {\r\n    const self = this\r\n    if (isString(name) && fieldList === undefined) {\r\n      fieldList = [name]\r\n    }\r\n    opts || (opts = {})\r\n    opts.hashCode = opts.hashCode || function (obj) {\r\n      return self.recordId(obj)\r\n    }\r\n    const index = self.indexes[name] = new Index(fieldList, opts)\r\n    self.index.visitAll(index.insertRecord, index)\r\n    return self\r\n  },\r\n\r\n  /**\r\n   * Find the record or records that match the provided query or pass the\r\n   * provided filter function.\r\n   *\r\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\r\n   *\r\n   * @example <caption>Get the draft posts created less than three months</caption>\r\n   * const posts = collection.filter({\r\n   *   where: {\r\n   *     status: {\r\n   *       '==': 'draft'\r\n   *     },\r\n   *     created_at_timestamp: {\r\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\r\n   *     }\r\n   *   }\r\n   * })\r\n   *\r\n   * @example <caption>Use a custom filter function</caption>\r\n   * const posts = collection.filter(function (post) {\r\n   *   return post.isReady()\r\n   * })\r\n   *\r\n   * @name Collection#filter\r\n   * @method\r\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\r\n   * function.\r\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\r\n   * `queryOrFn` is a function.\r\n   * @return {Array} The result.\r\n   */\r\n  filter (query, thisArg) {\r\n    return this.query().filter(query, thisArg).run()\r\n  },\r\n\r\n  /**\r\n   * Iterate over all records.\r\n   *\r\n   * @example\r\n   * collection.forEach(function (record) {\r\n   *   // do something\r\n   * })\r\n   *\r\n   * @name Collection#forEach\r\n   * @method\r\n   * @param {Function} forEachFn - Iteration function.\r\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\r\n   * @return {Array} The result.\r\n   */\r\n  forEach (cb, thisArg) {\r\n    this.index.visitAll(cb, thisArg)\r\n  },\r\n\r\n  /**\r\n   * Get the record with the given id.\r\n   *\r\n   * @name Collection#get\r\n   * @method\r\n   * @param {(string|number)} id - The primary key of the record to get.\r\n   * @return {(Object|Record)} The record with the given id.\r\n   */\r\n  get (id) {\r\n    const instances = this.query().get(id).run()\r\n    return instances.length ? instances[0] : undefined\r\n  },\r\n\r\n  /**\r\n   * Find the record or records that match the provided keyLists.\r\n   *\r\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\r\n   *\r\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\r\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\r\n   *\r\n   * @example <caption>Same as above</caption>\r\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\r\n   *\r\n   * @name Collection#getAll\r\n   * @method\r\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\r\n   * records matching each keyList will be retrieved. If no keyLists are\r\n   * provided, all records will be returned.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string} [opts.index] - Name of the secondary index to use in the\r\n   * query. If no index is specified, the main index is used.\r\n   * @return {Array} The result.\r\n   */\r\n  getAll (...args) {\r\n    return this.query().getAll(...args).run()\r\n  },\r\n\r\n  /**\r\n   * Limit the result.\r\n   *\r\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\r\n   *\r\n   * @example\r\n   * const posts = collection.limit(10)\r\n   *\r\n   * @name Collection#limit\r\n   * @method\r\n   * @param {number} num - The maximum number of records to keep in the result.\r\n   * @return {Array} The result.\r\n   */\r\n  limit (num) {\r\n    return this.query().limit(num).run()\r\n  },\r\n\r\n  /**\r\n   * Apply a mapping function to all records.\r\n   *\r\n   * @example\r\n   * const names = collection.map(function (user) {\r\n   *   return user.name\r\n   * })\r\n   *\r\n   * @name Collection#map\r\n   * @method\r\n   * @param {Function} mapFn - Mapping function.\r\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\r\n   * @return {Array} The result of the mapping.\r\n   */\r\n  map (cb, thisArg) {\r\n    const data = []\r\n    this.index.visitAll(function (value) {\r\n      data.push(cb.call(thisArg, value))\r\n    })\r\n    return data\r\n  },\r\n\r\n  /**\r\n   * Return the result of calling the specified function on each record in this\r\n   * collection's main index.\r\n   *\r\n   * @name Collection#mapCall\r\n   * @method\r\n   * @param {string} funcName - Name of function to call\r\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\r\n   * @return {Array} The result.\r\n   */\r\n  mapCall (funcName, ...args) {\r\n    const data = []\r\n    this.index.visitAll(function (record) {\r\n      data.push(record[funcName](...args))\r\n    })\r\n    return data\r\n  },\r\n\r\n  /**\r\n   * Return the primary key of the given, or if no record is provided, return the\r\n   * name of the field that holds the primary key of records in this Collection.\r\n   *\r\n   * @name Collection#recordId\r\n   * @method\r\n   * @param {(Object|Record)} [record] The record whose primary key is to be\r\n   * returned.\r\n   * @return {(string|number)} Primary key or name of field that holds primary\r\n   * key.\r\n   */\r\n  recordId (record) {\r\n    if (record) {\r\n      return get(record, this.recordId())\r\n    }\r\n    const self = this\r\n    return self.mapper ? self.mapper.idAttribute : self.idAttribute || 'id'\r\n  },\r\n\r\n  /**\r\n   * Create a new query to be executed against the contents of the collection.\r\n   * The result will be all or a subset of the contents of the collection.\r\n   *\r\n   * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\r\n   * collection.query()\r\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\r\n   *   .skip(10) // second page\r\n   *   .limit(10) // page size\r\n   *   .run()\r\n   *\r\n   * @name Collection#query\r\n   * @method\r\n   * @return {Query} New query object.\r\n   */\r\n  query () {\r\n    return new Query(this)\r\n  },\r\n\r\n  /**\r\n   * Reduce the data in the collection to a single value and return the result.\r\n   *\r\n   * @example\r\n   * const totalVotes = collection.reduce(function (prev, record) {\r\n   *   return prev + record.upVotes + record.downVotes\r\n   * }, 0)\r\n   *\r\n   * @name Collection#reduce\r\n   * @method\r\n   * @param {Function} cb - Reduction callback.\r\n   * @param {*} initialValue - Initial value of the reduction.\r\n   * @return {*} The result.\r\n   */\r\n  reduce (cb, initialValue) {\r\n    const data = this.getAll()\r\n    return data.reduce(cb, initialValue)\r\n  },\r\n\r\n  /**\r\n   * Remove the record with the given id from this Collection.\r\n   *\r\n   * @name Collection#remove\r\n   * @method\r\n   * @param {(string|number)} id - The primary key of the record to be removed.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @return {Object|Record} The removed record, if any.\r\n   */\r\n  remove (id, opts) {\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n    self.beforeRemove(id, opts)\r\n    const record = self.get(id)\r\n\r\n    // The record is in the collection, remove it\r\n    if (record) {\r\n      self.index.removeRecord(record)\r\n      forOwn(self.indexes, function (index, name) {\r\n        index.removeRecord(record)\r\n      })\r\n      if (record && isFunction(record.off)) {\r\n        record.off('all', self._onRecordEvent, self)\r\n        self.emit('remove', record)\r\n      }\r\n    }\r\n    return self.afterRemove(id, opts, record) || record\r\n  },\r\n\r\n  /**\r\n   * Remove the record selected by \"query\" from this collection.\r\n   *\r\n   * @name Collection#removeAll\r\n   * @method\r\n   * @param {Object} [query={}] - Selection query.\r\n   * @param {Object} [query.where] - Filtering criteria.\r\n   * @param {number} [query.skip] - Number to skip.\r\n   * @param {number} [query.limit] - Number to limit to.\r\n   * @param {Array} [query.orderBy] - Sorting criteria.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @return {(Object[]|Record[])} The removed records, if any.\r\n   */\r\n  removeAll (query, opts) {\r\n    const self = this\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n    self.beforeRemoveAll(query, opts)\r\n    const records = self.filter(query)\r\n\r\n    // Remove each selected record from the collection\r\n    records.forEach(function (item) {\r\n      self.remove(self.recordId(item))\r\n    })\r\n    return self.afterRemoveAll(query, opts, records) || records\r\n  },\r\n\r\n  /**\r\n   * Skip a number of results.\r\n   *\r\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\r\n   *\r\n   * @example\r\n   * const posts = collection.skip(10)\r\n   *\r\n   * @name Collection#skip\r\n   * @method\r\n   * @param {number} num - The number of records to skip.\r\n   * @return {Array} The result.\r\n   */\r\n  skip (num) {\r\n    return this.query().skip(num).run()\r\n  },\r\n\r\n  /**\r\n   * Return the plain JSON representation of all items in this collection.\r\n   * Assumes records in this collection have a toJSON method.\r\n   *\r\n   * @name Collection#toJSON\r\n   * @method\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\r\n   * to include in the representation.\r\n   * @return {Array} The records.\r\n   */\r\n  toJSON (opts) {\r\n    return this.mapCall('toJSON', opts)\r\n  },\r\n\r\n  /**\r\n   * Update a record's position in a single index of this collection. See\r\n   * {@link Collection#updateIndexes} to update a record's position in all\r\n   * indexes at once.\r\n   *\r\n   * @name Collection#updateIndex\r\n   * @method\r\n   * @param {Object} record - The record to update.\r\n   * @param {Object} [opts] - Configuration options.\r\n   * @param {string} [opts.index] The index in which to update the record's\r\n   * position. If you don't specify an index then the record will be updated\r\n   * in the main index.\r\n   */\r\n  updateIndex (record, opts) {\r\n    opts || (opts = {})\r\n    const index = opts.index ? this.indexes[opts.index] : this.index\r\n    index.updateRecord(record)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Collection#updateIndexes\r\n   * @method\r\n   * @param {Object} record - TODO\r\n   * @param {Object} [opts] - Configuration options.\r\n   */\r\n  updateIndexes (record) {\r\n    const self = this\r\n    self.index.updateRecord(record)\r\n    forOwn(self.indexes, function (index, name) {\r\n      index.updateRecord(record)\r\n    })\r\n  }\r\n})\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Collection#on\r\n * @method\r\n * @param {string} event TODO.\r\n * @param {Function} handler TODO\r\n */\r\n\r\n /**\r\n * TODO\r\n *\r\n * @name Collection#off\r\n * @method\r\n * @param {string} [event] TODO.\r\n * @param {Function} [handler] TODO\r\n */\r\n\r\n /**\r\n * TODO\r\n *\r\n * @name Collection#emit\r\n * @method\r\n * @param {string} event TODO.\r\n * @param {...*} [arg] TODO\r\n */\r\n\r\neventify(\r\n  Collection.prototype,\r\n  function () {\r\n    return this._listeners\r\n  },\r\n  function (value) {\r\n    this._listeners = value\r\n  }\r\n)\r\n","import {\r\n  fillIn,\r\n  isFunction,\r\n  isString\r\n} from './utils'\r\n\r\nexport const belongsToType = 'belongsTo'\r\nexport const hasManyType = 'hasMany'\r\nexport const hasOneType = 'hasOne'\r\n\r\nfunction Relation (related, opts) {\r\n  const self = this\r\n\r\n  opts || (opts = {})\r\n\r\n  const localField = opts.localField\r\n  if (!localField) {\r\n    throw new Error('localField is required')\r\n  }\r\n\r\n  const foreignKey = opts.foreignKey || opts.localKey\r\n  if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\r\n    throw new Error('foreignKey is required')\r\n  }\r\n  const localKeys = opts.localKeys\r\n  const foreignKeys = opts.foreignKeys\r\n  if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\r\n    throw new Error('one of (foreignKey, localKeys, foreignKeys) is required')\r\n  }\r\n\r\n  if (isString(related)) {\r\n    opts.relation = related\r\n  } else if (related) {\r\n    opts.relation = related.name\r\n  }\r\n\r\n  if (!related || (isString(related) && !isFunction(opts.getRelation))) {\r\n    throw new Error('you must provide a reference to the related mapper!')\r\n  }\r\n\r\n  fillIn(self, opts)\r\n}\r\n\r\nconst relatedTo = function (mapper, related, opts) {\r\n  opts || (opts = {})\r\n  if (!opts.type) {\r\n    throw new Error('must specify relation type!')\r\n  }\r\n  opts.mapper = mapper\r\n  opts.name = mapper.name\r\n  const relation = new Relation(related, opts)\r\n\r\n  mapper.relationList || (mapper.relationList = [])\r\n  mapper.relationFields || (mapper.relationFields = [])\r\n  mapper.relationList.push(relation)\r\n  mapper.relationFields.push(relation.localField)\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name module:js-data.belongsTo\r\n * @method\r\n * @param {Mapper} related The relation the target belongs to.\r\n * @param {Object} opts Configuration options.\r\n * @param {string} opts.foreignKey The field that holds the primary key of the\r\n * related record.\r\n * @param {string} opts.localField The field that holds a reference to the\r\n * related record object.\r\n * @return {Function} Invocation function, which accepts the target as the only\r\n * parameter.\r\n */\r\nexport const belongsTo = function (related, opts) {\r\n  opts || (opts = {})\r\n  opts.type = belongsToType\r\n  return function (target) {\r\n    relatedTo(target, related, opts)\r\n  }\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name module:js-data.hasMany\r\n * @method\r\n * @param {Mapper} related The relation of which the target has many.\r\n * @param {Object} opts Configuration options.\r\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\r\n * related record.\r\n * @param {string} opts.localField The field that holds a reference to the\r\n * related record object.\r\n * @return {Function} Invocation function, which accepts the target as the only\r\n * parameter.\r\n */\r\nexport const hasMany = function (related, opts) {\r\n  opts || (opts = {})\r\n  opts.type = hasManyType\r\n  return function (target) {\r\n    relatedTo(target, related, opts)\r\n  }\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name module:js-data.hasOne\r\n * @method\r\n * @param {Mapper} related The relation of which the target has one.\r\n * @param {Object} opts Configuration options.\r\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\r\n * related record.\r\n * @param {string} opts.localField The field that holds a reference to the\r\n * related record object.\r\n * @return {Function} Invocation function, which accepts the target as the only\r\n * parameter.\r\n */\r\nexport const hasOne = function (related, opts) {\r\n  opts || (opts = {})\r\n  opts.type = hasOneType\r\n  return function (target) {\r\n    relatedTo(target, related, opts)\r\n  }\r\n}\r\n","import {\r\n  _,\r\n  addHiddenPropsToTarget,\r\n  classCallCheck,\r\n  copy,\r\n  eventify,\r\n  extend,\r\n  fillIn,\r\n  forOwn,\r\n  get,\r\n  isFunction,\r\n  isObject,\r\n  isSorN,\r\n  isString,\r\n  resolve,\r\n  set\r\n} from './utils'\r\n\r\n/**\r\n * js-data's Record class.\r\n *\r\n * ```javascript\r\n * import {Record} from 'js-data'\r\n * ```\r\n *\r\n * @class Record\r\n * @param {Object} [props] The initial properties of the new Record instance.\r\n * @param {Object} [opts] Configuration options.\r\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\r\n * initial properties.\r\n */\r\nexport default function Record (props, opts) {\r\n  const self = this\r\n  classCallCheck(self, Record)\r\n\r\n  props || (props = {})\r\n  opts || (opts = {})\r\n  const _props = {}\r\n  Object.defineProperties(self, {\r\n    _get: {\r\n      value (key) {\r\n        return get(_props, key)\r\n      }\r\n    },\r\n    _set: {\r\n      value (key, value) {\r\n        return set(_props, key, value)\r\n      }\r\n    }\r\n  })\r\n  self._set('creating', true)\r\n  if (opts.noValidate) {\r\n    self._set('noValidate', true)\r\n  }\r\n  fillIn(self, props)\r\n  self._set('creating') // unset\r\n  self._set('changes', {})\r\n  self._set('noValidate') // unset\r\n  self._set('previous', copy(props))\r\n}\r\n\r\n/**\r\n * Create a Record subclass.\r\n *\r\n * ```javascript\r\n * var MyRecord = Record.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var record = new MyRecord()\r\n * record.foo() // \"bar\"\r\n * ```\r\n *\r\n * @name Record.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of Record.\r\n */\r\nRecord.extend = extend\r\n\r\naddHiddenPropsToTarget(Record.prototype, {\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#_mapper\r\n   * @method\r\n   * @ignore\r\n   */\r\n  _mapper () {\r\n    if (!this.constructor.Mapper) {\r\n      throw new Error('This RecordClass has no Mapper!')\r\n    }\r\n    return this.constructor.Mapper\r\n  },\r\n\r\n  /**\r\n   * Return the value at the given path for this instance.\r\n   *\r\n   * @name Record#get\r\n   * @method\r\n   * @param {string} key - Path of value to retrieve.\r\n   * @return {*} Value at path.\r\n   */\r\n  get: function (key) {\r\n    return get(this, key)\r\n  },\r\n\r\n  /**\r\n   * Set the value for a given key, or the values for the given keys if \"key\" is\r\n   * an object.\r\n   *\r\n   * @name Record#set\r\n   * @method\r\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\r\n   * @param {*} [value] - Value to set for the given key.\r\n   * @param {Object} [opts] - Optional configuration.\r\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\r\n   */\r\n  set: function (key, value, opts) {\r\n    const self = this\r\n    if (isObject(key)) {\r\n      opts = value\r\n    }\r\n    opts || (opts = {})\r\n    if (opts.silent) {\r\n      self._set('silent', true)\r\n    }\r\n    set(self, key, value)\r\n    if (!self._get('eventId')) {\r\n      self._set('silent') // unset\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Unset the value for a given key.\r\n   *\r\n   * @name Record#unset\r\n   * @method\r\n   * @param {string} key - Key to unset.\r\n   * @param {Object} [opts] - Optional configuration.\r\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\r\n   */\r\n  unset (key, opts) {\r\n    this.set(key, undefined, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#hashCode\r\n   * @method\r\n   */\r\n  hashCode () {\r\n    const self = this\r\n    return get(self, self._mapper().idAttribute)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#changes\r\n   * @method\r\n   * @param {string} [key] TODO\r\n   */\r\n  changes (key) {\r\n    const self = this\r\n    if (key) {\r\n      return self._get(`changes.${key}`)\r\n    }\r\n    return self._get('changes')\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#hasChanges\r\n   * @method\r\n   */\r\n  hasChanges () {\r\n    return !!(this._get('changed') || []).length\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#commit\r\n   * @method\r\n   */\r\n  commit () {\r\n    const self = this\r\n    self._set('changed') // unset\r\n    self._set('changes', {})\r\n    self._set('previous', copy(self))\r\n    return self\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#previous\r\n   * @method\r\n   * @param {string} [key] TODO\r\n   */\r\n  previous (key) {\r\n    const self = this\r\n    if (key) {\r\n      return self._get(`previous.${key}`)\r\n    }\r\n    return self._get('previous')\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#revert\r\n   * @method\r\n   * @param {Object} [opts] Configuration options.\r\n   */\r\n  revert (opts) {\r\n    const self = this\r\n    const previous = self._get('previous') || {}\r\n    opts || (opts = {})\r\n    opts.preserve || (opts.preserve = [])\r\n    forOwn(self, (value, key) => {\r\n      if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\r\n        delete self[key]\r\n      }\r\n    })\r\n    forOwn(previous, (value, key) => {\r\n      if (opts.preserve.indexOf(key) === -1) {\r\n        self[key] = value\r\n      }\r\n    })\r\n    self.commit()\r\n    return self\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#schema\r\n   * @method\r\n   * @param {string} [key] TODO\r\n   */\r\n  schema (key) {\r\n    let _schema = this._mapper().schema\r\n    return key ? _schema[key] : _schema\r\n  },\r\n\r\n  // validate (obj, value) {\r\n  //   let errors = []\r\n  //   let _schema = this.schema()\r\n  //   if (!obj) {\r\n  //     obj = this\r\n  //   } else if (utils.isString(obj)) {\r\n  //     const prop = _schema[obj]\r\n  //     if (prop) {\r\n  //       errors = validate.validate(prop, value) || []\r\n  //     }\r\n  //   } else {\r\n  //     utils.forOwn(_schema, function (prop, key) {\r\n  //       errors = errors.concat(validate.validate(prop, utils.get(obj, key)) || [])\r\n  //     })\r\n  //   }\r\n  //   return errors.length ? errors : undefined\r\n  // },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#create\r\n   * @method\r\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\r\n   */\r\n  create (opts) {\r\n    return this._mapper().create(this, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#beforeSave\r\n   * @method\r\n   * @param {Object} opts TODO\r\n   */\r\n  beforeSave () {},\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#save\r\n   * @method\r\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\r\n   */\r\n  save (opts) {\r\n    let op, adapter\r\n    const self = this\r\n    const Mapper = self._mapper()\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Model's configuration\r\n    _(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeSave lifecycle hook\r\n    op = opts.op = 'beforeSave'\r\n    return resolve(self[op](opts)).then(function () {\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'save'\r\n      Mapper.dbg(op, self, opts)\r\n      return self.getAdapter(adapter)[op](Mapper, self, opts)\r\n    }).then(function (data) {\r\n      // afterSave lifecycle hook\r\n      op = opts.op = 'afterSave'\r\n      return resolve(self[op](data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        if (opts.raw) {\r\n          self.set(data.data)\r\n          data.data = self\r\n        } else {\r\n          self.set(data)\r\n        }\r\n        return Mapper.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#afterSave\r\n   * @method\r\n   * @param {Object} opts TODO\r\n   */\r\n  afterSave () {},\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#beforeLoadRelations\r\n   * @method\r\n   * @param {string[]} relations TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  beforeLoadRelations () {},\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#loadRelations\r\n   * @method\r\n   * @param {string[]} [relations] TODO\r\n   * @param {Object} [opts] TODO\r\n   */\r\n  loadRelations (relations, opts) {\r\n    let op\r\n    const self = this\r\n    const Mapper = self._mapper()\r\n    const relationList = Mapper.relationList || []\r\n\r\n    // Default values for arguments\r\n    relations || (relations = [])\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Model's configuration\r\n    _(Mapper, opts)\r\n    opts.adapter = Mapper.getAdapterName(opts)\r\n\r\n    // beforeLoadRelations lifecycle hook\r\n    op = opts.op = 'beforeLoadRelations'\r\n    return resolve(self[op](relations, opts)).then(function () {\r\n      if (isString(relations)) {\r\n        relations = [relations]\r\n      }\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'loadRelations'\r\n      Mapper.dbg(op, self, relations, opts)\r\n      return Promise.all(relationList.map(function (def) {\r\n        if (isFunction(def.load)) {\r\n          return def.load(Mapper, def, self, opts)\r\n        }\r\n        let task\r\n        if (def.type === 'hasMany' && def.foreignKey) {\r\n          // hasMany\r\n          task = def.getRelation().findAll({\r\n            [def.foreignKey]: get(self, Mapper.idAttribute)\r\n          }, opts)\r\n        } else if (def.foreignKey) {\r\n          // belongsTo or hasOne\r\n          const key = get(self, def.foreignKey)\r\n          if (isSorN(key)) {\r\n            task = def.getRelation().find(key, opts)\r\n          }\r\n        } else if (def.localKeys) {\r\n          // hasMany\r\n          task = def.getRelation().findAll({\r\n            [def.getRelation().idAttribute]: {\r\n              'in': get(self, def.localKeys)\r\n            }\r\n          }, opts)\r\n        } else if (def.foreignKeys) {\r\n          // hasMany\r\n          task = def.getRelation().findAll({\r\n            [def.getRelation().idAttribute]: {\r\n              'contains': get(self, Mapper.idAttribute)\r\n            }\r\n          }, opts)\r\n        }\r\n        if (task) {\r\n          task = task.then(function (data) {\r\n            if (opts.raw) {\r\n              data = data.data\r\n            }\r\n            set(self, def.localField, def.type === 'hasOne' ? (data.length ? data[0] : undefined) : data)\r\n          })\r\n        }\r\n        return task\r\n      }))\r\n    }).then(function () {\r\n      // afterLoadRelations lifecycle hook\r\n      op = opts.op = 'afterLoadRelations'\r\n      return resolve(self[op](relations, opts)).then(function () {\r\n        return self\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#afterLoadRelations\r\n   * @method\r\n   * @param {string[]} relations TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  afterLoadRelations () {},\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Record#destroy\r\n   * @method\r\n   * @param {Object} [opts] Configuration options. @see {@link Model.destroy}.\r\n   */\r\n  destroy (opts) {\r\n    // TODO: move actual destroy logic here\r\n    const Mapper = this._mapper()\r\n    return Mapper.destroy(get(this, Mapper.idAttribute), opts)\r\n  },\r\n\r\n  // TODO: move logic for single-item async operations onto the instance.\r\n\r\n  toJSON (opts) {\r\n    return this._mapper().toJSON(this, opts)\r\n  }\r\n})\r\n\r\n/**\r\n * Register a new event listener on this Record.\r\n *\r\n * @name Record#on\r\n * @method\r\n */\r\n\r\n/**\r\n * Remove an event listener from this Record.\r\n *\r\n * @name Record#off\r\n * @method\r\n */\r\n\r\n/**\r\n * Trigger an event on this Record.\r\n *\r\n * @name Record#emit\r\n * @method\r\n * @param {string} event Name of event to emit.\r\n */\r\n\r\n/**\r\n * Allow records to emit events.\r\n *\r\n * An record's registered listeners are stored in the record's private data.\r\n */\r\neventify(\r\n  Record.prototype,\r\n  function () {\r\n    return this._get('events')\r\n  },\r\n  function (value) {\r\n    this._set('events', value)\r\n  }\r\n)\r\n","import {\r\n  copy,\r\n  extend,\r\n  fillIn,\r\n  forOwn,\r\n  get,\r\n  isArray,\r\n  isBoolean,\r\n  isFunction,\r\n  isInteger,\r\n  isNumber,\r\n  isNull,\r\n  isObject,\r\n  isString,\r\n  isUndefined\r\n} from './utils'\r\n\r\n/**\r\n * js-data's Schema class.\r\n *\r\n * ```javascript\r\n * import {Schema} from 'js-data'\r\n * ```\r\n *\r\n * @class Schema\r\n * @param {Object} definition Schema definition according to json-schema.org\r\n */\r\nexport default function Schema (definition) {\r\n  // const self = this\r\n  definition || (definition = {})\r\n  // TODO: schema validation\r\n  fillIn(this, definition)\r\n\r\n  // TODO: rework this to make sure all possible keywords are converted\r\n  // if (definition.properties) {\r\n  //   forOwn(definition.properties, function (_definition, prop) {\r\n  //     definition.properties[prop] = new Schema(_definition)\r\n  //   })\r\n  // }\r\n}\r\n\r\n/**\r\n * @name Schema.extend\r\n * @method\r\n */\r\nSchema.extend = extend\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Schema.types\r\n * @type {Object}\r\n */\r\nconst types = {\r\n  array: isArray,\r\n  boolean: isBoolean,\r\n  integer: isInteger,\r\n  'null': isNull,\r\n  number: isNumber,\r\n  object: isObject,\r\n  string: isString\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Schema.typeGroupValidators\r\n * @type {Object}\r\n */\r\nconst typeGroupValidators = {}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Schema.validationKeywords\r\n * @type {Object}\r\n */\r\nconst validationKeywords = {}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst segmentToString = function (segment, prev) {\r\n  let str = ''\r\n  if (segment) {\r\n    if (isNumber(segment)) {\r\n      str += `[${segment}]`\r\n    } else if (prev) {\r\n      str += `.${segment}`\r\n    } else {\r\n      str += `${segment}`\r\n    }\r\n  }\r\n  return str\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst makePath = function (opts) {\r\n  opts || (opts = {})\r\n  let path = ''\r\n  const segments = opts.path || []\r\n  segments.forEach(function (segment) {\r\n    path += segmentToString(segment, path)\r\n  })\r\n  path += segmentToString(opts.prop, path)\r\n  return path\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst makeError = function (actual, expected, opts) {\r\n  return {\r\n    expected,\r\n    actual: '' + actual,\r\n    path: makePath(opts)\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst addError = function (actual, expected, opts, errors) {\r\n  errors.push(makeError(actual, expected, opts))\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst maxLengthCommon = function (keyword, value, schema, opts) {\r\n  const max = schema[keyword]\r\n  if (value.length > max) {\r\n    return makeError(value.length, `length no more than ${max}`, opts)\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst minLengthCommon = function (keyword, value, schema, opts) {\r\n  const min = schema[keyword]\r\n  if (value.length < min) {\r\n    return makeError(value.length, `length no less than ${min}`, opts)\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst validateKeyword = function (op, value, schema, opts) {\r\n  return !isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst runOps = function (ops, value, schema, opts) {\r\n  let errors = []\r\n  ops.forEach(function (op) {\r\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\r\n  })\r\n  return errors.length ? errors : undefined\r\n}\r\n\r\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\r\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\r\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\r\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\r\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\r\n\r\n/**\r\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\r\n * @ignore\r\n */\r\nconst validateAny = function (value, schema, opts) {\r\n  return runOps(ANY_OPS, value, schema, opts)\r\n}\r\n\r\n/**\r\n * TODO\r\n *\r\n * @name Schema.validate\r\n * @method\r\n * @param {*} value TODO\r\n * @param {Object} [schema] TODO\r\n * @param {Object} [opts] Configuration options.\r\n */\r\nexport const validate = function (value, schema, opts) {\r\n  let errors = []\r\n  opts || (opts = {})\r\n  let shouldPop\r\n  let prevProp = opts.prop\r\n  if (isUndefined(schema)) {\r\n    return\r\n  }\r\n  if (!isObject(schema)) {\r\n    throw new Error(`Invalid schema at path: \"${opts.path}\"`)\r\n  }\r\n  if (isUndefined(opts.path)) {\r\n    opts.path = []\r\n  }\r\n  // Track our location as we recurse\r\n  if (!isUndefined(opts.prop)) {\r\n    shouldPop = true\r\n    opts.path.push(opts.prop)\r\n    opts.prop = undefined\r\n  }\r\n  // Validate against parent schema\r\n  if (schema['extends']) {\r\n    // opts.path = path\r\n    // opts.prop = prop\r\n    if (isFunction(schema['extends'].validate)) {\r\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\r\n    } else {\r\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\r\n    }\r\n  }\r\n  if (isUndefined(value)) {\r\n    // Check if property is required\r\n    if (schema.required === true) {\r\n      addError(value, 'a value', opts, errors)\r\n    }\r\n    if (shouldPop) {\r\n      opts.path.pop()\r\n      opts.prop = prevProp\r\n    }\r\n    return errors.length ? errors : undefined\r\n  }\r\n  errors = errors.concat(validateAny(value, schema, opts) || [])\r\n  if (shouldPop) {\r\n    opts.path.pop()\r\n    opts.prop = prevProp\r\n  }\r\n  return errors.length ? errors : undefined\r\n}\r\n\r\nSchema.types = types\r\nSchema.typeGroupValidators = typeGroupValidators\r\nSchema.validationKeywords = validationKeywords\r\nSchema.validate = validate\r\n\r\n/**\r\n * Validate the provided value against this schema.\r\n *\r\n * @name Schema#validate\r\n * @method\r\n * @param {*} value Value to validate.\r\n * @param {Object} [opts] Configuration options.\r\n * @return {(array|undefined)} Array of errors or `undefined` if valid.\r\n */\r\nSchema.prototype.validate = function (value, opts) {\r\n  return Schema.validate(value, this, opts)\r\n}\r\n\r\nfillIn(validationKeywords, {\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\r\n   *\r\n   * @name Schema.validationKeywords.allOf\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  allOf (value, schema, opts) {\r\n    let allErrors = []\r\n    schema.allOf.forEach(function (_schema) {\r\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\r\n    })\r\n    return allErrors.length ? undefined : allErrors\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\r\n   *\r\n   * @name Schema.validationKeywords.anyOf\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  anyOf (value, schema, opts) {\r\n    let validated = false\r\n    let allErrors = []\r\n    schema.anyOf.forEach(function (_schema) {\r\n      const errors = validate(value, _schema, opts)\r\n      if (errors) {\r\n        allErrors = allErrors.concat(errors)\r\n      } else {\r\n        validated = true\r\n      }\r\n    })\r\n    return validated ? undefined : allErrors\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\r\n   *\r\n   * @name Schema.validationKeywords.dependencies\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  dependencies (value, schema, opts) {\r\n    // TODO\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\r\n   *\r\n   * @name Schema.validationKeywords.enum\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  enum (value, schema, opts) {\r\n    const possibleValues = schema['enum']\r\n    if (possibleValues.indexOf(value) === -1) {\r\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\r\n   *\r\n   * @name Schema.validationKeywords.items\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  items (value, schema, opts) {\r\n    opts || (opts = {})\r\n    // TODO: additionalItems\r\n    let items = schema.items\r\n    let errors = []\r\n    const checkingTuple = isArray(items)\r\n    const length = value.length\r\n    for (var prop = 0; prop < length; prop++) {\r\n      if (checkingTuple) {\r\n        // Validating a tuple, instead of just checking each item against the\r\n        // same schema\r\n        items = schema.items[prop]\r\n      }\r\n      opts.prop = prop\r\n      errors = errors.concat(validate(value[prop], items, opts) || [])\r\n    }\r\n    return errors.length ? errors : undefined\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\r\n   *\r\n   * @name Schema.validationKeywords.maximum\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  maximum (value, schema, opts) {\r\n    // Must be a number\r\n    const maximum = schema.maximum\r\n    // Must be a boolean\r\n    // Depends on maximum\r\n    // default: false\r\n    const exclusiveMaximum = schema.exclusiveMaximum\r\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\r\n      // TODO: Account for value of exclusiveMaximum in messaging\r\n      return makeError(value, `no more than ${maximum}`, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\r\n   *\r\n   * @name Schema.validationKeywords.maxItems\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  maxItems (value, schema, opts) {\r\n    return maxLengthCommon('maxItems', value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\r\n   *\r\n   * @name Schema.validationKeywords.maxLength\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  maxLength (value, schema, opts) {\r\n    return maxLengthCommon('maxLength', value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\r\n   *\r\n   * @name Schema.validationKeywords.maxProperties\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  maxProperties (value, schema, opts) {\r\n    const maxProperties = schema.maxProperties\r\n    const length = Object.keys(value).length\r\n    if (length > maxProperties) {\r\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\r\n   *\r\n   * @name Schema.validationKeywords.minimum\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  minimum (value, schema, opts) {\r\n    // Must be a number\r\n    const minimum = schema.minimum\r\n    // Must be a boolean\r\n    // Depends on minimum\r\n    // default: false\r\n    const exclusiveMinimum = schema.exclusiveMinimum\r\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\r\n      // TODO: Account for value of exclusiveMinimum in messaging\r\n      return makeError(value, `no less than ${minimum}`, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\r\n   *\r\n   * @name Schema.validationKeywords.minItems\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  minItems (value, schema, opts) {\r\n    return minLengthCommon('minItems', value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\r\n   *\r\n   * @name Schema.validationKeywords.minLength\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  minLength (value, schema, opts) {\r\n    return minLengthCommon('minLength', value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\r\n   *\r\n   * @name Schema.validationKeywords.minProperties\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  minProperties (value, schema, opts) {\r\n    const minProperties = schema.minProperties\r\n    const length = Object.keys(value).length\r\n    if (length < minProperties) {\r\n      return makeError(length, `no more than ${minProperties} properties`, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\r\n   *\r\n   * @name Schema.validationKeywords.multipleOf\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  multipleOf (value, schema, opts) {\r\n    // TODO\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\r\n   *\r\n   * @name Schema.validationKeywords.not\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  not (value, schema, opts) {\r\n    if (!validate(value, schema.not, opts)) {\r\n      // TODO: better messaging\r\n      return makeError('succeeded', 'should have failed', opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\r\n   *\r\n   * @name Schema.validationKeywords.oneOf\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  oneOf (value, schema, opts) {\r\n    let validated = false\r\n    let allErrors = []\r\n    schema.oneOf.forEach(function (_schema) {\r\n      const errors = validate(value, _schema, opts)\r\n      if (errors) {\r\n        allErrors = allErrors.concat(errors)\r\n      } else if (validated) {\r\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\r\n        validated = false\r\n        return false\r\n      } else {\r\n        validated = true\r\n      }\r\n    })\r\n    return validated ? undefined : allErrors\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\r\n   *\r\n   * @name Schema.validationKeywords.pattern\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  pattern (value, schema, opts) {\r\n    const pattern = schema.pattern\r\n    if (isString(value) && !value.match(pattern)) {\r\n      return makeError(value, pattern, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\r\n   *\r\n   * @name Schema.validationKeywords.properties\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  properties (value, schema, opts) {\r\n    opts || (opts = {})\r\n    // Can be a boolean or an object\r\n    // Technically the default is an \"empty schema\", but here \"true\" is\r\n    // functionally the same\r\n    const additionalProperties = isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\r\n    // \"s\": The property set of the instance to validate.\r\n    const toValidate = {}\r\n    // \"p\": The property set from \"properties\".\r\n    // Default is an object\r\n    const properties = schema.properties || {}\r\n    // \"pp\": The property set from \"patternProperties\".\r\n    // Default is an object\r\n    const patternProperties = schema.patternProperties || {}\r\n    let errors = []\r\n\r\n    // Collect set \"s\"\r\n    forOwn(value, function (_value, prop) {\r\n      toValidate[prop] = undefined\r\n    })\r\n    // Remove from \"s\" all elements of \"p\", if any.\r\n    forOwn(properties || {}, function (_schema, prop) {\r\n      if (isUndefined(value[prop]) && !isUndefined(_schema['default'])) {\r\n        value[prop] = copy(_schema['default'])\r\n      }\r\n      opts.prop = prop\r\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\r\n      delete toValidate[prop]\r\n    })\r\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\r\n    // matches.\r\n    forOwn(patternProperties, function (_schema, pattern) {\r\n      forOwn(toValidate, function (undef, prop) {\r\n        if (prop.match(pattern)) {\r\n          opts.prop = prop\r\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\r\n          delete toValidate[prop]\r\n        }\r\n      })\r\n    })\r\n    const keys = Object.keys(toValidate)\r\n    // If \"s\" is not empty, validation fails\r\n    if (additionalProperties === false) {\r\n      if (keys.length) {\r\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\r\n      }\r\n    } else if (isObject(additionalProperties)) {\r\n      // Otherwise, validate according to provided schema\r\n      keys.forEach(function (prop) {\r\n        opts.prop = prop\r\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\r\n      })\r\n    }\r\n    return errors.length ? errors : undefined\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\r\n   *\r\n   * @name Schema.validationKeywords.required\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  required (value, schema, opts) {\r\n    const required = schema.required\r\n    let errors = []\r\n    if (!opts.existingOnly) {\r\n      required.forEach(function (prop) {\r\n        if (isUndefined(get(value, prop))) {\r\n          const prevProp = opts.prop\r\n          opts.prop = prop\r\n          addError(undefined, 'a value', opts, errors)\r\n          opts.prop = prevProp\r\n        }\r\n      })\r\n    }\r\n    return errors.length ? errors : undefined\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\r\n   *\r\n   * @name Schema.validationKeywords.type\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  type (value, schema, opts) {\r\n    let type = schema.type\r\n    let validType\r\n    // Can be one of several types\r\n    if (isString(type)) {\r\n      type = [type]\r\n    }\r\n    // Try to match the value against an expected type\r\n    type.forEach(function (_type) {\r\n      // TODO: throw an error if type is not defined\r\n      if (types[_type](value, schema, opts)) {\r\n        // Matched a type\r\n        validType = _type\r\n        return false\r\n      }\r\n    })\r\n    // Value did not match any expected type\r\n    if (!validType) {\r\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\r\n    }\r\n    // Run keyword validators for matched type\r\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\r\n    const validator = typeGroupValidators[validType]\r\n    if (validator) {\r\n      return validator(value, schema, opts)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\r\n   *\r\n   * @name Schema.validationKeywords.uniqueItems\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  uniqueItems (value, schema, opts) {\r\n    if (value && value.length && schema.uniqueItems) {\r\n      const length = value.length\r\n      let item, i, j\r\n      // Check n - 1 items\r\n      for (i = length - 1; i > 0; i--) {\r\n        item = value[i]\r\n        // Only compare against unchecked items\r\n        for (j = i - 1; j >= 0; j--) {\r\n          // Found a duplicate\r\n          if (item === value[j]) {\r\n            return makeError(item, 'no duplicates', opts)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nfillIn(typeGroupValidators, {\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Schema.typeGroupValidators.array\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  array: function (value, schema, opts) {\r\n    return runOps(ARRAY_OPS, value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Schema.typeGroupValidators.integer\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  integer: function (value, schema, opts) {\r\n    // Additional validations for numerics are the same\r\n    return typeGroupValidators.numeric(value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Schema.typeGroupValidators.number\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  number: function (value, schema, opts) {\r\n    // Additional validations for numerics are the same\r\n    return typeGroupValidators.numeric(value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\r\n   *\r\n   * @name Schema.typeGroupValidators.numeric\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  numeric: function (value, schema, opts) {\r\n    return runOps(NUMERIC_OPS, value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\r\n   *\r\n   * @name Schema.typeGroupValidators.object\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  object: function (value, schema, opts) {\r\n    return runOps(OBJECT_OPS, value, schema, opts)\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\r\n   *\r\n   * @name Schema.typeGroupValidators.string\r\n   * @method\r\n   * @param {*} value TODO\r\n   * @param {Object} schema TODO\r\n   * @param {Object} opts TODO\r\n   */\r\n  string: function (value, schema, opts) {\r\n    return runOps(STRING_OPS, value, schema, opts)\r\n  }\r\n})\r\n","import * as utils from './utils'\r\nimport {\r\n  belongsTo,\r\n  hasMany,\r\n  hasOne\r\n} from './decorators'\r\nimport Record from './Record'\r\nimport Schema from './Schema'\r\n\r\nconst {\r\n  resolve\r\n} = utils\r\n\r\nconst notify = function (...args) {\r\n  const self = this\r\n  const opts = args.pop()\r\n  self.dbg(opts.op, ...args)\r\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\r\n    setTimeout(() => {\r\n      self.emit(opts.op, ...args)\r\n    })\r\n  }\r\n}\r\n\r\nconst MAPPER_DEFAULTS = {\r\n  /**\r\n   * Hash of registered adapters. Don't modify. Use {@link Mapper#registerAdapter}.\r\n   *\r\n   * @name Mapper#_adapters\r\n   * @private\r\n   */\r\n  _adapters: null,\r\n\r\n  /**\r\n   * Hash of registered listeners. Don't modify. Use {@link Mapper#on} and\r\n   * {@link Mapper#off}.\r\n   *\r\n   * @name Mapper#_listeners\r\n   * @private\r\n   */\r\n  _listeners: null,\r\n\r\n  /**\r\n   * The name of the registered adapter that this Mapper should used by default.\r\n   *\r\n   * @name Mapper#defaultAdapter\r\n   * @type {string}\r\n   * @default \"http\"\r\n   */\r\n  defaultAdapter: 'http',\r\n\r\n  /**\r\n   * Whether to enable debug-level logs.\r\n   *\r\n   * @name Mapper#debug\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  debug: false,\r\n\r\n  /**\r\n   * The field used as the unique identifier on records handled by this Mapper.\r\n   *\r\n   * @name Mapper#idAttribute\r\n   * @type {string}\r\n   * @default id\r\n   */\r\n  idAttribute: 'id',\r\n\r\n  /**\r\n   * Minimum amount of meta information required to start operating against a\r\n   * resource.\r\n   *\r\n   * @name Mapper#name\r\n   * @type {string}\r\n   */\r\n  name: null,\r\n\r\n  /**\r\n   * Whether this Mapper should emit operational events.\r\n   *\r\n   * @name Mapper#notify\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  notify: true,\r\n\r\n  /**\r\n   * Whether {@link Mapper#create}, {@link Mapper#createMany}, {@link Mapper#save},\r\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\r\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy}, and\r\n   * {@link Mapper#destroyAll} should return a raw result object that contains\r\n   * both the instance data returned by the adapter _and_ metadata about the\r\n   * operation.\r\n   *\r\n   * The default is to NOT return the result object, and instead return just the\r\n   * instance data.\r\n   *\r\n   * @name Mapper#raw\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  raw: false,\r\n\r\n  /**\r\n   * Set the `false` to force the Mapper to work with POJO objects only.\r\n   *\r\n   * ```javascript\r\n   * import {Mapper, Record} from 'js-data'\r\n   * const UserMapper = new Mapper({ RecordClass: false })\r\n   * UserMapper.RecordClass // false\r\n   * const user = UserMapper#createRecord()\r\n   * user instanceof Record // false\r\n   * ```\r\n   *\r\n   * Set to a custom class to have records wrapped in your custom class.\r\n   *\r\n   * ```javascript\r\n   * import {Mapper, Record} from 'js-data'\r\n   *  // Custom class\r\n   * class User {\r\n   *   constructor (props = {}) {\r\n   *     for (var key in props) {\r\n   *       if (props.hasOwnProperty(key)) {\r\n   *         this[key] = props[key]\r\n   *       }\r\n   *     }\r\n   *   }\r\n   * }\r\n   * const UserMapper = new Mapper({ RecordClass: User })\r\n   * UserMapper.RecordClass // function User() {}\r\n   * const user = UserMapper#createRecord()\r\n   * user instanceof Record // false\r\n   * user instanceof User // true\r\n   * ```\r\n   *\r\n   * Extend the {@link Record} class.\r\n   *\r\n   * ```javascript\r\n   * import {Mapper, Record} from 'js-data'\r\n   *  // Custom class\r\n   * class User extends Record {\r\n   *   constructor () {\r\n   *     super(props)\r\n   *   }\r\n   * }\r\n   * const UserMapper = new Mapper({ RecordClass: User })\r\n   * UserMapper.RecordClass // function User() {}\r\n   * const user = UserMapper#createRecord()\r\n   * user instanceof Record // true\r\n   * user instanceof User // true\r\n   * ```\r\n   *\r\n   * @name Mapper#RecordClass\r\n   * @default {@link Record}\r\n   */\r\n  RecordClass: undefined,\r\n\r\n  schema: null,\r\n\r\n  /**\r\n   * Whether {@link Mapper#create} and {@link Mapper#createMany} should instead\r\n   * call {@link Mapper#update} and {@link Mapper#updateMany} if the provided\r\n   * record(s) already contain a primary key.\r\n   *\r\n   * @name Mapper#upsert\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  upsert: true\r\n}\r\n\r\n/**\r\n * ```javascript\r\n * import {Mapper} from 'js-data'\r\n * ```\r\n *\r\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\r\n * meta information about a resource, a Mapper can perform generic CRUD\r\n * operations against that resource. Apart from its configuration, a Mapper is\r\n * stateless. The particulars of various persistence layers has been abstracted\r\n * into adapters, which a Mapper uses to perform its operations.\r\n *\r\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\r\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\r\n * Data Mapper moves data between [in-memory object instances][record] and a\r\n * relational or document-based database. JSData's Mapper can work with any\r\n * persistence layer you can write an adapter for.\r\n *\r\n * _(\"Model\" is a heavily overloaded term and is avoided in this documentation\r\n * to prevent confusion.)_\r\n *\r\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\r\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\r\n * [book]: http://martinfowler.com/books/eaa.html\r\n * [record]: Record.html\r\n *\r\n * @class Mapper\r\n * @param {Object} [opts] Configuration options.\r\n */\r\nexport default function Mapper (opts) {\r\n  const self = this\r\n  utils.classCallCheck(self, Mapper)\r\n\r\n  opts || (opts = {})\r\n  utils.fillIn(self, opts)\r\n  utils.fillIn(self, utils.copy(MAPPER_DEFAULTS))\r\n\r\n  if (!self.name) {\r\n    throw new Error('mapper cannot function without a name!')\r\n  }\r\n\r\n  self._adapters || (self._adapters = {})\r\n  self._listeners || (self._listeners = {})\r\n\r\n  if (!(self.schema instanceof Schema)) {\r\n    self.schema = new Schema(self.schema || {})\r\n  }\r\n\r\n  if (utils.isUndefined(self.RecordClass)) {\r\n    self.RecordClass = Record.extend()\r\n  }\r\n  if (self.RecordClass) {\r\n    self.RecordClass.Mapper = self\r\n  }\r\n}\r\n\r\n/**\r\n * Instance members\r\n */\r\nutils.addHiddenPropsToTarget(Mapper.prototype, {\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Mapper#end\r\n   * @method\r\n   */\r\n  end (data, opts) {\r\n    const self = this\r\n    if (opts.raw) {\r\n      utils._(opts, data)\r\n    }\r\n    let _data = opts.raw ? data.data : data\r\n    if (utils.isArray(_data)) {\r\n      _data = _data.map(function (item) {\r\n        return self.createRecord(item)\r\n      })\r\n    } else {\r\n      _data = self.createRecord(_data)\r\n    }\r\n    if (opts.raw) {\r\n      data.data = _data\r\n    } else {\r\n      data = _data\r\n    }\r\n    if (opts.notify) {\r\n      setTimeout(function () {\r\n        self.emit(opts.op, data, opts)\r\n      })\r\n    }\r\n    return data\r\n  },\r\n\r\n  /**\r\n   * Create an unsaved, uncached instance of this Mapper's\r\n   * {@link Mapper#RecordClass}.\r\n   *\r\n   * Returns `props` if `props` is already an instance of\r\n   * {@link Mapper#RecordClass}.\r\n   *\r\n   * @name Mapper#createRecord\r\n   * @method\r\n   * @param {Object} props The initial properties of the new unsaved record.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\r\n   * initial properties.\r\n   * @return {Object} The unsaved record.\r\n   */\r\n  createRecord (props, opts) {\r\n    const RecordClass = this.RecordClass\r\n    // Check to make sure \"props\" is not already an instance of this Mapper.\r\n    return RecordClass ? (props instanceof RecordClass ? props : new RecordClass(props, opts)) : props\r\n  },\r\n\r\n  /**\r\n   * Return whether `record` is an instance of this Mappers's RecordClass.\r\n   *\r\n   * @name Mapper#is\r\n   * @method\r\n   * @param {Object} record The record to check.\r\n   * @return {boolean} Whether `record` is an instance of this Mappers's\r\n   * {@ link Mapper#RecordClass}.\r\n   */\r\n  is (record) {\r\n    const RecordClass = this.RecordClass\r\n    return RecordClass ? record instanceof RecordClass : false\r\n  },\r\n\r\n  /**\r\n   * Return a plain object representation of the given record.\r\n   *\r\n   * @name Mapper#toJSON\r\n   * @method\r\n   * @param {Object} record Record from which to create a plain object\r\n   * representation.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {string[]} [opts.with] Array of relation names or relation fields\r\n   * to include in the representation.\r\n   * @return {Object} Plain object representation of the record.\r\n   */\r\n  toJSON (record, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    let json = record\r\n    if (self.is(record)) {\r\n      json = utils.copy(record)\r\n      // The user wants to include relations in the resulting plain object\r\n      // representation\r\n      if (self && self.relationList && opts.with) {\r\n        if (utils.isString(opts.with)) {\r\n          opts.with = [opts.with]\r\n        }\r\n        self.relationList.forEach(def => {\r\n          let containedName\r\n          if (opts.with.indexOf(def.relation) !== -1) {\r\n            containedName = def.relation\r\n          } else if (opts.with.indexOf(def.localField) !== -1) {\r\n            containedName = def.localField\r\n          }\r\n          if (containedName) {\r\n            const optsCopy = { with: opts.with.slice() }\r\n\r\n            // Prepare to recurse into deeply nested relations\r\n            optsCopy.with.splice(optsCopy.with.indexOf(containedName), 1)\r\n            optsCopy.with.forEach((relation, i) => {\r\n              if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\r\n                optsCopy.with[i] = relation.substr(containedName.length + 1)\r\n              } else {\r\n                optsCopy.with[i] = ''\r\n              }\r\n            })\r\n            const relationData = utils.get(record, def.localField)\r\n\r\n            if (relationData) {\r\n              // The actual recursion\r\n              if (utils.isArray(relationData)) {\r\n                utils.set(json, def.localField, relationData.map(item => def.getRelation().toJSON(item, optsCopy)))\r\n              } else {\r\n                utils.set(json, def.localField, def.getRelation().toJSON(relationData, optsCopy))\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return json\r\n  },\r\n\r\n  /**\r\n   * Return the registered adapter with the given name or the default adapter if\r\n   * no name is provided.\r\n   *\r\n   * @name Mapper#getAdapter\r\n   * @method\r\n   * @param {string} [name] The name of the adapter to retrieve.\r\n   * @return {Adapter} The adapter.\r\n   */\r\n  getAdapter (name) {\r\n    const self = this\r\n    self.dbg('getAdapter', 'name:', name)\r\n    const adapter = self.getAdapterName(name)\r\n    if (!adapter) {\r\n      throw new ReferenceError(`${adapter} not found!`)\r\n    }\r\n    return self.getAdapters()[adapter]\r\n  },\r\n\r\n  /**\r\n   * Return the name of a registered adapter based on the given name or options,\r\n   * or the name of the default adapter if no name provided.\r\n   *\r\n   * @name Mapper#getAdapterName\r\n   * @method\r\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\r\n   * @return {string} The name of the adapter.\r\n   */\r\n  getAdapterName (opts) {\r\n    opts || (opts = {})\r\n    if (utils.isString(opts)) {\r\n      opts = { adapter: opts }\r\n    }\r\n    return opts.adapter || opts.defaultAdapter\r\n  },\r\n\r\n  /**\r\n   * @name Mapper#getAdapters\r\n   * @method\r\n   */\r\n  getAdapters () {\r\n    return this._adapters\r\n  },\r\n\r\n  getSchema () {\r\n    return this.schema\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\r\n   * returns a promise then {@link Mapper#create} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeCreate\r\n   * @method\r\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\r\n   */\r\n  beforeCreate: notify,\r\n\r\n  checkUpsertCreate (props, opts) {\r\n    const self = this\r\n    return (opts.upsert || (opts.upsert === undefined && self.upsert)) &&\r\n          utils.get(props, self.idAttribute)\r\n  },\r\n\r\n  /**\r\n   * Create and save a new the record using the provided `props`.\r\n   *\r\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\r\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\r\n   *\r\n   * @name Mapper#create\r\n   * @method\r\n   * @param {Object} props The properties for the new record.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * created data. If `true` return a response object that includes the created\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\r\n   * create if `props` contains nested relations. NOT performed in a transaction.\r\n   * @return {Promise}\r\n   */\r\n  create (props, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    props || (props = {})\r\n    opts || (opts = {})\r\n\r\n    // Check whether we should do an upsert instead\r\n    if (self.checkUpsertCreate(props, opts)) {\r\n      return self.update(utils.get(props, self.idAttribute), props, opts)\r\n    }\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeCreate lifecycle hook\r\n    op = opts.op = 'beforeCreate'\r\n    return resolve(self[op](props, opts)).then(function (_props) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      props = _props || props\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'create'\r\n      const json = self.toJSON(props, opts)\r\n      self.dbg(op, json, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, json, opts))\r\n    }).then(function (data) {\r\n      // afterCreate lifecycle hook\r\n      op = opts.op = 'afterCreate'\r\n      return resolve(self[op](data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\r\n   * returns a promise then {@link Mapper#create} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterCreate\r\n   * @method\r\n   * @param {Object} data The `data` return by the adapter.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\r\n   */\r\n  afterCreate: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\r\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeCreateMany\r\n   * @method\r\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\r\n   */\r\n  beforeCreateMany: notify,\r\n\r\n  checkUpsertCreateMany (records, opts) {\r\n    const self = this\r\n    if (opts.upsert || (opts.upsert === undefined && self.upsert)) {\r\n      return records.reduce(function (hasId, item) {\r\n        return hasId && utils.get(item, self.idAttribute)\r\n      }, true)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Given an array of records, batch create them via an adapter.\r\n   *\r\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\r\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\r\n   *\r\n   * @name Mapper#createMany\r\n   * @method\r\n   * @param {Array} records Array of records to be created in one batch.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * updated data. If `true` return a response object that includes the updated\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading create\r\n   * if the records to be created have linked/nested relations. NOT performed\r\n   * in a transaction.\r\n   * @return {Promise}\r\n   */\r\n  createMany (records, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    records || (records = [])\r\n    opts || (opts = {})\r\n\r\n    // Check whether we should do an upsert instead\r\n    if (self.checkUpsertCreateMany(records, opts)) {\r\n      return self.updateMany(records, opts)\r\n    }\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeCreateMany lifecycle hook\r\n    op = opts.op = 'beforeCreateMany'\r\n    return resolve(self[op](records, opts))\r\n      .then(function (_records) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        records = _records || records\r\n        // Now delegate to the adapter\r\n        op = opts.op = 'createMany'\r\n        const json = records.map(function (item) {\r\n          return self.toJSON(item, opts)\r\n        })\r\n        self.dbg(op, json, opts)\r\n        return resolve(self.getAdapter(adapter)[op](self, json, opts))\r\n      }).then(function (data) {\r\n        // afterCreateMany lifecycle hook\r\n        op = opts.op = 'afterCreateMany'\r\n        return resolve(self[op](data, opts)).then(function (_data) {\r\n          // Allow for re-assignment from lifecycle hook\r\n          data = _data || data\r\n          // Possibly inject result and/or formulate result object\r\n          return self.end(data, opts)\r\n        })\r\n      })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\r\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterCreateMany\r\n   * @method\r\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\r\n   */\r\n  afterCreateMany: notify,\r\n\r\n  /**\r\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\r\n   * returns a promise then {@link Mapper#find} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeFind\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\r\n   */\r\n  beforeFind: notify,\r\n\r\n  /**\r\n   * Retrieve via an adapter the record with the given primary key.\r\n   *\r\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\r\n   * {@link Mapper#afterFind} will be called after calling the adapter.\r\n   *\r\n   * @name Mapper#find\r\n   * @method\r\n   * @param {(string|number)} id The primary key of the record to retrieve.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * updated data. If `true` return a response object that includes the updated\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\r\n   * @return {Promise}\r\n   */\r\n  find (id, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mappers's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeFind lifecycle hook\r\n    op = opts.op = 'beforeFind'\r\n    return resolve(self[op](id, opts)).then(function (_id) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      id = _id === undefined ? id : _id\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'find'\r\n      self.dbg(op, id, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, id, opts))\r\n    }).then(function (data) {\r\n      // afterFind lifecycle hook\r\n      op = opts.op = 'afterFind'\r\n      return resolve(self[op](data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly inject result and/or formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\r\n   * returns a promise then {@link Mapper#find} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterFind\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\r\n   */\r\n  afterFind: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\r\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeFindAll\r\n   * @method\r\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\r\n   */\r\n  beforeFindAll: notify,\r\n\r\n  /**\r\n   * Using the `query` argument, select records to pull from an adapter.\r\n   * Expects back from the adapter the array of selected records.\r\n   *\r\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\r\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\r\n   *\r\n   * @name Mapper#findAll\r\n   * @method\r\n   * @param {Object} [query={}] Selection query.\r\n   * @param {Object} [query.where] Filtering criteria.\r\n   * @param {number} [query.skip] Number to skip.\r\n   * @param {number} [query.limit] Number to limit to.\r\n   * @param {Array} [query.orderBy] Sorting criteria.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * resulting data. If `true` return a response object that includes the\r\n   * resulting data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\r\n   * @return {Promise}\r\n   */\r\n  findAll (query, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    query || (query = {})\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeFindAll lifecycle hook\r\n    op = opts.op = 'beforeFindAll'\r\n    return resolve(self[op](query, opts)).then(function (_query) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      query = _query || query\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'findAll'\r\n      self.dbg(op, query, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, query, opts))\r\n    }).then(function (data) {\r\n      // afterFindAll lifecycle hook\r\n      op = opts.op = 'afterFindAll'\r\n      return resolve(self[op](data, query, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly inject result and/or formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\r\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterFindAll\r\n   * @method\r\n   * @param {Object} data The `data` returned by the adapter.\r\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\r\n   */\r\n  afterFindAll: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\r\n   * returns a promise then {@link Mapper#update} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeUpdate\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\r\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\r\n   */\r\n  beforeUpdate: notify,\r\n\r\n  /**\r\n   * Using an adapter, update the record with the primary key specified by the\r\n   * `id` argument.\r\n   *\r\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\r\n   * {@link Mapper#afterUpdate} will be called after updating the record.\r\n   *\r\n   * @name Mapper#update\r\n   * @method\r\n   * @param {(string|number)} id The primary key of the record to update.\r\n   * @param {Object} props The update to apply to the record.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * updated data. If `true` return a response object that includes the updated\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\r\n   * update if `props` contains nested updates to relations. NOT performed in a\r\n   * transaction.\r\n   * @return {Promise}\r\n   */\r\n  update (id, props, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    props || (props = {})\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeUpdate lifecycle hook\r\n    op = opts.op = 'beforeUpdate'\r\n    return resolve(self[op](id, props, opts)).then(function (_props) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      props = _props || props\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'update'\r\n      const json = self.toJSON(props, opts)\r\n      self.dbg(op, id, json, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, id, json, opts))\r\n    }).then(function (data) {\r\n      // afterUpdate lifecycle hook\r\n      op = opts.op = 'afterUpdate'\r\n      return resolve(self[op](id, data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly inject result and/or formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\r\n   * returns a promise then {@link Mapper#update} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterUpdate\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\r\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\r\n   */\r\n  afterUpdate: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\r\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeUpdateMany\r\n   * @method\r\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\r\n   */\r\n  beforeUpdateMany: notify,\r\n\r\n  /**\r\n   * Given an array of updates, perform each of the updates via an adapter. Each\r\n   * \"update\" is a hash of properties with which to update an record. Each\r\n   * update must contain the primary key to be updated.\r\n   *\r\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\r\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\r\n   *\r\n   * @name Mapper#updateMany\r\n   * @method\r\n   * @param {Array} records Array up record updates.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * updated data. If `true` return a response object that includes the updated\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\r\n   * update if each record update contains nested updates for relations. NOT\r\n   * performed in a transaction.\r\n   * @return {Promise}\r\n   */\r\n  updateMany (records, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    records || (records = [])\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeUpdateMany lifecycle hook\r\n    op = opts.op = 'beforeUpdateMany'\r\n    return resolve(self[op](records, opts)).then(function (_records) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      records = _records || records\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'updateMany'\r\n      const json = records.map(function (item) {\r\n        return self.toJSON(item, opts)\r\n      })\r\n      self.dbg(op, json, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, json, opts))\r\n    }).then(function (data) {\r\n      // afterUpdateMany lifecycle hook\r\n      op = opts.op = 'afterUpdateMany'\r\n      return resolve(self[op](data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly inject result and/or formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\r\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterUpdateMany\r\n   * @method\r\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\r\n   */\r\n  afterUpdateMany: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\r\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeUpdateAll\r\n   * @method\r\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\r\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\r\n   */\r\n  beforeUpdateAll: notify,\r\n\r\n  /**\r\n   * Using the `query` argument, perform the a single updated to the selected\r\n   * records. Expects back from the adapter an array of the updated records.\r\n   *\r\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\r\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\r\n   *\r\n   * @name Mapper#updateAll\r\n   * @method\r\n   * @param {Object} [query={}] Selection query.\r\n   * @param {Object} [query.where] Filtering criteria.\r\n   * @param {number} [query.skip] Number to skip.\r\n   * @param {number} [query.limit] Number to limit to.\r\n   * @param {Array} [query.orderBy] Sorting criteria.\r\n   * @param {Object} props Update to apply to selected records.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * updated data. If `true` return a response object that includes the updated\r\n   * data and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\r\n   * update if `props` contains nested updates to relations. NOT performed in a\r\n   * transaction.\r\n   * @return {Promise}\r\n   */\r\n  updateAll (query, props, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    query || (query = {})\r\n    props || (props = {})\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeUpdateAll lifecycle hook\r\n    op = opts.op = 'beforeUpdateAll'\r\n    return resolve(self[op](query, props, opts)).then(function (_props) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      props = _props || props\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'updateAll'\r\n      const json = self.toJSON(props, opts)\r\n      self.dbg(op, query, json, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, query, json, opts))\r\n    }).then(function (data) {\r\n      // afterUpdateAll lifecycle hook\r\n      op = opts.op = 'afterUpdateAll'\r\n      return resolve(self[op](query, data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        // Possibly inject result and/or formulate result object\r\n        return self.end(data, opts)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\r\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterUpdateAll\r\n   * @method\r\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\r\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\r\n   */\r\n  afterUpdateAll: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\r\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeDestroy\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\r\n   */\r\n  beforeDestroy: notify,\r\n\r\n  /**\r\n   * Using an adapter, destroy the record with the primary key specified by the\r\n   * `id` argument.\r\n   *\r\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\r\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\r\n   *\r\n   * @name Mapper#destroy\r\n   * @method\r\n   * @param {(string|number)} id The primary key of the record to destroy.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * ejected data (if any). If `true` return a response object that includes the\r\n   * ejected data (if any) and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\r\n   * delete. NOT performed in a transaction.\r\n   * @return {Promise}\r\n   */\r\n  destroy (id, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeDestroy lifecycle hook\r\n    op = opts.op = 'beforeDestroy'\r\n    return resolve(self[op](id, opts)).then(function (_id) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      id = _id === undefined ? id : _id\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'destroy'\r\n      self.dbg(op, id, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, id, opts))\r\n    }).then(function (data) {\r\n      // afterDestroy lifecycle hook\r\n      op = opts.op = 'afterDestroy'\r\n      return resolve(self[op](data, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        if (opts.raw) {\r\n          utils._(opts, data)\r\n          return data\r\n        }\r\n        return data\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\r\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterDestroy\r\n   * @method\r\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\r\n   */\r\n  afterDestroy: notify,\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\r\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#beforeDestroyAll\r\n   * @method\r\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\r\n   */\r\n  beforeDestroyAll: notify,\r\n\r\n  /**\r\n   * Using the `query` argument, destroy the selected records via an adapter.\r\n   * If no `query` is provided then all records will be destroyed.\r\n   *\r\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\r\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\r\n   *\r\n   * @name Mapper#destroyAll\r\n   * @method\r\n   * @param {Object} [query={}] Selection query.\r\n   * @param {Object} [query.where] Filtering criteria.\r\n   * @param {number} [query.skip] Number to skip.\r\n   * @param {number} [query.limit] Number to limit to.\r\n   * @param {Array} [query.orderBy] Sorting criteria.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\r\n   * adapter to use.\r\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\r\n   * lifecycle events.\r\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\r\n   * ejected data (if any). If `true` return a response object that includes the\r\n   * ejected data (if any) and metadata about the operation.\r\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\r\n   * delete. NOT performed in a transaction.\r\n   * @return {Promise}\r\n   */\r\n  destroyAll (query, opts) {\r\n    let op, adapter\r\n    const self = this\r\n\r\n    // Default values for arguments\r\n    query || (query = {})\r\n    opts || (opts = {})\r\n\r\n    // Fill in \"opts\" with the Mapper's configuration\r\n    utils._(self, opts)\r\n    adapter = opts.adapter = self.getAdapterName(opts)\r\n\r\n    // beforeDestroyAll lifecycle hook\r\n    op = opts.op = 'beforeDestroyAll'\r\n    return resolve(self[op](query, opts)).then(function (_query) {\r\n      // Allow for re-assignment from lifecycle hook\r\n      query = _query || query\r\n      // Now delegate to the adapter\r\n      op = opts.op = 'destroyAll'\r\n      self.dbg(op, query, opts)\r\n      return resolve(self.getAdapter(adapter)[op](self, query, opts))\r\n    }).then(function (data) {\r\n      // afterDestroyAll lifecycle hook\r\n      op = opts.op = 'afterDestroyAll'\r\n      return resolve(self[op](data, query, opts)).then(function (_data) {\r\n        // Allow for re-assignment from lifecycle hook\r\n        data = _data || data\r\n        if (opts.raw) {\r\n          utils._(opts, data)\r\n          return data\r\n        }\r\n        return data\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\r\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\r\n   * to resolve before continuing.\r\n   *\r\n   * @name Mapper#afterDestroyAll\r\n   * @method\r\n   * @param {*} data The `data` returned by the adapter.\r\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\r\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\r\n   */\r\n  afterDestroyAll: notify,\r\n\r\n  /**\r\n   * @name Mapper#log\r\n   * @method\r\n   */\r\n  log (level, ...args) {\r\n    if (level && !args.length) {\r\n      args.push(level)\r\n      level = 'debug'\r\n    }\r\n    if (level === 'debug' && !this.debug) {\r\n      return\r\n    }\r\n    const prefix = `${level.toUpperCase()}: (${this.name || 'mapper'})`\r\n    if (console[level]) {\r\n      console[level](prefix, ...args)\r\n    } else {\r\n      console.log(prefix, ...args)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @name Mapper#dbg\r\n   * @method\r\n   */\r\n  dbg (...args) {\r\n    this.log('debug', ...args)\r\n  },\r\n\r\n  /**\r\n   * Usage:\r\n   *\r\n   * Post.belongsTo(User, {\r\n   *   localKey: 'myUserId'\r\n   * })\r\n   *\r\n   * Comment.belongsTo(User)\r\n   * Comment.belongsTo(Post, {\r\n   *   localField: '_post'\r\n   * })\r\n   *\r\n   * @name Mapper#belongsTo\r\n   * @method\r\n   */\r\n  belongsTo (RelatedMapper, opts) {\r\n    return belongsTo(RelatedMapper, opts)(this)\r\n  },\r\n\r\n  /**\r\n   * Usage:\r\n   *\r\n   * User.hasMany(Post, {\r\n   *   localField: 'my_posts'\r\n   * })\r\n   *\r\n   * @name Mapper#hasMany\r\n   * @method\r\n   */\r\n  hasMany (RelatedMapper, opts) {\r\n    return hasMany(RelatedMapper, opts)(this)\r\n  },\r\n\r\n  /**\r\n   * Usage:\r\n   *\r\n   * User.hasOne(Profile, {\r\n   *   localField: '_profile'\r\n   * })\r\n   *\r\n   * @name Mapper#hasOne\r\n   * @method\r\n   */\r\n  hasOne (RelatedMapper, opts) {\r\n    return hasOne(RelatedMapper, opts)(this)\r\n  },\r\n\r\n  /**\r\n   * Register an adapter on this mapper under the given name.\r\n   *\r\n   * @name Mapper#registerAdapter\r\n   * @method\r\n   * @param {string} name The name of the adapter to register.\r\n   * @param {Adapter} adapter The adapter to register.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\r\n   * default adapter for this Mapper.\r\n   */\r\n  registerAdapter (name, adapter, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    self.getAdapters()[name] = adapter\r\n    // Optionally make it the default adapter for the target.\r\n    if (opts === true || opts.default) {\r\n      self.defaultAdapter = name\r\n    }\r\n  }\r\n})\r\n\r\n/**\r\n * Create a Mapper subclass.\r\n *\r\n * ```javascript\r\n * var MyMapper = Mapper.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var mapper = new MyMapper()\r\n * mapper.foo() // \"bar\"\r\n * ```\r\n *\r\n * @name Mapper.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of Mapper.\r\n */\r\nMapper.extend = utils.extend\r\n\r\n/**\r\n * Register a new event listener on this Mapper.\r\n *\r\n * @name Mapper#on\r\n * @method\r\n */\r\n\r\n/**\r\n * Remove an event listener from this Mapper.\r\n *\r\n * @name Mapper#off\r\n * @method\r\n */\r\n\r\n/**\r\n * Trigger an event on this Mapper.\r\n *\r\n * @name Mapper#emit\r\n * @method\r\n * @param {string} event Name of event to emit.\r\n */\r\n\r\n/**\r\n * A Mapper's registered listeners are stored at {@link Mapper#_listeners}.\r\n */\r\nutils.eventify(\r\n  Mapper.prototype,\r\n  function () {\r\n    return this._listeners\r\n  },\r\n  function (value) {\r\n    this._listeners = value\r\n  }\r\n)\r\n","import {\r\n  addHiddenPropsToTarget,\r\n  classCallCheck,\r\n  extend,\r\n  fillIn,\r\n  forOwn,\r\n  isObject,\r\n  isString\r\n} from './utils'\r\nimport {\r\n  belongsToType,\r\n  hasManyType,\r\n  hasOneType\r\n} from './decorators'\r\nimport Mapper from './Mapper'\r\n\r\n/**\r\n * ```javascript\r\n * import {Container} from 'js-data'\r\n * ```\r\n *\r\n * The `Container` class is a place to store {@link Mapper} instances.\r\n *\r\n * Without a container, you need to manage mappers yourself, including resolving\r\n * circular dependencies among relations. All mappers in a container share the\r\n * same adapters, so you don't have to add each adapter to all of your mappers.\r\n *\r\n * @example <caption>Without Container</caption>\r\n * import {Mapper} from 'js-data'\r\n * import HttpAdapter from 'js-data-http'\r\n * const adapter = new HttpAdapter()\r\n * const userMapper = new Mapper({ name: 'user' })\r\n * userMapper.registerAdapter('http', adapter, { default: true })\r\n * const commentMapper = new Mapper({ name: 'comment' })\r\n * commentMapper.registerAdapter('http', adapter, { default: true })\r\n *\r\n * // This might be more difficult if the mappers were defined in different\r\n * // modules.\r\n * userMapper.hasMany(commentMapper, {\r\n *   localField: 'comments',\r\n *   foreignKey: 'userId'\r\n * })\r\n * commentMapper.belongsTo(userMapper, {\r\n *   localField: 'user',\r\n *   foreignKey: 'userId'\r\n * })\r\n *\r\n * @example <caption>With Container</caption>\r\n * import {Container} from 'js-data'\r\n * import HttpAdapter from 'js-data-http'\r\n * const container = new Container()\r\n * // All mappers in container share adapters\r\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\r\n *\r\n * // These could be defined in separate modules without a problem.\r\n * container.defineMapper('user', {\r\n *   relations: {\r\n *     hasMany: {\r\n *       comment: {\r\n *         localField: 'comments',\r\n *         foreignKey: 'userId'\r\n *       }\r\n *     }\r\n *   }\r\n * })\r\n * container.defineMapper('comment', {\r\n *   relations: {\r\n *     belongsTo: {\r\n *       user: {\r\n *         localField: 'user',\r\n *         foreignKey: 'userId'\r\n *       }\r\n *     }\r\n *   }\r\n * })\r\n *\r\n * @class Container\r\n * @param {Object} [opts] Configuration options.\r\n * @param {Function} [opts.MapperClass] Constructor function to use in\r\n * {@link Container#defineMapper} to create a new mapper.\r\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\r\n * {@link Container#MapperClass} when creating a new mapper.\r\n * @return {Container}\r\n */\r\nexport default function Container (opts) {\r\n  const self = this\r\n  classCallCheck(self, Container)\r\n\r\n  opts || (opts = {})\r\n  // Apply options provided by the user\r\n  fillIn(self, opts)\r\n  /**\r\n   * Defaults options to pass to {@link Container#MapperClass} when creating a\r\n   * new mapper.\r\n   *\r\n   * @name Container#mapperDefaults\r\n   * @type {Object}\r\n   */\r\n  self.mapperDefaults = self.mapperDefaults || {}\r\n  /**\r\n   * Constructor function to use in {@link Container#defineMapper} to create a\r\n   * new mapper.\r\n   *\r\n   * @name Container#MapperClass\r\n   * @type {Function}\r\n   */\r\n  self.MapperClass = self.MapperClass || Mapper\r\n\r\n  // Initilize private data\r\n\r\n  // Holds the adapters, shared by all mappers in this container\r\n  self._adapters = {}\r\n  // The the mappers in this container\r\n  self._mappers = {}\r\n}\r\n\r\n/**\r\n * Create a Container subclass.\r\n *\r\n * @example\r\n * var MyContainer = Container.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var container = new MyContainer()\r\n * container.foo() // \"bar\"\r\n *\r\n * @name Container.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of Container.\r\n */\r\nContainer.extend = extend\r\n\r\naddHiddenPropsToTarget(Container.prototype, {\r\n  /**\r\n   * Create a new mapper and register it in this container.\r\n   *\r\n   * @example\r\n   * import {Container} from 'js-data'\r\n   * const container = new Container({\r\n   *   mapperDefaults: { foo: 'bar' }\r\n   * })\r\n   * const userMapper = container.defineMapper('user')\r\n   * userMapper.foo // \"bar\"\r\n   *\r\n   * @name Container#defineMapper\r\n   * @method\r\n   * @param {string} name Name under which to register the new {@link Mapper}.\r\n   * {@link Mapper#name} will be set to this value.\r\n   * @param {Object} [opts] Configuration options. Passed to\r\n   * {@link Container#MapperClass} when creating the new {@link Mapper}.\r\n   * @return {Mapper}\r\n   */\r\n  defineMapper (name, opts) {\r\n    const self = this\r\n\r\n    // For backwards compatibility with defineResource\r\n    if (isObject(name)) {\r\n      opts = name\r\n      if (!opts.name) {\r\n        throw new Error('name is required!')\r\n      }\r\n      name = opts.name\r\n    } else if (!isString(name)) {\r\n      throw new Error('name is required!')\r\n    }\r\n\r\n    // Default values for arguments\r\n    opts || (opts = {})\r\n    // Set Mapper#name\r\n    opts.name = name\r\n    opts.relations || (opts.relations = {})\r\n\r\n    // Check if the user is overriding the datastore's default MapperClass\r\n    const MapperClass = opts.MapperClass || self.MapperClass\r\n    delete opts.MapperClass\r\n\r\n    // Apply the datastore's defaults to the options going into the mapper\r\n    fillIn(opts, self.mapperDefaults)\r\n\r\n    // Instantiate a mapper\r\n    const mapper = self._mappers[name] = new MapperClass(opts)\r\n    // Make sure the mapper's name is set\r\n    mapper.name = name\r\n    // All mappers in this datastore will share adapters\r\n    mapper._adapters = self.getAdapters()\r\n\r\n    // Setup the mapper's relations, including generating Mapper#relationList\r\n    // and Mapper#relationFields\r\n    forOwn(mapper.relations, function (group, type) {\r\n      forOwn(group, function (relations, _name) {\r\n        if (isObject(relations)) {\r\n          relations = [relations]\r\n        }\r\n        relations.forEach(function (def) {\r\n          def.getRelation = function () {\r\n            return self.getMapper(_name)\r\n          }\r\n          const Relation = self._mappers[_name] || _name\r\n          if (type === belongsToType) {\r\n            mapper.belongsTo(Relation, def)\r\n          } else if (type === hasOneType) {\r\n            mapper.hasOne(Relation, def)\r\n          } else if (type === hasManyType) {\r\n            mapper.hasMany(Relation, def)\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    return mapper\r\n  },\r\n\r\n  /**\r\n   * Return the name of a registered adapter based on the given name or options,\r\n   * or the name of the default adapter if no name provided.\r\n   *\r\n   * @name Container#getAdapterName\r\n   * @method\r\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\r\n   * @return {string} The name of the adapter.\r\n   */\r\n  getAdapterName (opts) {\r\n    opts || (opts = {})\r\n    if (isString(opts)) {\r\n      opts = { adapter: opts }\r\n    }\r\n    return opts.adapter || this.mapperDefaults.defaultAdapter\r\n  },\r\n\r\n  /**\r\n   * Return the registered adapter with the given name or the default adapter if\r\n   * no name is provided.\r\n   *\r\n   * @name Container#getAdapter\r\n   * @method\r\n   * @param {string} [name] The name of the adapter to retrieve.\r\n   * @return {Adapter} The adapter.\r\n   */\r\n  getAdapter (name) {\r\n    const self = this\r\n    const adapter = self.getAdapterName(name)\r\n    if (!adapter) {\r\n      throw new ReferenceError(`${adapter} not found!`)\r\n    }\r\n    return self.getAdapters()[adapter]\r\n  },\r\n\r\n  /**\r\n   * Return the registered adapters of this container.\r\n   *\r\n   * @name Container#getAdapters\r\n   * @method\r\n   * @return {Adapter}\r\n   */\r\n  getAdapters () {\r\n    return this._adapters\r\n  },\r\n\r\n  /**\r\n   * Return the mapper registered under the specified name.\r\n   *\r\n   * @example\r\n   * import {Container} from 'js-data'\r\n   * const container = new Container()\r\n   * const userMapper = container.defineMapper('user')\r\n   * userMapper === container.getMapper('user') // true\r\n   *\r\n   * @name Container#getMapper\r\n   * @method\r\n   * @param {string} name {@link Mapper#name}.\r\n   * @return {Mapper}\r\n   */\r\n  getMapper (name) {\r\n    const mapper = this._mappers[name]\r\n    if (!mapper) {\r\n      throw new ReferenceError(`${name} is not a registered mapper!`)\r\n    }\r\n    return mapper\r\n  },\r\n\r\n  /**\r\n   * Register an adapter on this container under the given name. Adapters\r\n   * registered on a container are shared by all mappers in the container.\r\n   *\r\n   * @example\r\n   * import {Container} from 'js-data'\r\n   * import HttpAdapter from 'js-data-http'\r\n   * const container = new Container()\r\n   * container.registerAdapter('http', new HttpAdapter, { default: true })\r\n   *\r\n   * @name Container#registerAdapter\r\n   * @method\r\n   * @param {string} name The name of the adapter to register.\r\n   * @param {Adapter} adapter The adapter to register.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\r\n   * default adapter for all Mappers in this container.\r\n   */\r\n  registerAdapter (name, adapter, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    self.getAdapters()[name] = adapter\r\n    // Optionally make it the default adapter for the target.\r\n    if (opts === true || opts.default) {\r\n      self.mapperDefaults.defaultAdapter = name\r\n      forOwn(self._mappers, function (mapper) {\r\n        mapper.defaultAdapter = name\r\n      })\r\n    }\r\n  }\r\n})\r\n","import {\r\n  classCallCheck,\r\n  extend,\r\n  get,\r\n  getSuper,\r\n  isArray,\r\n  isObject,\r\n  set\r\n} from './utils'\r\nimport {\r\n  belongsToType,\r\n  hasManyType,\r\n  hasOneType\r\n} from './decorators'\r\nimport Collection from './Collection'\r\n\r\n/**\r\n * TODO\r\n *\r\n * ```javascript\r\n * import {LinkedCollection} from 'js-data'\r\n * ```\r\n *\r\n * @class LinkedCollection\r\n * @extends Collection\r\n * @param {Array} [records] Initial set of records to insert into the\r\n * collection. See {@link Collection}.\r\n * @param {Object} [opts] Configuration options. See {@link Collection}.\r\n * @return {Mapper}\r\n */\r\nconst LinkedCollection = Collection.extend({\r\n  constructor (records, opts) {\r\n    const self = this\r\n    classCallCheck(self, LinkedCollection)\r\n\r\n    getSuper(self).call(self, records, opts)\r\n\r\n    // Make sure this collection has somewhere to store \"added\" timestamps\r\n    self._added = {}\r\n\r\n    // Make sure this collection a reference to a datastore\r\n    if (!self.datastore) {\r\n      throw new Error('This collection must have a datastore!')\r\n    }\r\n    return self\r\n  },\r\n\r\n  add (records, opts) {\r\n    // console.log('add', this.mapper.name, records)\r\n    const self = this\r\n    const datastore = self.datastore\r\n    const mapper = self.mapper\r\n    const relationList = mapper.relationList || []\r\n    const timestamp = new Date().getTime()\r\n    let singular\r\n\r\n    records = getSuper(self).prototype.add.call(self, records, opts)\r\n\r\n    if (isObject(records) && !isArray(records)) {\r\n      singular = true\r\n      records = [records]\r\n    }\r\n\r\n    records.forEach(function (record) {\r\n      // Track when this record was added\r\n      self._added[self.recordId(record)] = timestamp\r\n    })\r\n\r\n    if (relationList.length && records.length) {\r\n      // Check the currently visited record for relations that need to be\r\n      // inserted into their respective collections.\r\n      mapper.relationList.forEach(function (def) {\r\n        if (def.add === false) {\r\n          return\r\n        }\r\n        const relationName = def.relation\r\n        // A reference to the Mapper that this Mapper is related to\r\n        const Relation = datastore.getMapper(relationName)\r\n        // The field used by the related Mapper as the primary key\r\n        const relationIdAttribute = Relation.idAttribute\r\n        // Grab the foreign key in this relationship, if there is one\r\n        const foreignKey = def.foreignKey\r\n        const localField = def.localField\r\n        // A lot of this is an optimization for being able to insert a lot of\r\n        // data as quickly as possible\r\n        const relatedCollection = datastore.getCollection(relationName)\r\n        const type = def.type\r\n        const isBelongsTo = type === belongsToType\r\n        const isHasMany = type === hasManyType\r\n        const isHasOne = type === hasOneType\r\n        let relatedData\r\n\r\n        records.forEach(function (record) {\r\n          // Grab a reference to the related data attached or linked to the\r\n          // currently visited record\r\n          relatedData = get(record, localField)\r\n\r\n          if (relatedData) {\r\n            const id = get(record, mapper.idAttribute)\r\n            // Otherwise, if there is something to be added, add it\r\n            if (isHasMany) {\r\n              // Handle inserting hasMany relations\r\n              relatedData = relatedData.map(function (toInsertItem) {\r\n                // Check that this item isn't the same item that is already in the\r\n                // store\r\n                if (toInsertItem !== relatedCollection.get(get(toInsertItem, relationIdAttribute))) {\r\n                  // Make sure this item has its foreignKey\r\n                  if (foreignKey) {\r\n                    set(toInsertItem, foreignKey, id)\r\n                  }\r\n                  // Finally add this related item\r\n                  toInsertItem = relatedCollection.add(toInsertItem)\r\n                }\r\n                return toInsertItem\r\n              })\r\n              // If it's the parent that has the localKeys\r\n              if (def.localKeys) {\r\n                set(record, def.localKeys, relatedData.map(function (inserted) {\r\n                  return get(inserted, relationIdAttribute)\r\n                }))\r\n              }\r\n            } else {\r\n              const relatedDataId = get(relatedData, relationIdAttribute)\r\n              // Handle inserting belongsTo and hasOne relations\r\n              if (relatedData !== relatedCollection.get(relatedDataId)) {\r\n                // Make sure foreignKey field is set\r\n                if (isBelongsTo) {\r\n                  set(record, def.foreignKey, relatedDataId)\r\n                } else if (isHasOne) {\r\n                  set(relatedData, def.foreignKey, id)\r\n                }\r\n                // Finally insert this related item\r\n                relatedData = relatedCollection.add(relatedData)\r\n              }\r\n            }\r\n            set(record, localField, relatedData)\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    return singular ? records[0] : records\r\n  },\r\n\r\n  remove (id, opts) {\r\n    const self = this\r\n    delete self._added[id]\r\n    return getSuper(self).prototype.remove.call(self, id, opts)\r\n  },\r\n\r\n  removeAll (query, opts) {\r\n    const self = this\r\n    const records = getSuper(self).prototype.removeAll.call(self, query, opts)\r\n    records.forEach(function (record) {\r\n      delete self._added[self.recordId(record)]\r\n    })\r\n    return records\r\n  }\r\n})\r\n\r\n/**\r\n * Create a LinkedCollection subclass.\r\n *\r\n * ```javascript\r\n * var MyLinkedCollection = LinkedCollection.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var collection = new MyLinkedCollection()\r\n * collection.foo() // \"bar\"\r\n * ```\r\n *\r\n * @name LinkedCollection.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of LinkedCollection.\r\n */\r\nLinkedCollection.extend = extend\r\n\r\nexport {\r\n  LinkedCollection as default\r\n}\r\n","import {\r\n  classCallCheck,\r\n  extend,\r\n  fillIn,\r\n  getSuper,\r\n  isBrowser\r\n} from './utils'\r\nimport Container from './Container'\r\nimport LinkedCollection from './LinkedCollection'\r\n\r\nconst DATASTORE_DEFAULTS = {\r\n  linkRelations: isBrowser\r\n}\r\n\r\n/**\r\n * The `DataStore` class is an extension of {@link Container}. Not only does\r\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\r\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\r\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\r\n * instead of calling them directly on the mappers, then the results of the\r\n * method calls will be inserted into the store's collections. You can think of\r\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\r\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\r\n * (the Mappers).\r\n *\r\n * ```javascript\r\n * import {DataStore} from 'js-data'\r\n * ```\r\n *\r\n * @example\r\n * import {DataStore} from 'js-data'\r\n * import HttpAdapter from 'js-data-http'\r\n * const store = new DataStore()\r\n * const UserMapper = store.defineMapper('user')\r\n *\r\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\r\n * UserMapper.find(1).then(function (user) {\r\n *   // retrieved a \"user\" record via the http adapter, but that's it\r\n *\r\n *   // Call \"find\" on \"store\" for the \"user\" mapper (Stateful DataStore)\r\n *   return store.find('user', 1)\r\n * }).then(function (user) {\r\n *   // not only was a \"user\" record retrieved, but it was added to the\r\n *   // store's \"user\" collection\r\n *   const cachedUser = store.getCollection('user').get(1)\r\n *   user === cachedUser // true\r\n * })\r\n *\r\n * @class DataStore\r\n * @extends Container\r\n * @param {Object} [opts] Configuration options. See {@link Container}.\r\n * @return {DataStore}\r\n */\r\nconst DataStore = Container.extend({\r\n  constructor (opts) {\r\n    const self = this\r\n    classCallCheck(self, DataStore)\r\n\r\n    getSuper(self).call(self, opts)\r\n    self.CollectionClass = self.CollectionClass || LinkedCollection\r\n    self._collections = {}\r\n    fillIn(self, DATASTORE_DEFAULTS)\r\n    return self\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#_end\r\n   * @method\r\n   * @private\r\n   * @param {string} name Name of the {@link LinkedCollection} to which to\r\n   * add the data.\r\n   * @param {Object} data TODO.\r\n   * @param {Object} [opts] Configuration options.\r\n   * @return {(Object|Array)} Result.\r\n   */\r\n  _end (name, data, opts) {\r\n    if (opts.raw) {\r\n      data.data = this.getCollection(name).add(data.data, opts)\r\n      return data\r\n    } else {\r\n      data = this.getCollection(name).add(data, opts)\r\n    }\r\n    return data\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#create\r\n   * @method\r\n   * @param {string} name Name of the {@link Mapper} to target.\r\n   * @param {Object} record Passed to {@link Mapper#create}.\r\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\r\n   * {@link Mapper#create} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  create (name, record, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).create(record, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#createMany\r\n   * @method\r\n   * @param {string} name Name of the {@link Mapper} to target.\r\n   * @param {Array} records Passed to {@link Mapper#createMany}.\r\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\r\n   * {@link Mapper#createMany} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  createMany (name, records, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).createMany(records, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  defineMapper (name, opts) {\r\n    const self = this\r\n    const mapper = getSuper(self).prototype.defineMapper.call(self, name, opts)\r\n    mapper.relationList = mapper.relationList || []\r\n\r\n    mapper.relationList.forEach(function (def) {\r\n      // TODO: Conditionally add getters and setters to RecordClass prototype\r\n    })\r\n\r\n    // The datastore uses a subclass of Collection that is \"datastore-aware\"\r\n    const collection = self._collections[name] = new self.CollectionClass(null, {\r\n      // Make sure the collection has somewhere to store \"added\" timestamps\r\n      _added: {},\r\n      // Give the collection a reference to this datastore\r\n      datastore: self,\r\n      // The mapper tied to the collection\r\n      mapper\r\n    })\r\n\r\n    // Create a secondary index on the \"added\" timestamps of records in the\r\n    // collection\r\n    collection.createIndex('addedTimestamps', ['$'], {\r\n      fieldGetter (obj) {\r\n        return collection._added[collection.recordId(obj)]\r\n      }\r\n    })\r\n    return mapper\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#destroy\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\r\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\r\n   * {@link Mapper#destroy} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  destroy (name, id, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).destroy(id, opts).then(function (data) {\r\n      if (opts.raw) {\r\n        data.data = self.getCollection(name).remove(id, opts)\r\n      } else {\r\n        data = self.getCollection(name).remove(id, opts)\r\n      }\r\n      return data\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name Mapper#destroyAll\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\r\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\r\n   * {@link Mapper#destroyAll} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  destroyAll (name, query, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).destroyAll(query, opts).then(function (data) {\r\n      if (opts.raw) {\r\n        data.data = self.getCollection(name).removeAll(query, opts)\r\n      } else {\r\n        data = self.getCollection(name).removeAll(query, opts)\r\n      }\r\n      return data\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#find\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\r\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\r\n   * @return {Promise}\r\n   */\r\n  find (name, id, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).find(id, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#findAll\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\r\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\r\n   * @return {Promise}\r\n   */\r\n  findAll (name, query, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).findAll(query, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#getCollection\r\n   * @method\r\n   * @param {string} name Name of the {@link DataStoreCollection} to retrieve.\r\n   * @return {DataStoreCollection}\r\n   */\r\n  getCollection (name) {\r\n    const collection = this._collections[name]\r\n    if (!collection) {\r\n      throw new ReferenceError(`${name} is not a registered collection!`)\r\n    }\r\n    return collection\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#update\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\r\n   * @param {Object} record - Passed to {@link Mapper#update}.\r\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\r\n   * {@link Mapper#update} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  update (name, id, record, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).update(id, record, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#updateAll\r\n   * @method\r\n   * @param {string} name - Name of the {@link Mapper} to target.\r\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\r\n   * @param {Object} props - Passed to {@link Model.updateAll}.\r\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\r\n   * {@link Model.updateAll} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  updateAll (name, query, props, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).updateAll(query, props, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * TODO\r\n   *\r\n   * @name DataStore#updateMany\r\n   * @method\r\n   * @param {string} name Name of the {@link Mapper} to target.\r\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\r\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\r\n   * {@link Mapper#updateMany} for more configuration options.\r\n   * @return {Promise}\r\n   */\r\n  updateMany (name, records, opts) {\r\n    const self = this\r\n    opts || (opts = {})\r\n    fillIn(opts, self.modelOpts)\r\n    return self.getMapper(name).updateMany(records, opts).then(function (data) {\r\n      return self._end(name, data, opts)\r\n    })\r\n  }\r\n})\r\n\r\nDataStore.prototype.defineResource = DataStore.prototype.defineMapper\r\n\r\n/**\r\n * Create a DataStore subclass.\r\n *\r\n * ```javascript\r\n * var MyDataStore = DataStore.extend({\r\n *   foo: function () { return 'bar' }\r\n * })\r\n * var store = new MyDataStore()\r\n * store.foo() // \"bar\"\r\n * ```\r\n *\r\n * @name DataStore.extend\r\n * @method\r\n * @param {Object} [props={}] Properties to add to the prototype of the\r\n * subclass.\r\n * @param {Object} [classProps={}] Static properties to add to the subclass.\r\n * @return {Function} Subclass of DataStore.\r\n */\r\nDataStore.extend = extend\r\n\r\nexport {\r\n  DataStore as default\r\n}\r\n","/**\r\n * Registered as `js-data` in NPM and Bower.\r\n * #### Script tag\r\n * ```js\r\n * window.JSData\r\n * ```\r\n * #### CommonJS\r\n * ```js\r\n * var JSData = require('js-data')\r\n * ```\r\n * #### ES6 Modules\r\n * ```js\r\n * import JSData from 'js-data'\r\n * ```\r\n * #### AMD\r\n * ```js\r\n * define('myApp', ['js-data'], function (JSData) { ... })\r\n * ```\r\n *\r\n * @module js-data\r\n */\r\n\r\n/**\r\n * Details of the current version of the `js-data` module.\r\n *\r\n * @name version\r\n * @memberof module:js-data\r\n * @type {Object}\r\n * @property {string} full The full semver value.\r\n * @property {number} major The major version number.\r\n * @property {number} minor The minor version number.\r\n * @property {number} patch The patch version number.\r\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\r\n * if the current version is not alpha.\r\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\r\n * if the current version is not beta.\r\n */\r\nconst version = {\r\n  full: '<%= pkg.version %>',\r\n  major: parseInt('<%= major %>', 10),\r\n  minor: parseInt('<%= minor %>', 10),\r\n  patch: parseInt('<%= patch %>', 10),\r\n  alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\r\n  beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false\r\n}\r\n\r\n/**\r\n * {@link Collection} class.\r\n * @name module:js-data.Collection\r\n */\r\nimport Collection from './Collection'\r\n/**\r\n * {@link Container} class.\r\n * @name module:js-data.Container\r\n */\r\nimport Container from './Container'\r\n/**\r\n * {@link DataStore} class.\r\n * @name module:js-data.DataStore\r\n */\r\nimport DataStore from './DataStore'\r\n/**\r\n * {@link LinkedCollection} class.\r\n * @name module:js-data.LinkedCollection\r\n */\r\nimport LinkedCollection from './LinkedCollection'\r\n/**\r\n * {@link Mapper} class.\r\n * @name module:js-data.Mapper\r\n */\r\nimport Mapper from './Mapper'\r\n/**\r\n * {@link Query} class.\r\n * @name module:js-data.Query\r\n */\r\nimport Query from './Query'\r\n/**\r\n * {@link Record} class.\r\n * @name module:js-data.Record\r\n */\r\nimport Record from './Record'\r\n/**\r\n * {@link Schema} class.\r\n * @name module:js-data.Schema\r\n */\r\nimport Schema from './Schema'\r\n\r\nimport * as utils from './utils'\r\n\r\nexport * from './decorators'\r\n\r\nconst DS = DataStore\r\n\r\nexport {\r\n  Collection,\r\n  Container,\r\n  DataStore,\r\n  DS, // Backwards compatiblity\r\n  LinkedCollection,\r\n  Mapper,\r\n  Query,\r\n  Record,\r\n  Schema,\r\n  utils,\r\n  version\r\n}\r\n"],"names":["resolve","_get","_set","utils.resolve","utils.copy","utils.isUndefined","utils.addHiddenPropsToTarget","utils.isArray","utils.isString","utils.get","_belongsTo","_hasMany","_hasOne","utils.extend","utils.eventify"],"mappings":"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"}