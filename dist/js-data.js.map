{"version":3,"file":"js-data.js","sources":["../src/utils.js","../src/collection/query.js","../lib/mindex/utils.js","../lib/mindex/index.js","../src/collection/collection.js","../src/decorators/belongsTo.js","../src/decorators/configure.js","../src/decorators/hasMany.js","../src/decorators/hasOne.js","../src/decorators/schema.js","../src/decorators/adapter.js","../src/model/index.js","../src/datastore/index.js","../src/schema/index.js","../src/index.js"],"sourcesContent":["/**\n * @module utils\n * @memberof module:js-data\n */\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e+308\nconst ARRAY_TAG = '[object Array]'\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\n\nconst toString = function (value) {\n  return objToString.call(value)\n}\nconst toInteger = function (value) {\n  if (!value) {\n    return value === 0 ? value : 0\n  }\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = (value < 0 ? -1 : 1)\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0\n}\n\n/**\n * Return whether the provided value is an array.\n * @method\n * @param {*} [value] - The value to test.\n */\nexport const isArray = Array.isArray\n/**\n * Return whether the provided value is an object type.\n * @param {*} [value] - The value to test.\n */\nexport function isObject (value) {\n  return toString(value) === OBJECT_TAG\n}\nfunction isPlainObject (value) {\n  return (!!value && typeof value === 'object' && value.constructor === Object)\n}\n/**\n * Return whether the provided value is a regular expression type.\n * @param {*} [value] - The value to test.\n */\nexport function isRegExp (value) {\n  return toString(value) === REGEXP_TAG\n}\n/**\n * Return whether the provided value is a string type.\n * @param {*} [value] - The value to test.\n */\nexport const isString = function (value) {\n  return typeof value === 'string' || (value && typeof value === 'object' && toString(value) === STRING_TAG)\n}\n/**\n * Return whether the provided value is null.\n * @param {*} [value] - The value to test.\n */\nexport const isNull = function (value) {\n  return value === null\n}\n/**\n * Return whether the provided value is undefined.\n * @param {*} [value] - The value to test.\n */\nexport const isUndefined = function (value) {\n  return value === undefined\n}\n/**\n * Return whether the provided value is a date type.\n * @param {*} [value] - The value to test.\n */\nexport const isDate = function (value) {\n  return (value && typeof value === 'object' && toString(value) === DATE_TAG)\n}\n/**\n * Return whether the provided value is a number type.\n * @param {*} [value] - The value to test.\n */\nexport const isNumber = function (value) {\n  const type = typeof value\n  return type === 'number' || (value && type === 'object' && toString(value) === NUMBER_TAG)\n}\n/**\n * Return whether the provided value is an integer.\n * @param {*} [value] - The value to test.\n */\nexport const isInteger = function (value) {\n  return toString(value) === NUMBER_TAG && value == toInteger(value)\n}\n/**\n * Return whether the provided value is a boolean type.\n * @param {*} [value] - The value to test.\n */\nexport function isBoolean (value) {\n  return toString(value) === BOOL_TAG\n}\n/**\n * Return whether the provided value is a function.\n * @param {*} [value] - The value to test.\n */\nexport function isFunction (value) {\n  return typeof value === 'function' || (value && toString(value) === FUNC_TAG)\n}\n/**\n * Return whether the provided value is a string or a number.\n * @param {*} [value] - The value to test.\n */\nexport function isSorN (value) {\n  return isString(value) || isNumber(value)\n}\n/**\n * Get the value at the provided key or path.\n * @param {Object} object - The object from which to retrieve a property.\n * @param {string} prop - The key or path to the property.\n */\nexport function get (object, prop) {\n  if (!prop) {\n    return\n  }\n  const parts = prop.split('.')\n  const last = parts.pop()\n\n  while (prop = parts.shift()) { // eslint-disable-line\n    object = object[prop]\n    if (object == null) return\n  }\n\n  return object[last]\n}\n/**\n * Unset the value at the provided key or path.\n * @param {Object} object - The object on which to unset a property.\n * @param {string} prop - The key or path to the property.\n */\nexport function unset (object, prop) {\n  const parts = prop.split('.')\n  const last = parts.pop()\n\n  while (prop = parts.shift()) { // eslint-disable-line\n    object = object[prop]\n    if (object == null) return\n  }\n\n  object[last] = undefined\n  delete object[last]\n}\nfunction mkdirP (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\nconst PATH = /^(.+)\\.(.+)$/\n/**\n * Set the value at the provided key or path.\n * @param {Object} object - The object on which to set a property.\n * @param {(string|Object)} path - The key or path to the property. Can also\n * pass in an object of path/value pairs, which will all be set on the target\n * object.\n * @param {*} [value] - The value to set.\n */\nexport function set (object, path, value) {\n  if (isObject(path)) {\n    forOwn(path, function (value, _path) {\n      set(object, _path, value)\n    })\n  } else {\n    const parts = PATH.exec(path)\n    if (parts) {\n      mkdirP(object, parts[1])[parts[2]] = value\n    } else {\n      object[path] = value\n    }\n  }\n}\n/**\n * Iterate over an object's own enumerable properties.\n * @param {Object} object - The object whose properties are to be enumerated.\n * @param {Function} fn - Iteration function.\n * @param {Object} [thisArg] - Content to which to bind `fn`.\n */\nexport function forOwn (obj, fn, thisArg) {\n  const keys = Object.keys(obj)\n  const len = keys.length\n  let i\n  for (i = 0; i < len; i++) {\n    fn.call(thisArg, obj[keys[i]], keys[i], obj)\n  }\n}\n/**\n * Recursively shallow copy own enumberable properties from `source` to `dest`.\n * @param {Object} dest - The destination object.\n * @param {Object} source - The source object.\n */\nexport function deepMixIn (dest, source) {\n  if (source) {\n    forOwn(source, function (value, key) {\n      const existing = this[key]\n      if (isPlainObject(value) && isPlainObject(existing)) {\n        deepMixIn(existing, value)\n      } else {\n        this[key] = value\n      }\n    }, dest)\n  }\n  return dest\n}\n/**\n * Proxy for `Promise.resolve`.\n * @param {*} [value] - Value with which to resolve the Promise.\n * @return {Promise} Promise resolved with `value`.\n */\nexport function resolve (value) {\n  return Promise.resolve(value)\n}\n/**\n * Proxy for `Promise.reject`.\n * @param {*} [value] - Value with which to reject the Promise.\n * @return {Promise} Promise reject with `value`.\n */\nexport function reject (value) {\n  return Promise.reject(value)\n}\n/**\n * Shallow copy own enumerable non-function properties from `Model` to `opts`.\n * @param {Model} Model - The source Model.\n * @param {Object} opts - The target object.\n */\nexport function _ (Model, opts) {\n  for (var key in Model) {\n    let value = Model[key]\n    if (opts[key] === undefined && !isFunction(value) && key && key.indexOf('_') !== 0) {\n      opts[key] = value\n    }\n  }\n}\n/**\n * Return the intersection of two arrays.\n * @param {Array} array1 - First array.\n * @param {Array} array2 - Second array.\n * @return {Array} Array of elements common to both arrays.\n */\nexport function intersection (array1, array2) {\n  if (!array1 || !array2) {\n    return []\n  }\n  const result = []\n  let item\n  let i\n  const len = array1.length\n  for (i = 0; i < len; i++) {\n    item = array1[i]\n    if (result.indexOf(item) !== -1) {\n      continue\n    }\n    if (array2.indexOf(item) !== -1) {\n      result.push(item)\n    }\n  }\n  return result\n}\n/**\n * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n * but are missing from `dest.\n * @param {Object} dest - The destination object.\n * @param {Object} source - The source object.\n */\nexport function fillIn (dest, src) {\n  forOwn(src, function (value, key) {\n    if (dest[key] === undefined) {\n      dest[key] = value\n    }\n  })\n}\n/**\n * Return whether `prop` is matched by any string or regular expression in `bl`.\n * @param {string} prop - The name of a property.\n * @param {Array} bl - Array of strings and regular expressions.\n * @return {boolean} Whether `prop` was matched.\n */\nexport function isBlacklisted (prop, bl) {\n  if (!bl || !bl.length) {\n    return false\n  }\n  let matches\n  for (var i = 0; i < bl.length; i++) {\n    if ((toString(bl[i]) === '[object RegExp]' && bl[i].test(prop)) || bl[i] === prop) {\n      matches = prop\n      return matches\n    }\n  }\n  return !!matches\n}\n/**\n * Proxy for `JSON.parse`.\n * @param {string} json - JSON to parse.\n * @return {Object} Parsed object.\n */\nexport function fromJson (json) {\n  return isString(json) ? JSON.parse(json) : json\n}\n/**\n * Proxy for `JSON.stringify`.\n * @method\n * @param {*} value - Value to serialize to JSON.\n * @return {string} JSON string.\n */\nexport const toJson = JSON.stringify\n/**\n * Deep copy a value.\n * @param {*} from - Value to deep copy.\n * @return {*} Deep copy of `from`.\n */\nexport function copy (from, to, stackFrom, stackTo, blacklist) {\n  if (!to) {\n    to = from\n    if (from) {\n      if (isArray(from)) {\n        to = copy(from, [], stackFrom, stackTo, blacklist)\n      } else if (isDate(from)) {\n        to = new Date(from.getTime())\n      } else if (isRegExp(from)) {\n        to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\n        to.lastIndex = from.lastIndex\n      } else if (isObject(from)) {\n        to = copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist)\n      }\n    }\n  } else {\n    if (from === to) {\n      throw new Error('Cannot copy! Source and destination are identical.')\n    }\n\n    stackFrom = stackFrom || []\n    stackTo = stackTo || []\n\n    if (isObject(from)) {\n      let index = stackFrom.indexOf(from)\n      if (index !== -1) {\n        return stackTo[index]\n      }\n\n      stackFrom.push(from)\n      stackTo.push(to)\n    }\n\n    let result\n    if (isArray(from)) {\n      let i\n      to.length = 0\n      for (i = 0; i < from.length; i++) {\n        result = copy(from[i], null, stackFrom, stackTo, blacklist)\n        if (isObject(from[i])) {\n          stackFrom.push(from[i])\n          stackTo.push(result)\n        }\n        to.push(result)\n      }\n    } else {\n      if (isArray(to)) {\n        to.length = 0\n      } else {\n        forOwn(to, function (value, key) {\n          delete to[key]\n        })\n      }\n      for (var key in from) {\n        if (from.hasOwnProperty(key)) {\n          if (isBlacklisted(key, blacklist)) {\n            continue\n          }\n          result = copy(from[key], null, stackFrom, stackTo, blacklist)\n          if (isObject(from[key])) {\n            stackFrom.push(from[key])\n            stackTo.push(result)\n          }\n          to[key] = result\n        }\n      }\n    }\n  }\n  return to\n}\nconst SPLIT = /\\s+/\nconst NON_ALPHA = /[^A-Za-z]/g\nconst PASCAL_CASE = /(\\w)(\\w*)/g\nfunction pascalize (g0, g1, g2) {\n  return `${g1.toUpperCase()}${g2.toLowerCase()}`\n}\nfunction mapToPascal (x) {\n  return x.replace(NON_ALPHA, '').replace(PASCAL_CASE, pascalize)\n}\n/**\n * Convert a string to pascalcase.\n * @param {string} str - String to convert.\n * @return {string} Converted string.\n */\nexport function pascalCase (str) {\n  return str\n    .split(SPLIT)\n    .map(mapToPascal)\n    .join('')\n}\n/**\n * Convert a string to camelcase.\n * @param {string} str - String to convert.\n * @return {string} Converted string.\n */\nexport function camelCase (str) {\n  str = pascalCase(str)\n  if (str) {\n    return str.charAt(0).toLowerCase() + str.slice(1)\n  }\n  return str\n}\n/**\n * Add eventing capabilities into the target object.\n * @param {Object} target - Target object.\n * @param {Function} [getter] - Custom getter for retrieving the object's event\n * listeners.\n * @param {Function} [setter] - Custom setter for setting the object's event\n * listeners.\n */\nexport function eventify (target, getter, setter, enumerable) {\n  target = target || this\n  let _events = {}\n  if (!getter && !setter) {\n    getter = function () {\n      return _events\n    }\n    setter = function (value) {\n      _events = value\n    }\n  }\n  Object.defineProperties(target, {\n    on: {\n      enumerable: !!enumerable,\n      value (type, func, ctx) {\n        if (!getter.call(this)) {\n          setter.call(this, {})\n        }\n        const events = getter.call(this)\n        events[type] = events[type] || []\n        events[type].push({\n          f: func,\n          c: ctx\n        })\n      }\n    },\n    off: {\n      enumerable: !!enumerable,\n      value (type, func) {\n        const events = getter.call(this)\n        const listeners = events[type]\n        if (!listeners) {\n          setter.call(this, {})\n        } else if (func) {\n          for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i].f === func) {\n              listeners.splice(i, 1)\n              break\n            }\n          }\n        } else {\n          listeners.splice(0, listeners.length)\n        }\n      }\n    },\n    emit: {\n      enumerable: !!enumerable,\n      value (...args) {\n        const events = getter.call(this) || {}\n        const type = args.shift()\n        let listeners = events[type] || []\n        let i\n        for (i = 0; i < listeners.length; i++) {\n          listeners[i].f.apply(listeners[i].c, args)\n        }\n        listeners = events.all || []\n        args.unshift(type)\n        for (i = 0; i < listeners.length; i++) {\n          listeners[i].f.apply(listeners[i].c, args)\n        }\n      }\n    }\n  })\n}\n\n/*eslint-disable*/\n// RiveraGroup/node-tiny-uuid\n// DO WTF YOU WANT TO PUBLIC LICENSE\nexport function uuid (a, b) {\n  for (\n    b = a = ''; // b - result , a - numeric variable\n    a++ < 36;\n    b += a * 51 & 52 // if \"a\" is not 9 or 14 or 19 or 24\n    ?  //  return a random number or 4\n    (\n      a ^ 15 // if \"a\" is not 15\n      ? // genetate a random number from 0 to 15\n      8 ^ Math.random() * (a ^ 20 ? 16 : 4) // unless \"a\" is 20, in which case a random number from 8 to 11\n      :\n      4 //  otherwise 4\n    ).toString(16)\n    :\n    '-' //  in other cases (if \"a\" is 9,14,19,24) insert \"-\"\n  );\n  return b\n}\n/*eslint-enable*/\n\nexport function classCallCheck (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function')\n  }\n}\n\nexport function possibleConstructorReturn (self, call) {\n  if (!self) {\n    throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called')\n  }\n\n  return call && (typeof call === 'object' || typeof call === 'function') ? call : self\n}\n\nexport function addHiddenPropsToTarget (target, props) {\n  forOwn(props, function (value, key) {\n    props[key] = {\n      value\n    }\n  })\n  Object.defineProperties(target, props)\n}\n\nexport function extend (props, classProps) {\n  const Parent = this\n  let Child\n\n  props || (props = {})\n  classProps || (classProps = {})\n\n  if (props.hasOwnProperty('constructor')) {\n    Child = props.constructor\n    delete props.constructor\n  } else {\n    Child = function (...args) {\n      classCallCheck(this, Child)\n      const _this = possibleConstructorReturn(this, (Child.__super__ || Object.getPrototypeOf(Child)).apply(this, args))\n      return _this\n    }\n  }\n\n  Child.prototype = Object.create(Parent && Parent.prototype, {\n    constructor: {\n      value: Child,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(Child, Parent)\n  } else if (classProps.strictEs6Class) {\n    Child.__proto__ = Parent // eslint-disable-line\n  } else {\n    forOwn(Parent, function (value, key) {\n      Child[key] = value\n    })\n  }\n  Object.defineProperty(Child, '__super__', {\n    configurable: true,\n    value: Parent\n  })\n\n  deepMixIn(Child.prototype, props)\n  deepMixIn(Child, classProps)\n\n  return Child\n}\n","import {\n  addHiddenPropsToTarget,\n  classCallCheck,\n  forOwn,\n  get,\n  intersection,\n  isArray,\n  isFunction,\n  isNumber,\n  isObject,\n  isString\n} from '../utils'\n\n/**\n * A class used by the @{link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Model.query} and {@link Collection.query}.\n * @class Query\n * @param {Collection} collection - The collection on which this query operates.\n */\nexport function Query (collection) {\n  classCallCheck(this, Query)\n\n  /**\n   * The collection on which this query operates.\n   * @type {Collection}\n   */\n  this.collection = collection\n  /**\n   * The data result of this query.\n   * @type {Array}\n   */\n  this.data = null\n}\n\nconst reserved = {\n  skip: '',\n  offset: '',\n  where: '',\n  limit: '',\n  orderBy: '',\n  sort: ''\n}\n\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\n\nfunction escape (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\nQuery.ops = {\n  '==': function (value, predicate) {\n    return value == predicate // eslint-disable-line\n  },\n  '===': function (value, predicate) {\n    return value === predicate\n  },\n  '!=': function (value, predicate) {\n    return value != predicate // eslint-disable-line\n  },\n  '!==': function (value, predicate) {\n    return value !== predicate\n  },\n  '>': function (value, predicate) {\n    return value > predicate\n  },\n  '>=': function (value, predicate) {\n    return value >= predicate\n  },\n  '<': function (value, predicate) {\n    return value < predicate\n  },\n  '<=': function (value, predicate) {\n    return value <= predicate\n  },\n  'isectEmpty': function (value, predicate) {\n    return !intersection((value || []), (predicate || [])).length\n  },\n  'isectNotEmpty': function (value, predicate) {\n    return intersection((value || []), (predicate || [])).length\n  },\n  'in': function (value, predicate) {\n    return predicate.indexOf(value) !== -1\n  },\n  'notIn': function (value, predicate) {\n    return predicate.indexOf(value) === -1\n  },\n  'contains': function (value, predicate) {\n    return (value || []).indexOf(predicate) !== -1\n  },\n  'notContains': function (value, predicate) {\n    return (value || []).indexOf(predicate) === -1\n  }\n}\n\naddHiddenPropsToTarget(Query.prototype, {\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = get(a, def[0])\n    let cB = get(b, def[0])\n    if (cA && isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    a || (a = null)\n    b || (b = null)\n    if (def[1] === 'DESC') {\n      if (cB < cA) {\n        return -1\n      } else if (cB > cA) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    } else {\n      if (cA < cB) {\n        return -1\n      } else if (cA > cB) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    }\n  },\n\n  evaluate (value, op, predicate) {\n    if (Query.ops[op]) {\n      return Query.ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return this.like(predicate, op.substr(4)).exec(value) !== null\n    } else if (op.indexOf('notLike') === 0) {\n      return this.like(predicate, op.substr(7)).exec(value) === null\n    }\n  },\n\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Return the current data result of this query.\n   * @memberof Query\n   * @instance\n   * @return {Array} The data in this query.\n   */\n  getData () {\n    if (!this.data) {\n      this.data = this.collection.index.getAll()\n    }\n    return this.data\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * Get the users ages 18 to 30\n   * ```js\n   * const users = query.between(18, 30, { index: 'age' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const users = query.between([18], [30], { index: 'age' }).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {Array} leftKeys - Keys defining the left boundary.\n   * @param {Array} rightKeys - Keys defining the right boundary.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    const collection = this.collection\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\n    if (this.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    this.data = index.between(leftKeys, rightKeys, opts)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * #### Example\n   *\n   * Get the entity whose primary key is 25\n   * ```js\n   * const entities = query.get(25).run()\n   * ```\n   * Same as above\n   * ```js\n   * const entities = query.get([25]).run()\n   * ```\n   * Get all users who are active and have the \"admin\" role\n   * ```js\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run()\n   * ```\n   * Get all entities that match a certain weather condition\n   * ```js\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {Array} keyList - Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.string] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  get (keyList = [], opts) {\n    opts || (opts = {})\n    if (this.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (keyList && !isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      this.getData()\n      return this\n    }\n    const collection = this.collection\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\n    this.data = index.get(keyList)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * #### Example\n   *\n   * Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * ```js\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  getAll (...args) {\n    let opts = {}\n    if (this.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (!args.length || args.length === 1 && isObject(args[0])) {\n      this.getData()\n      return this\n    } else if (args.length && isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = this.collection\n    const index = opts.index ? collection.indexes[opts.index] : collection.index\n    this.data = []\n    args.forEach(keyList => {\n      this.data = this.data.concat(index.get(keyList))\n    })\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided query or pass the\n   * provided filter function.\n   *\n   * #### Example\n   *\n   * Get the draft posts created less than three months\n   * ```js\n   * const posts = query.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * }).run()\n   * ```\n   * Use a custom filter function\n   * ```js\n   * const posts = query.filter(function (post) {\n   *   return post.isReady()\n   * }).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  filter (query, thisArg) {\n    const self = this\n    query || (query = {})\n    self.getData()\n    if (isObject(query)) {\n      let where = {}\n      // Filter\n      if (isObject(query.where)) {\n        where = query.where\n      }\n      forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n\n      const fields = []\n      const ops = []\n      const predicates = []\n      forOwn(where, function (clause, field) {\n        if (!isObject(clause)) {\n          clause = {\n            '==': clause\n          }\n        }\n        forOwn(clause, function (expr, op) {\n          fields.push(field)\n          ops.push(op)\n          predicates.push(expr)\n        })\n      })\n      if (fields.length) {\n        let i\n        let len = fields.length\n        self.data = self.data.filter(function (item) {\n          let first = true\n          let keep = true\n\n          for (i = 0; i < len; i++) {\n            let op = ops[i]\n            const isOr = op.charAt(0) === '|'\n            op = isOr ? op.substr(1) : op\n            const expr = self.evaluate(get(item, fields[i]), op, predicates[i])\n            if (expr !== undefined) {\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\n            }\n            first = false\n          }\n          return keep\n        })\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!isArray(orderBy)) {\n        orderBy = null\n      }\n\n      // Apply 'orderBy'\n      if (orderBy) {\n        let index = 0\n        orderBy.forEach(function (def, i) {\n          if (isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        self.data.sort(function (a, b) {\n          return self.compare(orderBy, index, a, b)\n        })\n      }\n\n      // Skip\n      if (isNumber(query.skip)) {\n        self.skip(query.skip)\n      } else if (isNumber(query.offset)) {\n        self.skip(query.offset)\n      }\n      // Limit\n      if (isNumber(query.limit)) {\n        self.limit(query.limit)\n      }\n    } else if (isFunction(query)) {\n      self.data = self.data.filter(query, thisArg)\n    }\n    return self\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * #### Example\n   *\n   * Get all but the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {number} num - The number of entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  skip (num) {\n    if (!isNumber(num)) {\n      throw new TypeError(`skip: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  },\n\n  /**\n   * Limit the result.\n   *\n   * #### Example\n   *\n   * Get only the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n   * ```\n   *\n   * @memberof Query\n   * @instance\n   * @param {number} num - The maximum number of entities to keep in the result.\n   * @return {Query} A reference to itself for chaining.\n   */\n  limit (num) {\n    if (!isNumber(num)) {\n      throw new TypeError(`limit: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @memberof Query\n   * @instance\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @memberof Query\n   * @instance\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   * @memberof Query\n   * @instance\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @memberof Query\n   * @instance\n   * @return {Array} The result of executing this query.\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  }\n})\n","export function sort (a, b, hashCode) {\n  // Short-curcuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if (a === null && b === null) {\n    return 0\n  }\n\n  if (a === null) {\n    return -1\n  }\n\n  if (b === null) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015 Jason Dobry\n//\n// Summary of modifications:\n// Converted to ES6 Class syntax\n// Reworked dependencies so as to re-use code already in js-data\nimport {\n  addHiddenPropsToTarget,\n  classCallCheck,\n  copy,\n  fillIn,\n  forOwn,\n  isArray,\n  isFunction\n} from '../../src/utils'\nimport {binarySearch, insertAt, removeAt} from './utils'\n\nconst blacklist = { '>': 1, '>=': 1, '<': 1, '<=': 1 }\n\nexport function Index (fieldList, opts) {\n  classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\naddHiddenPropsToTarget(Index.prototype, {\n  set (keyList, value) {\n    if (!isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        let newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  get (keyList) {\n    if (!isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index]\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll () {\n    let results = []\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        results = results.concat(value.getAll())\n      } else {\n        results = results.concat(value)\n      }\n    })\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  query (query) {\n    let leftKeys\n    let rightKeys\n\n    if (query['>']) {\n      leftKeys = query['>']\n      query.leftInclusive = false\n    } else if (query['>=']) {\n      leftKeys = query['>=']\n      query.leftInclusive = true\n    }\n\n    if (query['<']) {\n      rightKeys = query['<']\n      query.rightInclusive = false\n    } else if (query['<=']) {\n      rightKeys = query['<=']\n      query.rightInclusive = true\n    }\n\n    if (leftKeys.length !== rightKeys.length) {\n      throw new Error('Key arrays must be same length')\n    }\n\n    const _opts = {}\n    forOwn(query, function (value, key) {\n      if (!blacklist[key]) {\n        _opts[key] = value\n      }\n    })\n    return this.between(leftKeys, rightKeys, _opts)\n  },\n\n  between (leftKeys, rightKeys, opts = {}) {\n    if (!isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    let results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    let leftKey = leftKeys.shift()\n    let rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        let currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  remove (keyList, value) {\n    if (!isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift()\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(this.values[pos.index], dataLocation.index)\n          if (this.values[pos.index].length === 0) {\n            removeAt(this.keys, pos.index)\n            removeAt(this.values, pos.index)\n          }\n        }\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].delete(keyList, value)\n      }\n    }\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    let keyList = this.fieldList.map(function (field) {\n      if (isFunction(field)) {\n        return field(data) || null\n      } else {\n        return data[field] || null\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        const dataLocation = binarySearch(value, data, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    this.removeRecord(data)\n    this.insertRecord(data)\n  }\n})\n","import {Query} from './query'\nimport {\n  _,\n  addHiddenPropsToTarget,\n  classCallCheck,\n  deepMixIn,\n  eventify,\n  fillIn,\n  forOwn,\n  get,\n  isArray,\n  isFunction,\n  isObject,\n  isSorN,\n  isString,\n  set,\n  uuid\n} from '../utils'\nimport {Index} from '../../lib/mindex/index'\n\n/**\n * Holds a set of Model instances. Use a Collection to store and manage\n * instances of Model.\n *\n * ```javascript\n * import {Collection, Model} from 'js-data'\n * class User extends Model {}\n * const UserCollection = new Collection({ model: User })\n * const OtherUserCollection = new Collection([{ id: 1 }, { id: 2 }], { model: User })\n * ```\n *\n * @class Collection\n * @param {Model[]} [models=[]] - Initial set of models to insert into the\n * collection.\n * @param {Object} [opts] - Configuration options.\n * @param {boolean} [opts.autoPk=false]\n * @param {string} [opts.idAttribute]\n * @param {Model} [opts.model] - Reference to the Model type that will be stored\n * by this Collection.\n * @param {Object} [opts.modelOpts={}]\n * @param {string} [opts.onConflict=merge]\n */\nexport function Collection (models, opts) {\n  const self = this\n\n  classCallCheck(self, Collection)\n\n  if (isObject(models) && !isArray(models)) {\n    opts = models\n    models = []\n  }\n\n  // Default values for arguments\n  models || (models = [])\n  opts || (opts = {})\n\n  /**\n   * Reference to this Collection's Model.\n   *\n   * @name Collection#model\n   * @type {Model}\n   */\n  self.model = opts.model\n\n  // Re-emit any events emitted by this Collection's model.\n  if (self.model) {\n    self.model.on('all', self._onModelEvent, self)\n  }\n\n  /**\n   * AutoPk.\n   *\n   * @name Collection#autoPk\n   * @type {boolean}\n   * @default false\n   */\n  self.autoPk = opts.autoPk === undefined ? false : opts.autoPk\n\n  /**\n   * Field to be used as the unique identifier for models in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#model} is set, in which case\n   * this will default to {@link Model.idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   */\n  self.idAttribute = opts.idAttribute\n\n  /**\n   * Any options set here will override any options of {@link Collection#model}.\n   * Useful for making multiple collection that use the same Model in different\n   * ways.\n   *\n   * @name Collection#modelOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.modelOpts = opts.modelOpts || {}\n\n  /**\n   * Event listeners attached to this Collection.\n   *\n   * @name Collection#_listeners\n   * @instance\n   * @type {Model}\n   * @private\n   */\n  self._listeners = {}\n\n  /**\n   * What to do when inserting a model into this Collection that shares a\n   * primary key with a model already in this Collection.\n   *\n   * Possible values:\n   * - merge\n   * - replace\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new model onto the existing\n   * model.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new model onto the existing model.\n   * Any top-level own properties of the existing model that are _not_ on the new\n   * model will be removed.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default merge\n   */\n  self.onConflict = opts.onConflict || 'merge'\n\n  const idAttribute = self.modelId()\n\n  /**\n   * The main index, which uses @{link Collection#modelId} as the key.\n   * @name Collection#index\n   * @type {Index}\n   */\n  self.index = new Index([idAttribute], {\n    hashCode (obj) {\n      return get(obj, idAttribute)\n    }\n  })\n\n  /**\n   * Object that holds the secondary indexes of this collection.\n   * @name Collection#indexes\n   * @type {Object.<string, Index>}\n   */\n  self.indexes = {}\n\n  /**\n   * Object that holds the timestamps of when models were added to this\n   * collection.\n   * @name Collection#added\n   * @type {Object.<number, Model>}\n   */\n  self.added = {}\n\n  /**\n   * Object that holds the autoPks of models which needed ids to be generated.\n   * @name Collection#autoPks\n   * @type {Object.<number, Model>}\n   */\n  self.autoPks = {}\n\n  self.createIndex('addedTimestamps', ['$'], {\n    fieldGetter (obj) {\n      return self.added[get(obj, idAttribute)]\n    }\n  })\n  models.forEach(function (model) {\n    self.index.insertRecord(model)\n    if (model && isFunction(model.on)) {\n      model.on('all', self._onModelEvent, self)\n    }\n  })\n}\n\n/**\n * TODO\n *\n * @name Collection#on\n * @instance\n * @method\n * @param {string} event - TODO.\n * @param {Function} handler - TODO\n */\n\n /**\n * TODO\n *\n * @name Collection#off\n * @instance\n * @method\n * @param {string} [event] - TODO.\n * @param {Function} [handler] - TODO\n */\n\n /**\n * TODO\n *\n * @name Collection#emit\n * @instance\n * @method\n * @param {string} event - TODO.\n * @param {...*} [arg] - TODO\n */\n\naddHiddenPropsToTarget(Collection.prototype, {\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @private\n   * @param {Object} data - TODO.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   */\n  _end (data, opts) {\n    const self = this\n    if (opts.raw) {\n      if (opts.autoAdd) {\n        data.data = self.add(data.data, opts)\n      }\n      return data\n    } else if (opts.autoAdd) {\n      data = self.add(data, opts)\n    }\n    return data\n  },\n\n  /**\n   * Used to bind to events emitted by this Collection's Model or models in this\n   * Collection.\n   *\n   * @memberof Collection\n   * @instance\n   * @private\n   * @param {...*} [arg] - Args passed to {@link Collection#emit}.\n   */\n  _onModelEvent (...args) {\n    this.emit(...args)\n  },\n\n  /**\n   * Insert the provided model or models.\n   *\n   * If a model is already in the collection then the provided model will\n   * either merge with or replace the existing model based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each entity is\n   * visited.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(Object|Object[]|Model|Model[])} data - The model or models to insert.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.autoPk={@link Collection.autoPk}] - Whether to\n   * generate primary keys for the models to be inserted. Useful for inserting\n   * temporary, unsaved data into the collection.\n   * @param {string} [opts.onConflict] - What to do when a model is already in\n   * the collection. Possible values are `merge` or `replace`.\n   * @return {(Model|Model[])} The added model or models.\n   */\n  add (models, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    _(self, opts)\n    models = self.beforeAdd(models, opts) || models\n\n    // Track whether just one or an array of models is being inserted\n    let singular = false\n    const idAttribute = self.modelId()\n    const relationList = self.model ? self.model.relationList || [] : []\n    const timestamp = new Date().getTime()\n    if (!isArray(models)) {\n      models = [models]\n      singular = true\n    }\n\n    // Map the provided models to existing models.\n    // New models will be inserted. If any props map to existing models,\n    // they will be merged into the existing models according to the onConflict\n    // option.\n    models = models.map(function (props) {\n      let id = self.modelId(props)\n      // Track whether we had to generate an id for this model\n      // Validate that the primary key attached to the model is a string or\n      // number\n      let autoPk = false\n      if (!isSorN(id)) {\n        // No id found, generate one\n        if (opts.autoPk) {\n          id = uuid()\n          set(props, idAttribute, id)\n          autoPk = true\n        } else {\n          // Not going to generate one, throw an error\n          throw new TypeError(`${idAttribute}: Expected string or number, found ${typeof id}!`)\n        }\n      }\n      // Grab existing model if there is one\n      const existing = self.get(id)\n      // If the currently visited props are just reference to the existing\n      // model, then there is nothing to be done. Exit early.\n      if (props === existing) {\n        return existing\n      }\n\n      // Check the currently visited props for relations that need to be\n      // inserted as well\n      relationList.forEach(function (def) {\n        // A reference to the Model that this Model is related to\n        const Relation = def.getRelation()\n        if (!Relation.idAttribute) {\n          return\n        }\n        // The field used by the related Model as the primary key\n        const relationIdAttribute = Relation.idAttribute\n        // Grab the foreign key in this relationship, if there is one\n        const foreignKey = def.foreignKey\n\n        // Grab a reference to the related data attached or linked to the\n        // currently visited props\n        let toInsert = get(props, def.getLocalField())\n\n        // If the user provided a custom insertion function for this relation,\n        // call it\n        if (isFunction(def.add)) {\n          def.add(self, def, props)\n        } else if (toInsert && def.add !== false) {\n          // Otherwise, if there is something to be added, add it\n          if (isArray(toInsert)) {\n            // Handle inserting hasMany relations\n            toInsert = toInsert.map(function (toInsertItem) {\n              // Check that this item isn't the same item that is already in the\n              // store\n              if (!Relation.is(toInsertItem)) {\n                try {\n                  // Make sure this item has its foreignKey\n                  if (foreignKey) {\n                    set(toInsertItem, foreignKey, id)\n                  }\n                  // Finally add this related item\n                  toInsertItem = Relation.createInstance(toInsertItem)\n                } catch (err) {\n                  throw new Error(`Failed to insert ${def.type} relation: \"${def.relation}\"! ${err.message}`)\n                }\n              }\n              return toInsertItem\n            })\n            // If it's the parent that has the localKeys\n            if (def.localKeys) {\n              set(props, def.localKeys, toInsert.map(function (inserted) {\n                return get(inserted, relationIdAttribute)\n              }))\n            }\n          } else {\n            // Handle inserting belongsTo and hasOne relations\n            if (!Relation.is(toInsert)) {\n              try {\n                // Make sure this item has its foreignKey\n                if (foreignKey) {\n                  set(toInsert, def.foreignKey, id)\n                }\n                // Finally insert this related item\n                toInsert = Relation.createInstance(toInsert)\n              } catch (err) {\n                throw new Error(`Failed to insert ${def.type} relation: \"${def.relation}\"!`)\n              }\n            }\n          }\n        }\n        set(props, def.localField, toInsert)\n      })\n\n      if (existing) {\n        // Here, the currently visited props corresponds to an entity already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || self.onConflict\n        if (onConflict === 'merge') {\n          deepMixIn(existing, props)\n        } else if (onConflict === 'replace') {\n          forOwn(existing, (value, key) => {\n            if (key !== idAttribute && !props.hasOwnProperty(key)) {\n              delete existing[key]\n            }\n          })\n          existing.set(props)\n        }\n        props = existing\n        // Update all indexes in the collection\n        self.updateIndexes(props)\n      } else {\n        // Here, the currently visted props does not correspond to any model\n        // in the collection, so make this props is an instance of this Model\n        // and insert it into the collection\n        props = self.model ? self.model.createInstance(props) : props\n        self.index.insertRecord(props)\n        forOwn(self.indexes, function (index, name) {\n          index.insertRecord(props)\n        })\n        if (props && isFunction(props.on)) {\n          props.on('all', self._onModelEvent, self)\n          self.emit('add', props)\n        }\n      }\n      // Track when this model was added\n      self.added[id] = timestamp\n      if (autoPk) {\n        self.autoPks[id] = props\n      }\n      return props\n    })\n    // Finally, return the inserted data\n    const result = singular ? (models.length ? models[0] : undefined) : models\n    return self.afterAdd(models, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(Model|Model[])} result - The model or models that were added to\n   * this Collection by {@link Collection#add}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#remove}.\n   * @param {Object} model - The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} query - The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {Object} models - The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `models` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(Model|Model[])} models - The `models` argument passed to {@link Collection#add}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} query - The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * Get all users ages 18 to 30:\n   * ```javascript\n   * const users = collection.between(18, 30, { index: 'age' })\n   * ```\n   * Same as above:\n   * ```javascript\n   * const users = collection.between([18], [30], { index: 'age' })\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Array} leftKeys - Keys defining the left boundary.\n   * @param {Array} rightKeys - Keys defining the right boundary.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n   * @return {Array} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query().between(leftKeys, rightKeys, opts).run()\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} props - Passed to {@link Model.create}.\n   * @param {Object} [opts] - Passed to {@link Model.create}. See\n   * {@link Model.create} for more configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  create (props, opts) {\n    const self = this\n    const id = self.modelId(props)\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.create(props, opts).then(function (data) {\n      // If the created model was already in this Collection via an autoPk id,\n      // remove it from the collection\n      // TODO: Fix this?\n      if (self.autoPks[id]) {\n        self.remove(id)\n      }\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * Index users by age:\n   * ```javascript\n   * collection.createIndex('age')\n   * ```\n   * Index users by status and role:\n   * ```javascript\n   * collection.createIndex('statusAndRole', ['status', 'role'])\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {string} name - The name of the new secondary index.\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   * @return {Collection} A reference to itself for chaining.\n   */\n  createIndex (name, fieldList, opts) {\n    const self = this\n    if (isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode = opts.hashCode || function (obj) {\n      return self.modelId(obj)\n    }\n    const index = self.indexes[name] = new Index(fieldList, opts)\n    self.index.visitAll(index.insertRecord, index)\n    return self\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Array} models - Passed to {@link Model.createMany}.\n   * @param {Object} [opts] - Passed to {@link Model.createMany}. See\n   * {@link Model.createMany} for more configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  createMany (models, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.createMany(models, opts).then(function (data) {\n      // If the created models were already in this Collection via an autoPk\n      // id, remove them from the Collection\n      // TODO: Fix this?\n      models.forEach(function (model) {\n        const id = self.modelId(model)\n        if (self.autoPks[id]) {\n          self.remove(id)\n        }\n      })\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - Passed to {@link Model.destroy}.\n   * @param {Object} [opts] - Passed to {@link Model.destroy}. See\n   * {@link Model.destroy} for more configuration options.\n   * @return {Promise}\n   */\n  destroy (id, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.destroy(id, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.remove(id, opts)\n      } else {\n        data = self.remove(id, opts)\n      }\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} [query] - Passed to {@link Model.destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Model.destroyAll}. See\n   * {@link Model.destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  destroyAll (query, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.destroyAll(query, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.removeAll(query, opts)\n      } else {\n        data = self.removeAll(query, opts)\n      }\n      return data\n    })\n  },\n\n  /**\n   * Find the entity or entities that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * Get the draft posts created less than three months:\n   * ```javascript\n   * const posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * })\n   * ```\n   * Use a custom filter function:\n   * ```javascript\n   * const posts = collection.filter(function (post) {\n   *   return post.isReady()\n   * })\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Array} The result.\n   */\n  filter (query, thisArg) {\n    return this.query().filter(query, thisArg).run()\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - Passed to {@link Model.find}.\n   * @param {Object} [opts] - Passed to {@link Model.find}.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  find (id, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.find(id, opts).then(function (data) {\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  findAll (query, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.findAll(query, opts).then(function (data) {\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * ```javascript\n   * collection.forEach(function (entity) {\n   *   // do something\n   * })\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the model with the given id.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - The primary key of the model to get.\n   * @return {Model} The model with the given id.\n   */\n  get (id) {\n    const instances = this.query().get(id).run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * Get the posts where \"status\" is \"draft\" or \"inReview\":\n   * ```javascript\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n   * ```\n   * Same as above:\n   * ```javascript\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Array} The result.\n   */\n  getAll (...args) {\n    return this.query().getAll(...args).run()\n  },\n\n  /**\n   * Return the entities in this Collection that have a primary key that\n   * was automatically generated when they were inserted.\n   *\n   * @memberof Collection\n   * @instance\n   * @return {Model[]} The models that have autoPks.\n   */\n  getAutoPkItems () {\n    const self = this\n    return self.getAll().filter(function (model) {\n      return self.autoPks[self.modelId(model)]\n    })\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * ```javascript\n   * const posts = collection.limit(10)\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {number} num - The maximum number of entities to keep in the result.\n   * @return {Array} The result.\n   */\n  limit (num) {\n    return this.query().limit(num).run()\n  },\n\n  /**\n   * Apply a mapping function to all entities.\n   *\n   * ```javascript\n   * const names = collection.map(function (user) {\n   *   return user.name\n   * })\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (item) {\n      data.push(item[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return the primary key of the given, or if no model is provided, return the\n   * name of the field that holds the primary key of models in this Collection.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Model} [model] - The model whose primary key is to be returned.\n   * @return {(string|number)} - Primary key or name of field that holds primary\n   * key.\n   */\n  modelId (model) {\n    const self = this\n    if (!model) {\n      return self.model ? self.model.idAttribute : self.idAttribute || 'id'\n    }\n    return get(model, self.modelId())\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * Grab page 2 of users between ages 18 and 30:\n   * ```javascript\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run()\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @return {Query} New query object.\n   */\n  query () {\n    return new Query(this)\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * ```javascript\n   * const totalVotes = collection.reduce(function (prev, entity) {\n   *   return prev + entity.upVotes + entity.downVotes\n   * }, 0)\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Function} cb - Reduction callback.\n   * @param {*} initialValue - Initial value of the reduction.\n   * @return {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the model with the given id from this Collection.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - The primary key of the entity to be removed.\n   * @param {Object} [opts] - Configuration options.\n   * @return {Model} The removed entity, if any.\n   */\n  remove (id, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemove(id, opts)\n    const model = self.get(id)\n\n    // The model is in the collection, remove it\n    if (model) {\n      delete self.added[id]\n      delete self.autoPks[id]\n      self.index.removeRecord(model)\n      forOwn(self.indexes, function (index, name) {\n        index.removeRecord(model)\n      })\n      if (model && isFunction(model.off)) {\n        model.off('all', self._onModelEvent, self)\n        self.emit('remove', model)\n      }\n    }\n    return self.afterRemove(id, opts, model) || model\n  },\n\n  /**\n   * Remove the instances selected by \"query\" from the Collection instance of\n   * this Model.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @return {Model[]} The removed entites, if any.\n   */\n  removeAll (query, opts) {\n    const self = this\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemoveAll(query, opts)\n    const models = self.filter(query)\n\n    // Remove each selected entity from the collection\n    models.forEach(function (item) {\n      self.remove(self.modelId(item))\n    })\n    return self.afterRemoveAll(query, opts, models) || models\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * ```javascript\n   * const posts = collection.skip(10)\n   * ```\n   *\n   * @memberof Collection\n   * @instance\n   * @param {number} num - The number of entities to skip.\n   * @return {Array} The result.\n   */\n  skip (num) {\n    return this.query().skip(num).run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes entities in this collection have a toJSON method.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Array} The entities.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {(string|number)} id - Passed to {@link Model.update}.\n   * @param {Object} props - Passed to {@link Model.update}.\n   * @param {Object} [opts] - Passed to {@link Model.update}. See\n   * {@link Model.update} for more configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  update (id, props, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.update(id, props, opts).then(function (data) {\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\n   * @param {Object} props - Passed to {@link Model.updateAll}.\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n   * {@link Model.updateAll} for more configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  updateAll (query, props, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.updateAll(query, props, opts).then(function (data) {\n      return self._end(data, opts)\n    })\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} record - The record to update.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    const index = opts.index ? this.indexes[opts.index] : this.index\n    index.updateRecord(record)\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Object} record - TODO\n   * @param {Object} [opts] - Configuration options.\n   */\n  updateIndexes (record) {\n    const self = this\n    self.index.updateRecord(record)\n    forOwn(self.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @memberof Collection\n   * @instance\n   * @param {Model[]} models - Passed to {@link Model.updateMany}.\n   * @param {Object} [opts] - Passed to {@link Model.updateMany}. See\n   * {@link Model.updateMany} for more configuration options.\n   * @param {boolean} [opts.autoAdd] - TODO\n   * @return {Promise}\n   */\n  updateMany (models, opts) {\n    const self = this\n    opts || (opts = {})\n    fillIn(opts, self.modelOpts)\n    return self.model.updateMany(models, opts).then(function (data) {\n      return self._end(data, opts)\n    })\n  }\n})\n\neventify(\n  Collection.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import {\n  camelCase,\n  get,\n  isFunction,\n  isString,\n  set\n} from '../utils'\n\nconst op = 'belongsTo'\n\n/**\n * Steps to apply a \"belongsTo\" relationship\n * 1. Choose the localField and foreignKey\n * 2. Configure property descriptor, possibly including custom getter/setter\n * 3. Add property to prototype of target Model\n *\n * The added property is where an instance of the related Model will be\n * attached to an instance of the target Model, e.g. if Comment belongsTo\n * User and \"localField\" is set to \"user\", \"comment.user\" will be a reference to\n * the user.\n *\n * @ignore\n */\nfunction applyBelongsTo (Model, Relation, opts) {\n  opts || (opts = {})\n\n  function getRelation () {\n    const fake = {\n      name: Relation\n    }\n    if (isString(Relation)) {\n      if (isFunction(Model.getModel)) {\n        return Model.getModel(Relation) || fake\n      }\n      return fake\n    }\n    return Relation\n  }\n\n  function getLocalField () {\n    return opts.localField || camelCase(getRelation().name)\n  }\n\n  function getForeignKey () {\n    return opts.foreignKey || opts.localKey || `${camelCase(getRelation().name)}Id`\n  }\n\n  // Setup configuration of the property\n  const descriptor = {\n    // Whether the field specified by \"localField\" will show up in \"for...in\"\n    enumerable: opts.enumerable !== undefined ? !!opts.enumerable : false,\n    // Set default method for retrieving the linked relation\n    get () {\n      return this._get(`links.${getLocalField()}`)\n    },\n    // Set default method for setting the linked relation\n    set (parent) {\n      if (!parent) {\n        return\n      }\n      this._set(`links.${getLocalField()}`, parent)\n      set(this, getForeignKey(), parent[getRelation().idAttribute])\n      return get(this, getLocalField())\n    }\n  }\n\n  const originalGet = descriptor.get\n  const originalSet = descriptor.set\n\n  // Check for user-defined getter\n  if (opts.get) {\n    // Set user-defined getter\n    descriptor.get = function () {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - the original getter function, in case the user wants to use it\n      return opts.get(Model, getRelation(), this, () => originalGet.call(this))\n    }\n    delete descriptor.writable\n  }\n\n  // Check for user-defined setter\n  if (opts.set) {\n    // Set user-defined setter\n    descriptor.set = function (parent) {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - instance of related Model\n      //  - the original setter function, in case the user wants to use it\n      return opts.set(Model, getRelation(), this, parent, value => originalSet.call(this, value === undefined ? parent : value))\n    }\n    delete descriptor.writable\n  }\n\n  if (descriptor.get) {\n    descriptor.set || (descriptor.set = function () {})\n  }\n\n  // Finally, added property to prototype of target Model\n  Object.defineProperty(Model.prototype, getLocalField(), descriptor)\n\n  if (!Model.relationList) {\n    Model.relationList = []\n  }\n  if (!Model.relationFields) {\n    Model.relationFields = []\n  }\n  opts.type = 'belongsTo'\n  opts.name = Model.name\n  opts.relation = Relation.name\n  opts.Relation = Relation\n  opts.getRelation = getRelation\n  opts.getLocalField = getLocalField\n  opts.getForeignKey = getForeignKey\n  Model.relationList.push(opts)\n  Model.relationFields.push(getLocalField())\n\n  // Return target Model for chaining\n  return Model\n}\n\n/**\n * @memberof! module:js-data\n * @example\n * // ES6\n * import {belongsTo, Model} from 'js-data'\n * class User extends Model {}\n *\n * // @belongsTo(User) (ES7)\n * class Comment extends Model {}\n * belongsTo(User)(Comment)\n *\n * // ES5\n * var JSData = require('js-data')\n * var User = JSData.Model.extend({}, { name: 'User' })\n * var Comment = JSDataModel.extend({}, { name: 'Comment' })\n * JSData.belongsTo(User)(Comment)\n *\n * @param {Model} Relation - The Relation the target belongs to.\n * @param {Object} [opts] - Configuration options.\n * @param {string} [opts.localField] - The field on the target where the relation\n * will be attached.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport function belongsTo (Relation, opts) {\n  return function (Model) {\n    Model.dbg(op, Relation, opts)\n    return applyBelongsTo(Model, Relation, opts)\n  }\n}\n","import {copy, forOwn} from '../utils'\n\n/**\n * @memberof! module:js-data\n * @example\n * // ES6\n * import {configure, Model} from 'js-data'\n *\n * // @configure(opts) (ES7)\n * class User extends JSData.Model {}\n * configure(opts)(User)\n *\n * // ES5\n * var JSData = require('js-data')\n * var User = JSData.Model.extend()\n * User.configure(opts)\n *\n * @param {Object} opts - Properties to apply to the target.\n * @param {boolean} [overwrite=true] - Whether to overwrite properties that\n * already exist on the target.\n */\nexport function configure (opts, overwrite = true) {\n  opts = opts || {}\n  return function (target) {\n    forOwn(opts, function (value, key) {\n      if (target[key] === undefined || overwrite) {\n        target[key] = copy(value)\n      }\n    })\n    return target\n  }\n}\n","import {\n  camelCase,\n  get,\n  isFunction,\n  isString,\n  set\n} from '../utils'\n\nconst op = 'hasMany'\n\n/**\n * Steps to apply a \"hasMany\" relationship\n * 1. Choose the localField and foreignKey or localKeys\n * 2. Configure property descriptor, possibly including custom getter/setter\n * 3. Add property to prototype of target Model\n *\n * The added property is where instances of the related Model will be\n * attached to an instance of the target Model, e.g. if User hasMany Comment\n * and \"localField\" is set to \"comments\", \"user.comments\" will be a reference to\n * the array of comments.\n *\n * @ignore\n */\nfunction applyHasMany (Model, Relation, opts) {\n  opts || (opts = {})\n\n  function getRelation () {\n    const fake = {\n      name: Relation\n    }\n    if (isString(Relation)) {\n      if (isFunction(Model.getModel)) {\n        return Model.getModel(Relation) || fake\n      }\n      return fake\n    }\n    return Relation\n  }\n\n  function getLocalField () {\n    return opts.localField || `${camelCase(getRelation().name)}Collection`\n  }\n\n  // Choose field on related instances that holds the primary key of instances\n  // of the target Model\n  let foreignKey = opts.foreignKey\n  const localKeys = opts.localKeys\n  const foreignKeys = opts.foreignKeys\n\n  if (!foreignKey && !localKeys && !foreignKeys) {\n    foreignKey = opts.foreignKey = `${camelCase(Model.name)}Id`\n  }\n\n  // Setup configuration of the property\n  const descriptor = {\n    // Whether the field specified by \"localField\" will show up in \"for...in\"\n    enumerable: opts.enumerable !== undefined ? !!opts.enumerable : false,\n    // Set default method for retrieving the linked relation\n    get () {\n      return this._get(`links.${getLocalField()}`)\n    },\n    // Set default method for setting the linked relation\n    set (children) {\n      if (!children) {\n        return\n      }\n      this._set(`links.${getLocalField()}`, children)\n      if (children && children.length) {\n        const id = get(this, Model.idAttribute)\n        if (foreignKey) {\n          children.forEach(function (child) {\n            set(child, foreignKey, id)\n          })\n        } else if (localKeys) {\n          const keys = []\n          children.forEach(function (child) {\n            keys.push(get(child, getRelation().idAttribute))\n          })\n          set(this, localKeys, keys)\n        } else if (foreignKeys) {\n          children.forEach(function (child) {\n            const keys = get(child, foreignKeys)\n            if (keys) {\n              if (keys.indexOf(id) === -1) {\n                keys.push(id)\n              }\n            } else {\n              set(child, foreignKeys, [id])\n            }\n          })\n        }\n      }\n      return get(this, getLocalField())\n    }\n  }\n\n  const originalGet = descriptor.get\n  const originalSet = descriptor.set\n\n  // Check for user-defined getter\n  if (opts.get) {\n    // Set user-defined getter\n    descriptor.get = function () {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - the original getter function, in case the user wants to use it\n      return opts.get(Model, getRelation(), this, () => originalGet.call(this))\n    }\n  }\n\n  // Check for user-defined setter\n  if (opts.set) {\n    // Set user-defined setter\n    descriptor.set = function (children) {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - instances of related Model\n      //  - the original setter function, in case the user wants to use it\n      return opts.set(Model, getRelation(), this, children, value => originalSet.call(this, value === undefined ? children : value))\n    }\n  }\n\n  // Finally, added property to prototype of target Model\n  Object.defineProperty(Model.prototype, getLocalField(), descriptor)\n\n  if (!Model.relationList) {\n    Model.relationList = []\n  }\n  if (!Model.relationFields) {\n    Model.relationFields = []\n  }\n  opts.type = 'hasMany'\n  opts.name = Model.name\n  opts.relation = getRelation().name\n  opts.Relation = getRelation()\n  opts.getRelation = getRelation\n  opts.getLocalField = getLocalField\n  Model.relationList.push(opts)\n  Model.relationFields.push(getLocalField())\n\n  // Return target Model for chaining\n  return Model\n}\n\n/**\n * @memberof! module:js-data\n * @example\n * // ES6\n * import {hasMany, Model} from 'js-data'\n * class Comment extends Model {}\n *\n * // @hasMany(Comment)\n * class User extends Model {}\n * hasMany(Comment)(User)\n *\n * // ES5\n * var JSData = require('js-data')\n * var User = JSData.Model.extend({}, { name: 'User' })\n * var Comment = JSDataModel.extend({}, { name: 'Comment' })\n * JSData.hasMany(User)(Comment)\n *\n * @param {Model} Model - The Model of which the target has many.\n * @param {Object} [opts] - Configuration options.\n * @param {string} [opts.localField] - The field on the target where the relation\n * will be attached.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport function hasMany (Relation, opts) {\n  return function (target) {\n    target.dbg(op, Relation, opts)\n    return applyHasMany(target, Relation, opts)\n  }\n}\n","import {\n  camelCase,\n  get,\n  isFunction,\n  isString,\n  set\n} from '../utils'\n\nconst op = 'hasOne'\n\n/**\n * Steps to apply a \"hasOne\" relationship\n * 1. Choose the foreignKey and localKey\n * 2. Configure property descriptor, possibly including custom getter/setter\n * 3. Add property to prototype of target Model\n *\n * The added property is where an instance of the related Model will be\n * attached to an instance of the target Model, e.g. if User hasOne\n * Profile and \"localField\" is set to \"profile\", \"user.profile\" will be a\n * reference to the profile.\n *\n * @ignore\n */\nfunction applyHasOne (Model, Relation, opts) {\n  opts || (opts = {})\n\n  function getRelation () {\n    const fake = {\n      name: Relation\n    }\n    if (isString(Relation)) {\n      if (isFunction(Model.getModel)) {\n        return Model.getModel(Relation) || fake\n      }\n      return fake\n    }\n    return Relation\n  }\n\n  function getLocalField () {\n    return opts.localField || camelCase(getRelation().name)\n  }\n\n  function getForeignKey () {\n    return opts.foreignKey || opts.localKey || `${camelCase(Model.name)}Id`\n  }\n\n  // Setup configuration of the property\n  const descriptor = {\n    // Whether the field specified by \"localField\" will show up in \"for...in\"\n    enumerable: opts.enumerable !== undefined ? !!opts.enumerable : false,\n    // Set default method for retrieving the linked relation\n    get () {\n      return this._get(`links.${getLocalField()}`)\n    },\n    // Set default method for setting the linked relation\n    set (child) {\n      if (!child) {\n        return\n      }\n      this._set(`links.${getLocalField()}`, child)\n      set(child, getForeignKey(), get(this, Model.idAttribute))\n      return get(this, getLocalField())\n    }\n  }\n\n  // Check for user-defined getter\n  if (opts.get) {\n    const originalGet = descriptor.get\n    // Set user-defined getter\n    descriptor.get = function () {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - the original getter function, in case the user wants to use it\n      return opts.get(Model, Relation, this, originalGet ? (...args) => originalGet.apply(this, args) : undefined)\n    }\n  }\n\n  // Check for user-defined setter\n  if (opts.set) {\n    const originalSet = descriptor.set\n    // Set user-defined setter\n    descriptor.set = function (child) {\n      // Call user-defined getter, passing in:\n      //  - target Model\n      //  - related Model\n      //  - instance of target Model\n      //  - instance of related Model\n      //  - the original setter function, in case the user wants to use it\n      return opts.set(Model, Relation, this, child, originalSet ? (...args) => originalSet.apply(this, args) : undefined)\n    }\n  }\n\n  // Finally, added property to prototype of target Model\n  Object.defineProperty(Model.prototype, getLocalField(), descriptor)\n\n  if (!Model.relationList) {\n    Model.relationList = []\n  }\n  if (!Model.relationFields) {\n    Model.relationFields = []\n  }\n  opts.type = 'hasOne'\n  opts.name = Model.name\n  opts.relation = Relation.name\n  opts.Relation = Relation\n  opts.getRelation = getRelation\n  opts.getLocalField = getLocalField\n  opts.getForeignKey = getForeignKey\n  Model.relationList.push(opts)\n  Model.relationFields.push(getLocalField())\n\n  // Return target Model for chaining\n  return Model\n}\n\n/**\n * @memberof! module:js-data\n * @example\n * // ES6\n * import {hasOne, Model} from 'js-data'\n * class User extends Model {}\n *\n * // @hasOne(User) (ES7)\n * class Comment extends Model {}\n * hasOne(User, {...})(Comment)\n *\n * // ES5\n * var JSData = require('js-data')\n * var User = JSData.Model.extend({}, { name: 'User' })\n * var Comment = JSDataModel.extend({}, { name: 'Comment' })\n * JSData.hasOne(User, {...})(Comment)\n *\n * @param {Model} Model - The Model of which the target has one.\n * @param {Object} [opts] - Configuration options.\n * @param {string} [opts.localField] - The field on the target where the relation\n * will be attached.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport function hasOne (Model, opts) {\n  return function (target) {\n    target.dbg(op, 'Model:', Model, 'opts:', opts)\n    return applyHasOne(target, Model, opts)\n  }\n}\n","import {\n  forOwn,\n  get\n} from '../utils'\nimport {configure} from './configure'\n\nconst op = 'setSchema'\n\n/**\n * @param {Model} target - Target Model.\n * @param {string} key - Key for new property.\n * @param {Object} opts - Configuration options.\n * @ignore\n */\nfunction makeDescriptor (target, key, opts) {\n  const descriptor = {\n    enumerable: opts.enumerable !== undefined ? opts.enumerable : true\n  }\n  descriptor.get = function () {\n    return this._get(`props.${key}`)\n  }\n  descriptor.set = function (value) {\n    // TODO: rework this\n    // if (isFunction(opts.validate) && !opts.validate(value)) {\n    //   return false\n    // }\n    const _get = this._get\n    const _set = this._set\n    const _unset = this._unset\n    // if (!_get('noValidate')) {\n    //   const errors = validate(opts, value)\n    //   if (errors) {\n    //     throw new Error(errors.join(', '))\n    //   }\n    // }\n    if (opts.track && !_get('creating')) {\n      let changing = _get('changing')\n      const previous = _get(`previous.${key}`)\n      const current = _get(`props.${key}`)\n      let changed = _get('changed')\n      if (!changing) {\n        changed = []\n      }\n      const index = changed.indexOf(key)\n      if (current !== value && index === -1) {\n        changed.push(key)\n      }\n      if (previous !== value) {\n        _set(`changes.${key}`, value)\n      } else {\n        _unset(`changes.${key}`)\n        if (index >= 0) {\n          changed.splice(index, 1)\n        }\n      }\n      if (!changed.length) {\n        changing = false\n        _unset('changing')\n        _unset('changed')\n        if (_get('eventId')) {\n          clearTimeout(_get('eventId'))\n          _unset('eventId')\n        }\n      }\n      if (!changing && changed.length) {\n        _set('changed', changed)\n        _set('changing', true)\n        _set('eventId', setTimeout(() => {\n          _unset('changed')\n          _unset('eventId')\n          _unset('changing')\n          if (!_get('silent')) {\n            let i\n            for (i = 0; i < changed.length; i++) {\n              this.emit('change:' + changed[i], this, get(this, changed[i]))\n            }\n            this.emit('change', this, _get('changes'))\n          }\n          _unset('silent')\n        }, 0))\n      }\n    }\n    _set(`props.${key}`, value)\n    // if (_get('$') && opts.indexed) {\n    //   target.getCollection().updateIndex(this, { index: key })\n    // }\n    return value\n  }\n  // if (opts.indexed) {\n  //   // Update index\n  //   // TODO: Make this configurable, ie. immediate or lazy update\n  //   target.createIndex(key)\n  // }\n  if (opts.get) {\n    if (descriptor.get) {\n      const originalGet = descriptor.get\n      descriptor.get = function () {\n        return opts.get.call(this, originalGet)\n      }\n    } else {\n      descriptor.get = opts.get\n    }\n  }\n  if (opts.set) {\n    if (descriptor.set) {\n      const originalSet = descriptor.set\n      descriptor.set = function (value) {\n        return opts.set.call(this, value, originalSet)\n      }\n    } else {\n      descriptor.set = opts.set\n    }\n  }\n  return descriptor\n}\n\n/**\n * @memberof! module:js-data\n * @example\n * // ES6\n * import {setSchema, Model} from 'js-data'\n * const properties = {\n *   first: {},\n *   last: {},\n *   role: {\n *     value: 'dev'\n *   },\n *   // computed property\n *   name: {\n *     get() { return `${this.first} ${this.last}` },\n *     set(value) {\n *       let parts = value.split(' ')\n *       this.first = parts[0]\n *       this.last = parts[1]\n *       return this\n *     }\n *   }\n * }\n *\n * // @setSchema(properties) (ES7)\n * class User extends Model {}\n * User.setSchema(properties)\n *\n * // ES5\n * var JSData = require('js-data')\n * var User = JSData.Model.extend({}, { name: 'User' })\n * User.setSchema(properties)\n *\n * @param {Object.<string, Object>} opts - Property configurations.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport function setSchema (opts) {\n  opts || (opts = {})\n\n  return function (target) {\n    target.dbg(op, 'opts:', opts)\n\n    target.schema || (target.schema = {})\n    configure(target.schema, opts)\n\n    forOwn(opts, function (prop, key) {\n      const descriptor = makeDescriptor(target, key, prop)\n      // TODO: This won't work for properties of Object type, because all\n      // instances will share the prototype value\n      if (!descriptor.writable) {\n        Object.defineProperty(target.prototype, key, descriptor)\n      }\n    })\n    return target\n  }\n}\n","const op = 'registerAdapter'\n\n/**\n * Add the provided adapter to the target's \"adapters\" property, registering it\n * with the specified.\n * @memberof! module:js-data\n * @param {string} name - The name under which to register the adapter.\n * @param {Adapter} adapter - The adapter to register.\n * @param {Object} opts - Configuration options.\n * @param {boolean} [opts.default=false] - Whether to make the adapter the\n * default adapter for the target.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport function registerAdapter (name, adapter, opts) {\n  opts || (opts = {})\n  opts.op = op\n  return function (target) {\n    target.dbg(op, 'name:', name, 'adapter:', adapter, 'opts:', opts)\n    // Register the adapter\n    target.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      target.defaultAdapter = name\n    }\n  }\n}\n","import * as utils from '../utils'\nimport {\n  belongsTo,\n  configure,\n  hasMany,\n  hasOne,\n  setSchema,\n  registerAdapter\n} from '../decorators/index'\n\nconst {\n  resolve\n} = utils\n\nconst notify = function (...args) {\n  const self = this\n  const opts = args.pop()\n  self.dbg(opts.op, ...args)\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\n    setTimeout(() => {\n      self.emit(opts.op, ...args)\n    })\n  }\n}\n\n/**\n * js-data's Model class.\n * @class Model\n * @example {@lang javascript}class User extends Model {}\n *\n * @abstract\n * @param {Object} [props] The initial properties of the new instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nexport function Model (props, opts) {\n  const self = this\n  utils.classCallCheck(self, Model)\n\n  props || (props = {})\n  opts || (opts = {})\n  const _props = {}\n  Object.defineProperties(self, {\n    _get: {\n      value (key) {\n        return utils.get(_props, key)\n      }\n    },\n    _set: {\n      value (key, value) {\n        return utils.set(_props, key, value)\n      }\n    },\n    _unset: {\n      value (key) {\n        return utils.unset(_props, key)\n      }\n    }\n  })\n  self._set('creating', true)\n  if (opts.noValidate) {\n    self._set('noValidate', true)\n  }\n  utils.fillIn(self, props)\n  self._unset('creating')\n  self._set('changes', {})\n  self._unset('noValidate')\n  self._set('previous', utils.copy(props))\n}\n\n/**\n * Instance members\n */\nutils.addHiddenPropsToTarget(Model.prototype, {\n  schema (key) {\n    let _schema = this.constructor.schema\n    return key ? _schema[key] : _schema\n  },\n\n  // validate (obj, value) {\n  //   let errors = []\n  //   let _schema = this.schema()\n  //   if (!obj) {\n  //     obj = this\n  //   } else if (utils.isString(obj)) {\n  //     const prop = _schema[obj]\n  //     if (prop) {\n  //       errors = validate.validate(prop, value) || []\n  //     }\n  //   } else {\n  //     utils.forOwn(_schema, function (prop, key) {\n  //       errors = errors.concat(validate.validate(prop, utils.get(obj, key)) || [])\n  //     })\n  //   }\n  //   return errors.length ? errors : undefined\n  // },\n\n  /**\n   * @param {Object} [opts] Configuration options. @see {@link Model.create}.\n   */\n  create (opts) {\n    return this.constructor.create(this, opts)\n  },\n\n  beforeSave () {},\n  save (opts) {\n    let op, adapter\n    const self = this\n    const Ctor = self.constructor\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeSave lifecycle hook\n    op = opts.op = 'beforeSave'\n    return resolve(self[op](opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'save'\n      Ctor.dbg(op, self, opts)\n      return self.getAdapter(adapter)[op](Ctor, self, opts)\n    }).then(function (data) {\n      // afterSave lifecycle hook\n      op = opts.op = 'afterSave'\n      return resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        if (opts.raw) {\n          self.set(data.data)\n          data.data = self\n        } else {\n          self.set(data)\n        }\n        return Ctor.end(data, opts)\n      })\n    })\n  },\n  afterSave () {},\n\n  beforeLoadRelations () {},\n  loadRelations (relations, opts) {\n    let op\n    const self = this\n    const Ctor = self.constructor\n    const relationList = Ctor.relationList || []\n\n    // Default values for arguments\n    relations || (relations = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(Ctor, opts)\n    opts.adapter = Ctor.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return resolve(self[op](relations, opts)).then(function () {\n      if (utils.isString(relations)) {\n        relations = [relations]\n      }\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      Ctor.dbg(op, self, relations, opts)\n      return Promise.all(relationList.map(function (def) {\n        if (utils.isFunction(def.load)) {\n          return def.load(Ctor, def, self, opts)\n        }\n        let task\n        if (def.type === 'hasMany' && def.foreignKey) {\n          // hasMany\n          task = def.Relation.findAll({\n            [def.foreignKey]: utils.get(self, Ctor.idAttribute)\n          }, opts)\n        } else if (def.foreignKey) {\n          // belongsTo or hasOne\n          const key = utils.get(self, def.foreignKey)\n          if (utils.isSorN(key)) {\n            task = def.Relation.find(key, opts)\n          }\n        } else if (def.localKeys) {\n          // hasMany\n          task = def.Relation.findAll({\n            [def.Relation.idAttribute]: {\n              'in': utils.get(self, def.localKeys)\n            }\n          }, opts)\n        } else if (def.foreignKeys) {\n          // hasMany\n          task = def.Relation.findAll({\n            [def.Relation.idAttribute]: {\n              'contains': utils.get(self, Ctor.idAttribute)\n            }\n          }, opts)\n        }\n        if (task) {\n          task = task.then(function (data) {\n            if (opts.raw) {\n              data = data.data\n            }\n            utils.set(self, def.localField, def.type === 'hasOne' ? (data.length ? data[0] : undefined) : data)\n          })\n        }\n        return task\n      }))\n    }).then(function () {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return resolve(self[op](relations, opts)).then(function () {\n        return self\n      })\n    })\n  },\n  afterLoadRelations () {},\n\n  /**\n   * @param {Object} [opts] Configuration options. @see {@link Model.destroy}.\n   */\n  destroy (opts) {\n    // TODO: move actual destroy logic here\n    const Ctor = this.constructor\n    return Ctor.destroy(utils.get(this, Ctor.idAttribute), opts)\n  },\n\n  // TODO: move logic for single-item async operations onto the instance.\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @param {string} key - Path of value to retrieve.\n   * @return {*} Value at path.\n   */\n  get: function (key) {\n    return utils.get(this, key)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object.\n   *\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n   * @param {*} [value] - Value to set for the given key.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  set: function (key, value, opts) {\n    const self = this\n    if (utils.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      self._set('silent', true)\n    }\n    utils.set(self, key, value)\n    if (!self._get('eventId')) {\n      self._unset('silent')\n    }\n  },\n\n  /**\n   * Unset the value for a given key.\n   *\n   * @param {string} key - Key to unset.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  unset (key, opts) {\n    opts || (opts = {})\n    if (opts.silent) {\n      this._set('silent', true)\n    }\n    utils.unset(this, key)\n    if (!this._get('eventId')) {\n      this._unset('silent')\n    }\n  },\n\n  hashCode () {\n    return utils.get(this, this.constructor.idAttribute)\n  },\n\n  changes (key) {\n    if (key) {\n      return this._get(`changes.${key}`)\n    }\n    return this._get('changes')\n  },\n\n  hasChanges () {\n    return !!(this._get('changed') || []).length\n  },\n\n  commit () {\n    this._unset('changed')\n    this._set('changes', {})\n    this._set('previous', utils.copy(this))\n    return this\n  },\n\n  previous (key) {\n    if (key) {\n      return this._get(`previous.${key}`)\n    }\n    return this._get('previous')\n  },\n\n  revert (opts) {\n    const previous = this._get('previous') || {}\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    utils.forOwn(this, (value, key) => {\n      if (key !== this.constructor.idAttribute && !previous.hasOwnProperty(key) && this.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n        delete this[key]\n      }\n    })\n    utils.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        this[key] = value\n      }\n    })\n    this.commit()\n    return this\n  },\n\n  toJSON (opts) {\n    return this.constructor.toJSON(this, opts)\n  }\n})\n\n/**\n * Static members\n */\nutils.fillIn(Model, {\n  /**\n   * Hash of registered adapters. Don't modify. Use {@link Model.registerAdapter}.\n   *\n   * @memberOf Model\n   * @private\n   */\n  _adapters: null,\n\n  /**\n   * @ignore\n   */\n  _adaptersOwner: null,\n\n  /**\n   * Hash of registered listeners. Don't modify. Use {@link Model.on} and\n   * {@link Model.off}.\n   *\n   * @memberOf Model\n   * @private\n   */\n  _listeners: null,\n\n  /**\n   * @ignore\n   */\n  _listenersOwner: null,\n\n  /**\n   * Whether to disallow the use of `new Function` in {@link Model.extend}.\n   *\n   * You may set this to `true` if you so desire, but the class (constructor\n   * function) produced by {@link Model.extend} will not be a named function,\n   * which makes for slightly less debuggability.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default false\n   */\n  csp: false,\n\n  /**\n   * The name of the registered adapter that should be used by default by any\n   * of the Model's static methods that use an adapter.\n   *\n   * @memberof Model\n   * @type {string}\n   * @default http\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * Whether to enable debug-level logs.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * The field on instances of {@link Model} that should be used as the unique\n   * identifier for instances of the Model.\n   *\n   * @memberof Model\n   * @type {string}\n   * @default id\n   */\n  idAttribute: 'id',\n\n  /**\n   * Whether this Model should emit operational events.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default true\n   */\n  notify: true,\n\n  pojo: false,\n\n  /**\n   * Whether the relation property accessors should be enumerable. It's\n   * recommended that this stay false.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default false\n   */\n  relationsEnumerable: false,\n\n  /**\n   * Whether {@link Model.create}, {@link Model.createMany}, {@link Model.save},\n   * {@link Model.update}, {@link Model.updateAll}, {@link Model.updateMany},\n   * {@link Model.find}, {@link Model.findAll}, {@link Model.destroy}, and\n   * {@link Model.destroyAll} should return a raw result object that contains\n   * both the instance data returned by the adapter _and_ metadata about the\n   * operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default false\n   */\n  raw: false,\n\n  /**\n   * Whether {@link Model.create} and {@link Model.createMany} should instead\n   * call {@link Model.update} and {@link Model.updateMany} if the provided\n   * props/entities already contain a primary key.\n   *\n   * @memberof Model\n   * @type {boolean}\n   * @default true\n   */\n  upsert: true,\n\n  /**\n   * @memberOf Model\n   * @method\n   * @private\n   */\n  _events (value) {\n    if (value) {\n      this._listeners = value\n    } else if (this._listenersOwner !== this) {\n      this._listeners = {}\n      this._listenersOwner = this\n    }\n    return this._listeners\n  },\n\n  end (data, opts) {\n    const self = this\n    if (opts.raw) {\n      utils._(opts, data)\n    }\n    if (!opts.pojo) {\n      let _data = opts.raw ? data.data : data\n      if (utils.isArray(_data)) {\n        _data = _data.map(function (item) {\n          return self.createInstance(item)\n        })\n      } else {\n        _data = self.createInstance(_data)\n      }\n      if (opts.raw) {\n        data.data = _data\n      } else {\n        data = _data\n      }\n    }\n    if (opts.notify) {\n      setTimeout(function () {\n        self.emit(opts.op, data, opts)\n      })\n    }\n    return data\n  },\n\n  /**\n   * Return new instance of this Model from the given properties. Equivalent to\n   * `new Model([props][, opts])`. Returns `props` if `props` is already an\n   * instance of this Model.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} props - The initial properties of the new instance.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n   * initial properties.\n   * @return {Model} The instance.\n   */\n  createInstance (props, opts) {\n    let Ctor = this\n    // Check to make sure \"props\" is not already an instance of this Model.\n    return props instanceof Ctor ? props : new Ctor(props, opts)\n  },\n\n  /**\n   * Return whether `instance` is an instance of this Model's instance class.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} instance - The instance to check.\n   * @return {boolean} Whether `instance` is an instance of this Model's\n   * instance class.\n   */\n  is (instance, modelOnly) {\n    const self = this\n    return self.instanceClass && !modelOnly ? instance instanceof self.instanceClass : instance instanceof self\n  },\n\n  /**\n   * Return a plain object representation of the given entity.\n   *\n   * @memberOf Model\n   * @method\n   * @param {Object} - Entity of which to return the plain\n   * representation.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Object} Plain object representation of instance.\n   */\n  toJSON (data, opts) {\n    const self = this\n    opts || (opts = {})\n    let json = data\n    if (self.is(data)) {\n      json = {}\n      for (var key in data) {\n        json[key] = data[key]\n      }\n      // The user wants to include relations in the resulting plain object\n      // representation\n      if (self && self.relationList && opts.with) {\n        if (utils.isString(opts.with)) {\n          opts.with = [opts.with]\n        }\n        self.relationList.forEach(def => {\n          let containedName\n          if (opts.with.indexOf(def.relation) !== -1) {\n            containedName = def.relation\n          } else if (opts.with.indexOf(def.localField) !== -1) {\n            containedName = def.localField\n          }\n          if (containedName) {\n            const optsCopy = { with: opts.with.slice() }\n\n            // Prepare to recurse into deeply nested relations\n            optsCopy.with.splice(optsCopy.with.indexOf(containedName), 1)\n            optsCopy.with.forEach((relation, i) => {\n              if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n                optsCopy.with[i] = relation.substr(containedName.length + 1)\n              } else {\n                optsCopy.with[i] = ''\n              }\n            })\n            const relationData = utils.get(data, def.localField)\n\n            if (relationData) {\n              // The actual recursion\n              if (utils.isArray(relationData)) {\n                utils.set(json, def.localField, relationData.map(item => def.Relation.toJSON(item, optsCopy)))\n              } else {\n                utils.set(json, def.localField, def.Relation.toJSON(relationData, optsCopy))\n              }\n            }\n          }\n        })\n      }\n    }\n    return json\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @memberof Model\n   * @method\n   * @param {string} [name]- The name of the adapter to retrieve.\n   * @return {Adapter} The adapter, if any.\n   */\n  getAdapter (name) {\n    this.dbg('getAdapter', 'name:', name)\n    const adapter = this.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return this.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @memberof Model\n   * @method\n   * @param {(Object|string)} [opts] - The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  getAdapters () {\n    if (this._adaptersOwner !== this) {\n      const prevAdapters = this._adapters\n      this._adapters = {}\n      if (prevAdapters) {\n        utils.fillIn(this._adapters, prevAdapters)\n      }\n      this._adaptersOwner = this\n    }\n    return this._adapters\n  },\n\n  getSchema () {\n    return this._schema\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.create}. If this method\n   * returns a promise then {@link Model.create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} props - The `props` argument passed to {@link Model.create}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.create}.\n   */\n  beforeCreate: notify,\n\n  checkUpsertCreate (props, opts) {\n    const self = this\n    return (opts.upsert || (opts.upsert === undefined && self.upsert)) &&\n          utils.get(props, self.idAttribute)\n  },\n\n  /**\n   * Using an adapter, create a new the entity from the provided `props`.\n   *\n   * {@link Model.beforeCreate} will be called before calling the adapter.\n   * {@link Model.afterCreate} will be called after calling the adapter.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} props - The properties from which to create the entity.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * created data. If `true` return a response object that includes the created\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a transaction.\n   */\n  create (props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Check whether we should do an upsert instead\n    if (self.checkUpsertCreate(props, opts)) {\n      return self.update(utils.get(props, self.idAttribute), props, opts)\n    }\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return resolve(self[op](props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _props || props\n      // Now delegate to the adapter\n      op = opts.op = 'create'\n      const json = self.toJSON(props, opts)\n      self.dbg(op, json, opts)\n      return self.getAdapter(adapter)[op](self, json, opts)\n    }).then(function (data) {\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.create}. If this method\n   * returns a promise then {@link Model.create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} data - The `data` return by the adapter.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.create}.\n   */\n  afterCreate: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.createMany}. If this method\n   * returns a promise then {@link Model.createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - The `entities` argument passed to {@link Model.createMany}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.createMany}.\n   */\n  beforeCreateMany: notify,\n\n  checkUpsertCreateMany (entities, opts) {\n    const self = this\n    if (opts.upsert || (opts.upsert === undefined && self.upsert)) {\n      return entities.reduce(function (hasId, item) {\n        return hasId && utils.get(item, self.idAttribute)\n      }, true)\n    }\n  },\n\n  /**\n   * Given an array of entities, batch create them via an adapter.\n   *\n   * {@link Model.beforeCreateMany} will be called before calling the adapter.\n   * {@link Model.afterCreateMany} will be called after calling the adapter.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - Array up entities to be created.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading create\n   * if the entities to be created have linked/nested relations. NOT performed\n   * in a transaction.\n   */\n  createMany (entities, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    entities || (entities = [])\n    opts || (opts = {})\n\n    // Check whether we should do an upsert instead\n    if (self.checkUpsertCreateMany(entities, opts)) {\n      return self.updateMany(entities, opts)\n    }\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return resolve(self[op](entities, opts))\n      .then(function (_entities) {\n        // Allow for re-assignment from lifecycle hook\n        entities = _entities || entities\n        // Now delegate to the adapter\n        op = opts.op = 'createMany'\n        const json = entities.map(function (item) {\n          return self.toJSON(item, opts)\n        })\n        self.dbg(op, json, opts)\n        return self.getAdapter(adapter)[op](self, json, opts)\n      }).then(function (data) {\n        // afterCreateMany lifecycle hook\n        op = opts.op = 'afterCreateMany'\n        return resolve(self[op](data, opts)).then(function (_data) {\n          // Allow for re-assignment from lifecycle hook\n          data = _data || data\n          // Possibly inject result and/or formulate result object\n          return self.end(data, opts)\n        })\n      })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.createMany}. If this method\n   * returns a promise then {@link Model.createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - The `entities` argument passed to {@link Model.createMany}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.createMany}.\n   */\n  afterCreateMany: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.find}. If this method\n   * returns a promise then {@link Model.find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.find}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.find}.\n   */\n  beforeFind: notify,\n\n  /**\n   * Retrieve via an adapter the entity with the given primary key.\n   *\n   * {@link Model.beforeFind} will be called before calling the adapter.\n   * {@link Model.afterFind} will be called after calling the adapter.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The primary key of the entity to retrieve.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   */\n  find (id, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind'\n    return resolve(self[op](id, opts)).then(function (_id) {\n      // Allow for re-assignment from lifecycle hook\n      id = _id === undefined ? id : _id\n      // Now delegate to the adapter\n      op = opts.op = 'find'\n      self.dbg(op, id, opts)\n      return self.getAdapter(adapter)[op](self, id, opts)\n    }).then(function (data) {\n      // afterFind lifecycle hook\n      op = opts.op = 'afterFind'\n      return resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly inject result and/or formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.find}. If this method\n   * returns a promise then {@link Model.find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.find}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.find}.\n   */\n  afterFind: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.findAll}. If this method\n   * returns a promise then {@link Model.findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} query - The `query` argument passed to {@link Model.findAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.findAll}.\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Using the `query` argument, select entities to pull from an adapter.\n   * Expects back from the adapter the array of selected entities.\n   *\n   * {@link Model.beforeFindAll} will be called before calling the adapter.\n   * {@link Model.afterFindAll} will be called after calling the adapter.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   */\n  findAll (query, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    query || (query = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll'\n    return resolve(self[op](query, opts)).then(function (_query) {\n      // Allow for re-assignment from lifecycle hook\n      query = _query || query\n      // Now delegate to the adapter\n      op = opts.op = 'findAll'\n      self.dbg(op, query, opts)\n      return self.getAdapter(adapter)[op](self, query, opts)\n    }).then(function (data) {\n      // afterFindAll lifecycle hook\n      op = opts.op = 'afterFindAll'\n      return resolve(self[op](data, query, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly inject result and/or formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.findAll}. If this method\n   * returns a promise then {@link Model.findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} data - The `data` returned by the adapter.\n   * @param {Object} query - The `query` argument passed to {@link Model.findAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.findAll}.\n   */\n  afterFindAll: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.update}. If this method\n   * returns a promise then {@link Model.update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.update}.\n   * @param {props} props - The `props` argument passed to {@link Model.update}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.update}.\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Using an adapter, update the entity with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Model.beforeUpdate} will be called before updating the entity.\n   * {@link Model.afterUpdate} will be called after updating the entity.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The primary key of the entity to update.\n   * @param {Object} props - The update to apply to the entity.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   */\n  update (id, props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate'\n    return resolve(self[op](id, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _props || props\n      // Now delegate to the adapter\n      op = opts.op = 'update'\n      const json = self.toJSON(props, opts)\n      self.dbg(op, id, json, opts)\n      return self.getAdapter(adapter)[op](self, id, json, opts)\n    }).then(function (data) {\n      // afterUpdate lifecycle hook\n      op = opts.op = 'afterUpdate'\n      return resolve(self[op](id, data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly inject result and/or formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.update}. If this method\n   * returns a promise then {@link Model.update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.update}.\n   * @param {props} props - The `props` argument passed to {@link Model.update}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.update}.\n   */\n  afterUpdate: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.updateMany}. If this method\n   * returns a promise then {@link Model.updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - The `entities` argument passed to {@link Model.updateMany}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.updateMany}.\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an entity. Each\n   * update must contain the primary key to be updated.\n   *\n   * {@link Model.beforeUpdateMany} will be called before making the update.\n   * {@link Model.afterUpdateMany} will be called after making the update.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - Array up entity updates.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if each entity update contains nested updates for relations. NOT\n   * performed in a transaction.\n   */\n  updateMany (entities, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    entities || (entities = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany'\n    return resolve(self[op](entities, opts)).then(function (_entities) {\n      // Allow for re-assignment from lifecycle hook\n      entities = _entities || entities\n      // Now delegate to the adapter\n      op = opts.op = 'updateMany'\n      const json = entities.map(function (item) {\n        return self.toJSON(item, opts)\n      })\n      self.dbg(op, json, opts)\n      return self.getAdapter(adapter)[op](self, json, opts)\n    }).then(function (data) {\n      // afterUpdateMany lifecycle hook\n      op = opts.op = 'afterUpdateMany'\n      return resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly inject result and/or formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.updateMany}. If this method\n   * returns a promise then {@link Model.updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Array} entities - The `entities` argument passed to {@link Model.updateMany}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.updateMany}.\n   */\n  afterUpdateMany: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.updateAll}. If this method\n   * returns a promise then {@link Model.updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} query - The `query` argument passed to {@link Model.updateAll}.\n   * @param {Object} props - The `props` argument passed to {@link Model.updateAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.updateAll}.\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * entities. Expects back from the adapter an array of the updated entities.\n   *\n   * {@link Model.beforeUpdateAll} will be called before making the update.\n   * {@link Model.afterUpdateAll} will be called after making the update.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} props - Update to apply to selected entities.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   */\n  updateAll (query, props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    query || (query = {})\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll'\n    return resolve(self[op](query, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _props || props\n      // Now delegate to the adapter\n      op = opts.op = 'updateAll'\n      const json = self.toJSON(props, opts)\n      self.dbg(op, query, json, opts)\n      return self.getAdapter(adapter)[op](self, query, json, opts)\n    }).then(function (data) {\n      // afterUpdateAll lifecycle hook\n      op = opts.op = 'afterUpdateAll'\n      return resolve(self[op](query, data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        // Possibly inject result and/or formulate result object\n        return self.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.updateAll}. If this method\n   * returns a promise then {@link Model.updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} query - The `query` argument passed to {@link Model.updateAll}.\n   * @param {Object} props - The `props` argument passed to {@link Model.updateAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.updateAll}.\n   */\n  afterUpdateAll: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.destroy}. If this method\n   * returns a promise then {@link Model.destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.destroy}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.destroy}.\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Using an adapter, destroy the entity with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Model.beforeDestroy} will be called before destroying the entity.\n   * {@link Model.afterDestroy} will be called after destroying the entity.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The primary key of the entity to destroy.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   */\n  destroy (id, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy'\n    return resolve(self[op](id, opts)).then(function (_id) {\n      // Allow for re-assignment from lifecycle hook\n      id = _id === undefined ? id : _id\n      // Now delegate to the adapter\n      op = opts.op = 'destroy'\n      self.dbg(op, id, opts)\n      return self.getAdapter(adapter)[op](self, id, opts)\n    }).then(function (data) {\n      // afterDestroy lifecycle hook\n      op = opts.op = 'afterDestroy'\n      return resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        if (opts.raw) {\n          utils._(opts, data)\n          return data\n        }\n        return data\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.destroy}. If this method\n   * returns a promise then {@link Model.destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {(string|number)} id - The `id` argument passed to {@link Model.destroy}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.destroy}.\n   */\n  afterDestroy: notify,\n\n  /**\n   * Model lifecycle hook called by {@link Model.destroyAll}. If this method\n   * returns a promise then {@link Model.destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {query} query - The `query` argument passed to {@link Model.destroyAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.destroyAll}.\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Using the `query` argument, destroy the selected entities via an adapter.\n   * If no `query` is provided then all entities will be destroyed.\n   *\n   * {@link Model.beforeDestroyAll} will be called before destroying the entities.\n   * {@link Model.afterDestroyAll} will be called after destroying the entities.\n   *\n   * @memberof Model\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.adapter={@link Model.defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Model.notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Model.raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   */\n  destroyAll (query, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    query || (query = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll'\n    return resolve(self[op](query, opts)).then(function (_query) {\n      // Allow for re-assignment from lifecycle hook\n      query = _query || query\n      // Now delegate to the adapter\n      op = opts.op = 'destroyAll'\n      self.dbg(op, query, opts)\n      return self.getAdapter(adapter)[op](self, query, opts)\n    }).then(function (data) {\n      // afterDestroyAll lifecycle hook\n      op = opts.op = 'afterDestroyAll'\n      return resolve(self[op](data, query, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        if (opts.raw) {\n          utils._(opts, data)\n          return data\n        }\n        return data\n      })\n    })\n  },\n\n  /**\n   * Model lifecycle hook called by {@link Model.destroyAll}. If this method\n   * returns a promise then {@link Model.destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @memberof Model\n   * @method\n   * @param {*} data - The `data` returned by the adapter.\n   * @param {query} query - The `query` argument passed to {@link Model.destroyAll}.\n   * @param {Object} opts - The `opts` argument passed to {@link Model.destroyAll}.\n   */\n  afterDestroyAll: notify,\n\n  log (level, ...args) {\n    if (level && !args.length) {\n      args.push(level)\n      level = 'debug'\n    }\n    if (level === 'debug' && !this.debug) {\n      return\n    }\n    const prefix = `${level.toUpperCase()}: (${this.name})`\n    if (console[level]) {\n      console[level](prefix, ...args)\n    } else {\n      console.log(prefix, ...args)\n    }\n  },\n\n  dbg (...args) {\n    this.log('debug', ...args)\n  },\n\n  /**\n   * Usage:\n   *\n   * Post.belongsTo(User, {\n   *   localKey: 'myUserId'\n   * })\n   *\n   * Comment.belongsTo(User)\n   * Comment.belongsTo(Post, {\n   *   localField: '_post'\n   * })\n   */\n  belongsTo (model, opts) {\n    return belongsTo(model, opts)(this)\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasMany(Post, {\n   *   localField: 'my_posts'\n   * })\n   */\n  hasMany (model, opts) {\n    return hasMany(model, opts)(this)\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasOne(Profile, {\n   *   localField: '_profile'\n   * })\n   */\n  hasOne (model, opts) {\n    return hasOne(model, opts)(this)\n  },\n\n  /**\n   * Invoke the {@link module:js-data.exports.setSchema setSchema} decorator on\n   * this Model.\n   * @param {Object} opts - Property configurations.\n   * @return {Model} A reference to the Model for chaining.\n   */\n  setSchema (opts) {\n    return setSchema(opts)(this)\n  },\n\n  /**\n   * Invoke the {@link module:js-data.exports.configure configure} decorator on\n   * this Model.\n   * @param {Object} opts - Configuration\n   * @return {Model} A reference to the Model for chaining.\n   */\n  configure (opts) {\n    return configure(opts)(this)\n  },\n\n  /**\n   * Invoke the {@link module:js-data.exports.registerAdapter registerAdapter}\n   * decorator on this Model.\n   * @param {string} name - The name of the adapter to register.\n   * @param {Adapter} adapter - The adapter to register.\n   * @param {Object} [opts] - Configuration options.\n   * @param {boolean} [opts.default=false] - Whether to make the adapter the\n   * default for this Model.\n   * @return {Model} A reference to the Model for chaining.\n   */\n  registerAdapter (name, adapter, opts) {\n    return registerAdapter(name, adapter, opts)(this)\n  },\n\n  /**\n   * Extend this Model and return a new child Model. Static properties on this\n   * Model will be shallow copied to the child Model. The child Model's\n   * prototype will point to the parent Model.\n   *\n   * @example\n   * var User = JSData.Model.extend({}, { name: 'User' })\n   * @param {Object} props={} - Properties to add to the prototype of the class.\n   * @param {Function} [props.initialize] - Optional function to invoke during\n   * construction of instances of the class. Will receive any arguments passed\n   * to the constructor. \"this\" will refer to the instance being constructed.\n   * @param {Object} classProps - Static properties to add to the class.\n   * @param {string} classProps.name - Name of the class. Required.\n   * @param {string} [classProps.idAttribute='id'] - Field to use as the unique\n   * identifier for instances of the class.\n   * @param {Object} [classProps.schema] - Value to pass to the {@link Model.setSchema setSchema}\n   * method of the class after the class is created.\n   */\n  extend (props, classProps) {\n    const Parent = this\n    let Child\n\n    Parent.dbg('extend', 'props:', props, 'classProps:', classProps)\n\n    props || (props = {})\n    classProps || (classProps = {})\n\n    const initialize = props.initialize\n    delete props.initialize\n\n    if (props.hasOwnProperty('constructor')) {\n      Child = props.constructor\n      delete props.constructor\n    } else {\n      if (!classProps.name) {\n        throw new TypeError(`name: Expected string, found ${typeof classProps.name}!`)\n      }\n      if (classProps.csp) {\n        Child = function (...args) {\n          utils.classCallCheck(this, Child)\n          const _this = utils.possibleConstructorReturn(this, (Child.__super__ || Object.getPrototypeOf(Child)).apply(this, args))\n          if (initialize) {\n            initialize.apply(_this, args)\n          }\n          return _this\n        }\n      } else {\n        const name = utils.pascalCase(classProps.name)\n        const func = `return function ${name}() {\n                        classCallCheck(this, ${name})\n                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                          args[_key] = arguments[_key];\n                        }\n                        var _this = possibleConstructorReturn(this, (${name}.__super__ || Object.getPrototypeOf(${name})).apply(this, args));\n                        if (initialize) {\n                          initialize.apply(_this, arguments)\n                        }\n                        return _this\n                      }`\n        Child = new Function('classCallCheck', 'possibleConstructorReturn', 'Parent', 'initialize', func)(utils.classCallCheck, utils.possibleConstructorReturn, Parent, initialize) // eslint-disable-line\n      }\n    }\n\n    classProps.shortname = classProps.shortname || utils.camelCase(Child.name || classProps.name)\n    delete classProps.name\n\n    const _schema = classProps.schema\n    delete classProps.schema\n\n    Child.prototype = Object.create(Parent && Parent.prototype, {\n      constructor: {\n        value: Child,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    })\n\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(Child, Parent)\n    } else if (classProps.strictEs6Class) {\n      Child.__proto__ = Parent // eslint-disable-line\n    } else {\n      utils.forOwn(Parent, function (value, key) {\n        Child[key] = value\n      })\n    }\n    Object.defineProperty(Child, '__super__', {\n      configurable: true,\n      value: Parent\n    })\n\n    configure(props)(Child.prototype)\n    configure(classProps)(Child)\n    if (_schema) {\n      setSchema(_schema)(Child)\n    }\n\n    return Child\n  }\n})\n\n/**\n * Register a new event listener on this Model.\n *\n * @name on\n * @memberOf! Model\n * @method\n */\n\n/**\n * Remove an event listener from this Model.\n *\n * @name off\n * @memberOf! Model\n * @method\n */\n\n/**\n * Trigger an event on this Model.\n *\n * @name emit\n * @memberOf! Model\n * @method\n */\n\n/**\n * Allow Models themselves emit events.\n *\n * A Model's registered listeners are stored on the Model's `__events` property.\n */\nutils.eventify(\n  Model,\n  function () {\n    return this._events()\n  },\n  function (value) {\n    this._events(value)\n  },\n  true\n)\n\n/**\n * Allow instancess to emit events.\n *\n * An instance's registered listeners are stored in the instance's private data\n * hash.\n */\nutils.eventify(\n  Model.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n","import {\n  addHiddenPropsToTarget,\n  classCallCheck,\n  fillIn,\n  forOwn,\n  isObject,\n  isString\n} from '../utils'\nimport {Collection} from '../collection/index'\nimport {Model} from '../model/index'\n\nexport function DS (opts) {\n  const self = this\n  classCallCheck(self, DS)\n\n  opts || (opts = {})\n  self.defaults = {}\n\n  for (var key in opts) {\n    self.defaults[key] = opts[key]\n  }\n  self.models = {}\n  self.collections = {}\n}\n\naddHiddenPropsToTarget(DS.prototype, {\n  defineModel (name, opts) {\n    const self = this\n\n    if (isObject(name)) {\n      opts = name\n      name = opts.name\n    }\n    opts || (opts = {})\n    opts.relations || (opts.relations = {})\n    fillIn(opts, self.defaults)\n\n    const methods = opts.methods || {}\n    delete opts.methods\n    const Parent = self.models[opts.extends]\n\n    const Child = (Parent || Model).extend(methods, opts)\n    self.models[name] = Child\n\n    Child.getModel = function (name) {\n      return self.models[name]\n    }\n\n    forOwn(opts.relations, function (group, type) {\n      forOwn(group, function (relations, name) {\n        if (isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach(function (def) {\n          const Relation = self.models[name] || name\n          if (type === 'belongsTo') {\n            return Child.belongsTo(Relation, def)\n          }\n          if (type === 'hasOne') {\n            return Child.hasOne(Relation, def)\n          }\n          return Child.hasMany(Relation, def)\n        })\n      })\n    })\n\n    return Child\n  },\n\n  defineCollection (name, opts, Ctor) {\n    const self = this\n    opts || (opts = {})\n    if (isString(opts.model)) {\n      opts.model = self.models[name]\n    }\n    const collection = new (Ctor || Collection)([], opts)\n    self.collection[name] = collection\n    return collection\n  },\n\n  model (name) {\n    return this.models[name]\n  },\n\n  collection (name) {\n    return this.collections[name]\n  },\n\n  registerAdapter (...args) {\n    forOwn(this.models, function (Model) {\n      Model.registerAdapter(...args)\n    })\n  }\n})\n\nDS.prototype.defineResource = DS.prototype.defineModel\n","import {\n  copy,\n  fillIn,\n  forOwn,\n  get,\n  isArray,\n  isBoolean,\n  isFunction,\n  isInteger,\n  isNumber,\n  isNull,\n  isObject,\n  isString,\n  isUndefined\n} from '../utils'\n\nexport const types = {\n  array: isArray,\n  boolean: isBoolean,\n  integer: isInteger,\n  'null': isNull,\n  number: isNumber,\n  object: isObject,\n  string: isString\n}\n\nexport const typeGroupValidators = {}\nexport const validationKeywords = {}\n\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\nconst validateKeyword = function (op, value, schema, opts) {\n  return !isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\n}\n\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\n  })\n  return errors.length ? errors : undefined\n}\n\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @param {*} value\n * @param {Object} [schema]\n * @param {Object} [opts] Configuration options.\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * @param {*} value\n * @param {Object} [schema]\n * @param {Object} [opts]\n */\nexport const validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  let shouldPop\n  let prevProp = opts.prop\n  if (isUndefined(schema)) {\n    return\n  }\n  if (!isObject(schema)) {\n    throw new Error(`Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (isUndefined(opts.path)) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (!isUndefined(opts.prop)) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema['extends']) {\n    // opts.path = path\n    // opts.prop = prop\n    if (isFunction(schema['extends'].validate)) {\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\n    }\n  }\n  if (isUndefined(value)) {\n    // Check if property is required\n    if (schema.required === true) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\nfillIn(validationKeywords, {\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema['enum']\n    if (possibleValues.indexOf(value) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n      // TODO: Account for value of exclusiveMaximum in messaging\n      return makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   */\n  maxItems (value, schema, opts) {\n    return maxLengthCommon('maxItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\n   */\n  maxProperties (value, schema, opts) {\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n      // TODO: Account for value of exclusiveMinimum in messaging\n      return makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   */\n  minItems (value, schema, opts) {\n    return minLengthCommon('minItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\n   */\n  minProperties (value, schema, opts) {\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\n   */\n  multipleOf (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\n    // \"s\": The property set of the instance to validate.\n    const toValidate = {}\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    // Collect set \"s\"\n    forOwn(value, function (_value, prop) {\n      toValidate[prop] = undefined\n    })\n    // Remove from \"s\" all elements of \"p\", if any.\n    forOwn(properties || {}, function (_schema, prop) {\n      if (isUndefined(value[prop]) && !isUndefined(_schema['default'])) {\n        value[prop] = copy(_schema['default'])\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      delete toValidate[prop]\n    })\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\n    // matches.\n    forOwn(patternProperties, function (_schema, pattern) {\n      forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          delete toValidate[prop]\n        }\n      })\n    })\n    const keys = Object.keys(toValidate)\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n      }\n    } else if (isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\n   */\n  required (value, schema, opts) {\n    const required = schema.required\n    let errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (isUndefined(get(value, prop))) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (item === value[j]) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n})\n\nfillIn(typeGroupValidators, {\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13\n   * @param {*} value\n   * @param {Object} [schema]\n   * @param {Object} [opts] Configuration options.\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53\n   * @param {*} value\n   * @param {Object} [schema]\n   * @param {Object} [opts] Configuration options.\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25\n   * @param {*} value\n   * @param {Object} [schema]\n   * @param {Object} [opts] Configuration options.\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n})\n\n/**\n * js-data's Schema class.\n * @class Schema\n *\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport function Schema (definition) {\n  // const self = this\n  definition || (definition = {})\n  // TODO: schema validation\n  fillIn(this, definition)\n\n  // TODO: rework this to make sure all possible keywords are converted\n  // if (definition.properties) {\n  //   forOwn(definition.properties, function (_definition, prop) {\n  //     definition.properties[prop] = new Schema(_definition)\n  //   })\n  // }\n}\n\n/**\n * Validate the provided value against this schema.\n *\n * @param {*} value Value to validate.\n * @param {Object} [opts] Configuration options.\n * @return {(array|undefined)} Array of errors or `undefined` if valid.\n */\nSchema.prototype.validate = function (value, opts) {\n  return validate(value, this, opts)\n}\n","/**\n * Registered as `js-data` in NPM and Bower.\n * #### Script tag\n * ```js\n * window.JSData\n * ```\n * #### CommonJS\n * ```js\n * var JSData = require('js-data')\n * ```\n * #### ES6 Modules\n * ```js\n * import JSData from 'js-data'\n * ```\n * #### AMD\n * ```js\n * define('myApp', ['js-data'], function (JSData) { ... })\n * ```\n *\n * @module js-data\n * @property {Function} belongsTo - {@link module:js-data.exports.belongsTo belongsTo}\n * decorator function.\n * @property {Function} configure - {@link module:js-data.exports.configure configure}\n * decorator function.\n * @property {Function} Collection - {@link Collection} class.\n * @property {Function} DS - {@link DS} class.\n * @property {Function} hasMany - {@link module:js-data.exports.hasMany hasMany}\n * decorator function.\n * @property {Function} hasOne - {@link module:js-data.exports.hasOne hasOne}\n * decorator function.\n * @property {Function} initialize - {@link module:js-data.exports.initialize initialize}\n * decorator function.\n * @property {Function} Model - {@link Model} class.\n * @property {Function} registerAdapter - {@link registerAdapter} decorator\n * function.\n * @property {Function} setSchema - {@link setSchema} decorator function.\n * @property {Function} Query - {@link Query} class.\n * @property {Object} utils - Utility methods used by the `js-data` module. See\n * {@link module:js-data.module:utils utils}.\n * @property {Object} version - Details of the current version of the `js-data`\n * module.\n * @property {string} version.full - The full semver value.\n * @property {number} version.major - The major version number.\n * @property {number} version.minor - The minor version number.\n * @property {number} version.patch - The patch version number.\n * @property {(string|boolean)} version.alpha - The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta - The beta version value,\n * otherwise `false` if the current version is not beta.\n */\n\nexport * from './collection/index'\nexport * from './datastore/index'\n\nexport * from './decorators/index'\nexport * from './model/index'\nexport * from './schema/index'\nimport * as _utils from './utils'\nexport const utils = _utils\n\nexport const version = {\n  full: '<%= pkg.version %>',\n  major: parseInt('<%= major %>', 10),\n  minor: parseInt('<%= minor %>', 10),\n  patch: parseInt('<%= patch %>', 10),\n  alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\n  beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false\n}\n"],"names":["set","resolve","op","utils.resolve","utils.get","utils.set","utils.unset","utils.copy","utils.addHiddenPropsToTarget","utils.isString","utils.isFunction","utils.isSorN","utils.isObject","utils.fillIn","utils.isArray","_belongsTo","_hasMany","_hasOne","_setSchema","_configure","_registerAdapter","utils.possibleConstructorReturn","utils.pascalCase","utils.classCallCheck","utils.camelCase","utils.eventify"],"mappings":"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"}